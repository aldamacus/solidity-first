{
	"id": "73d2b191d3b7e68e80b37a7d8802cdd7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"VaultCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract VaultCoin is ERC20, Ownable {\r\n\r\nuint256 private initialSupply = 100000000 * 10**decimals();\r\nuint256 public  maxTxAmount = initialSupply;\r\nuint256 public  cooldownTime = 1 minutes;\r\nuint256 public  taxFees = 5;\r\nuint256 public  slippageFees = 2;\r\n\r\nbool private _whiteListingEnabled= false;\r\nbool private _taxEnabled= false;\r\n\r\naddress public taxAddress;\r\n\r\nbool private _blackListingEnabled = false;\r\n\r\nmapping(address=>bool) private _blackList;\r\nmapping(address=>bool) private _taxList;\r\nmapping(address=>bool) private _whiteList;\r\nmapping(address=>uint256) private _lastTxTime;\r\n\r\nconstructor(address initialOwner, address _taxAddress)\r\n    ERC20(\"VaultCoin\", \"Vault\")\r\n    Ownable(initialOwner){\r\n        _mint(initialOwner,initialSupply); // mint initial supply to the initial owner\r\n        _whiteList[initialOwner] = true;\r\n        taxAddress=_taxAddress;\r\n    }\r\n    \r\n    \r\n    function renounceOwnership() public override onlyOwner{\r\n    \r\n         //transferOwnership(address(0x000000000000000000000000000000000000dEaD));\r\n       super.renounceOwnership();\r\n    }\r\n\r\n    function enableWhiteListing() external onlyOwner\r\n    {\r\n        _whiteListingEnabled=true;\r\n    }\r\n\r\n    function enableBlackListing() external onlyOwner\r\n    {\r\n        _blackListingEnabled=true;\r\n    }\r\n \r\n   function enableTax() external onlyOwner\r\n    {\r\n        _taxEnabled=true;\r\n    }\r\n\r\n    function disableTax() external onlyOwner\r\n    {\r\n        _taxEnabled=false;\r\n    }\r\n \r\n\r\n    function addToWhiteList(address account)     external onlyOwner \r\n        {\r\n        \r\n            require(!_blackList[account],\"Blacklisted accounts cannot be whitelisted\");\r\n             _whiteList[account] = true;\r\n          \r\n        }\r\n        \r\n    function addToBlacklist(address account)     external onlyOwner \r\n        {\r\n     \r\n             _blackList[account] = true;\r\n            \r\n        }\r\n\r\n\r\n \r\n    function removeFromBlacklist(address account)     external onlyOwner \r\n        {\r\n           \r\n             _blackList[account] = false;\r\n        }\r\n    \r\n    function removeFromWhiteList(address account)     external onlyOwner \r\n        {\r\n    \r\n             _whiteList[account] = false;\r\n        }\r\n\r\n\r\n    function isBlacklisted(address account) external view returns (bool) \r\n        {\r\n            return _blackList[account];\r\n        }\r\n\r\n    function isWhiteListed(address account) external view returns (bool) \r\n        {\r\n            return _whiteList[account];\r\n        }\r\n\r\n        function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner {\r\n            maxTxAmount = newMaxTxAmount;\r\n        //  emit MaximumTransferLimitUpdated(_maxTxAmount);\r\n        \r\n        }\r\n\r\n        function getMaxTxAmount() external view returns(uint256){\r\n            return maxTxAmount;\r\n        \r\n        }\r\n\r\n        function getContractDetials() external view returns (address, uint256, uint256, uint256)\r\n        {\r\n            return (owner(),maxTxAmount,cooldownTime,initialSupply);\r\n        }\r\n\r\n\r\n        function setCooldownTime(uint256 newCooldownTime) external onlyOwner{\r\n            cooldownTime=newCooldownTime;      \r\n        }\r\n\r\n\r\n    function _update(address from, address to, uint256 value) internal override {\r\n        require(!_blackList[to] && !_blackList[from],\"Blacklisted address\");\r\n        if(_whiteListingEnabled){\r\n            require(_whiteList[from] && _whiteList[to], \"Both addresses must be whitelisted\");\r\n        }\r\n        require(value <= maxTxAmount,\"Token transfer limit exceeded\");\r\n        require(block.timestamp >= _lastTxTime[from] +cooldownTime,\"Cooldown time period\");\r\n        _lastTxTime[from] = block.timestamp;\r\n    \r\n        \r\n        if(_taxList[from] || !_taxEnabled){\r\n           // do nothing related to taxes. They are exempted\r\n            super._update(from, to, value);\r\n        }else if(_taxEnabled){ \r\n            uint256 totalFees = (value * (taxFees+slippageFees))/100 ; //Calculating taxes based on value and fees\r\n            value =  value - totalFees;\r\n            super._update(from, taxAddress, value);\r\n        }        \r\n    \r\n    }\r\n\r\n// ************************** Taxes and Slippage ************************************\r\n    function setTaxes(uint256 newTaxFee) external onlyOwner{\r\n        require(newTaxFee<=10, \"Tax fee cannot be higher than 10%\");\r\n        taxFees=newTaxFee;\r\n    }\r\n\r\n    function getSlippageFees() external view returns (uint256){\r\n        return slippageFees;\r\n    }\r\n    function getTaxes() external view returns (uint256){\r\n        return taxFees;\r\n    }\r\n\r\n     function setSlippageFees(uint256 newSlippageFee) external onlyOwner{\r\n        require(newSlippageFee<=5, \"Slippage fees cannot be higher than 5%\");\r\n        slippageFees=newSlippageFee;\r\n    }\r\n\r\n    function addExemptionToTaxes(address account)     external onlyOwner {\r\n             _taxList[account] = true;    \r\n    }\r\n\r\n    function removeExemptionFromTaxes(address account)     external onlyOwner{ \r\n             _taxList[account] = false;    \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"VaultCoin.sol": {
				"VaultCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_taxAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addExemptionToTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldownTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableBlackListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableWhiteListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractDetials",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSlippageFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhiteListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeExemptionFromTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newCooldownTime",
									"type": "uint256"
								}
							],
							"name": "setCooldownTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxTxAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxTxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newSlippageFee",
									"type": "uint256"
								}
							],
							"name": "setSlippageFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTaxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slippageFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VaultCoin.sol\":174:5203  contract VaultCoin is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"VaultCoin.sol\":264:274  decimals() */\n  tag_1\n    /* \"VaultCoin.sol\":264:272  decimals */\n  shl(0x20, tag_2)\n    /* \"VaultCoin.sol\":264:274  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"VaultCoin.sol\":260:262  10 */\n  0x0a\n    /* \"VaultCoin.sol\":260:274  10**decimals() */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"VaultCoin.sol\":248:257  100000000 */\n  0x05f5e100\n    /* \"VaultCoin.sol\":248:274  100000000 * 10**decimals() */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"VaultCoin.sol\":216:274  uint256 private initialSupply = 100000000 * 10**decimals() */\n  0x06\n  sstore\n    /* \"VaultCoin.sol\":307:320  initialSupply */\n  sload(0x06)\n    /* \"VaultCoin.sol\":277:320  uint256 public  maxTxAmount = initialSupply */\n  0x07\n  sstore\n    /* \"VaultCoin.sol\":354:363  1 minutes */\n  0x3c\n    /* \"VaultCoin.sol\":323:363  uint256 public  cooldownTime = 1 minutes */\n  0x08\n  sstore\n    /* \"VaultCoin.sol\":392:393  5 */\n  0x05\n    /* \"VaultCoin.sol\":366:393  uint256 public  taxFees = 5 */\n  0x09\n  sstore\n    /* \"VaultCoin.sol\":427:428  2 */\n  0x02\n    /* \"VaultCoin.sol\":396:428  uint256 public  slippageFees = 2 */\n  0x0a\n  sstore\n    /* \"VaultCoin.sol\":468:473  false */\n  0x00\n    /* \"VaultCoin.sol\":433:473  bool private _whiteListingEnabled= false */\n  0x0b\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":502:507  false */\n  0x00\n    /* \"VaultCoin.sol\":476:507  bool private _taxEnabled= false */\n  0x0b\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":578:583  false */\n  0x00\n    /* \"VaultCoin.sol\":542:583  bool private _blackListingEnabled = false */\n  0x0b\n  exp(0x0100, 0x16)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":768:1053  constructor(address initialOwner, address _taxAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  revert(0x00, 0x00)\ntag_7:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"VaultCoin.sol\":869:881  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x5661756c74436f696e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5661756c74000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_16\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"VaultCoin.sol\":893:926  _mint(initialOwner,initialSupply) */\n  tag_24\n    /* \"VaultCoin.sol\":899:911  initialOwner */\n  dup3\n    /* \"VaultCoin.sol\":912:925  initialSupply */\n  sload(0x06)\n    /* \"VaultCoin.sol\":893:898  _mint */\n  shl(0x20, tag_25)\n    /* \"VaultCoin.sol\":893:926  _mint(initialOwner,initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"VaultCoin.sol\":1008:1012  true */\n  0x01\n    /* \"VaultCoin.sol\":981:991  _whiteList */\n  0x0e\n    /* \"VaultCoin.sol\":981:1005  _whiteList[initialOwner] */\n  0x00\n    /* \"VaultCoin.sol\":992:1004  initialOwner */\n  dup5\n    /* \"VaultCoin.sol\":981:1005  _whiteList[initialOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"VaultCoin.sol\":981:1012  _whiteList[initialOwner] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":1034:1045  _taxAddress */\n  dup1\n    /* \"VaultCoin.sol\":1023:1033  taxAddress */\n  0x0b\n  0x02\n    /* \"VaultCoin.sol\":1023:1045  taxAddress=_taxAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":768:1053  constructor(address initialOwner, address _taxAddress)... */\n  pop\n  pop\n    /* \"VaultCoin.sol\":174:5203  contract VaultCoin is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"VaultCoin.sol\":3330:4281  function _update(address from, address to, uint256 value) internal override {... */\ntag_33:\n    /* \"VaultCoin.sol\":3426:3436  _blackList */\n  0x0c\n    /* \"VaultCoin.sol\":3426:3440  _blackList[to] */\n  0x00\n    /* \"VaultCoin.sol\":3437:3439  to */\n  dup4\n    /* \"VaultCoin.sol\":3426:3440  _blackList[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3425:3440  !_blackList[to] */\n  iszero\n    /* \"VaultCoin.sol\":3425:3461  !_blackList[to] && !_blackList[from] */\n  dup1\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"VaultCoin.sol\":3445:3455  _blackList */\n  0x0c\n    /* \"VaultCoin.sol\":3445:3461  _blackList[from] */\n  0x00\n    /* \"VaultCoin.sol\":3456:3460  from */\n  dup5\n    /* \"VaultCoin.sol\":3445:3461  _blackList[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3444:3461  !_blackList[from] */\n  iszero\n    /* \"VaultCoin.sol\":3425:3461  !_blackList[to] && !_blackList[from] */\ntag_35:\n    /* \"VaultCoin.sol\":3417:3484  require(!_blackList[to] && !_blackList[from],\"Blacklisted address\") */\n  tag_36\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_36:\n    /* \"VaultCoin.sol\":3498:3518  _whiteListingEnabled */\n  0x0b\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3495:3627  if(_whiteListingEnabled){... */\n  iszero\n  tag_39\n  jumpi\n    /* \"VaultCoin.sol\":3542:3552  _whiteList */\n  0x0e\n    /* \"VaultCoin.sol\":3542:3558  _whiteList[from] */\n  0x00\n    /* \"VaultCoin.sol\":3553:3557  from */\n  dup5\n    /* \"VaultCoin.sol\":3542:3558  _whiteList[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3542:3576  _whiteList[from] && _whiteList[to] */\n  dup1\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"VaultCoin.sol\":3562:3572  _whiteList */\n  0x0e\n    /* \"VaultCoin.sol\":3562:3576  _whiteList[to] */\n  0x00\n    /* \"VaultCoin.sol\":3573:3575  to */\n  dup4\n    /* \"VaultCoin.sol\":3562:3576  _whiteList[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3542:3576  _whiteList[from] && _whiteList[to] */\ntag_40:\n    /* \"VaultCoin.sol\":3534:3615  require(_whiteList[from] && _whiteList[to], \"Both addresses must be whitelisted\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"VaultCoin.sol\":3495:3627  if(_whiteListingEnabled){... */\ntag_39:\n    /* \"VaultCoin.sol\":3654:3665  maxTxAmount */\n  sload(0x07)\n    /* \"VaultCoin.sol\":3645:3650  value */\n  dup2\n    /* \"VaultCoin.sol\":3645:3665  value <= maxTxAmount */\n  gt\n  iszero\n    /* \"VaultCoin.sol\":3637:3698  require(value <= maxTxAmount,\"Token transfer limit exceeded\") */\n  tag_44\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_44:\n    /* \"VaultCoin.sol\":3755:3767  cooldownTime */\n  sload(0x08)\n    /* \"VaultCoin.sol\":3736:3747  _lastTxTime */\n  0x0f\n    /* \"VaultCoin.sol\":3736:3753  _lastTxTime[from] */\n  0x00\n    /* \"VaultCoin.sol\":3748:3752  from */\n  dup6\n    /* \"VaultCoin.sol\":3736:3753  _lastTxTime[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"VaultCoin.sol\":3736:3767  _lastTxTime[from] +cooldownTime */\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"VaultCoin.sol\":3717:3732  block.timestamp */\n  timestamp\n    /* \"VaultCoin.sol\":3717:3767  block.timestamp >= _lastTxTime[from] +cooldownTime */\n  lt\n  iszero\n    /* \"VaultCoin.sol\":3709:3791  require(block.timestamp >= _lastTxTime[from] +cooldownTime,\"Cooldown time period\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_49:\n    /* \"VaultCoin.sol\":3822:3837  block.timestamp */\n  timestamp\n    /* \"VaultCoin.sol\":3802:3813  _lastTxTime */\n  0x0f\n    /* \"VaultCoin.sol\":3802:3819  _lastTxTime[from] */\n  0x00\n    /* \"VaultCoin.sol\":3814:3818  from */\n  dup6\n    /* \"VaultCoin.sol\":3802:3819  _lastTxTime[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"VaultCoin.sol\":3802:3837  _lastTxTime[from] = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"VaultCoin.sol\":3867:3875  _taxList */\n  0x0d\n    /* \"VaultCoin.sol\":3867:3881  _taxList[from] */\n  0x00\n    /* \"VaultCoin.sol\":3876:3880  from */\n  dup5\n    /* \"VaultCoin.sol\":3867:3881  _taxList[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3867:3897  _taxList[from] || !_taxEnabled */\n  dup1\n  tag_52\n  jumpi\n  pop\n    /* \"VaultCoin.sol\":3886:3897  _taxEnabled */\n  0x0b\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":3885:3897  !_taxEnabled */\n  iszero\n    /* \"VaultCoin.sol\":3867:3897  _taxList[from] || !_taxEnabled */\ntag_52:\n    /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\n  iszero\n  tag_53\n  jumpi\n    /* \"VaultCoin.sol\":3975:4005  super._update(from, to, value) */\n  tag_54\n    /* \"VaultCoin.sol\":3989:3993  from */\n  dup4\n    /* \"VaultCoin.sol\":3995:3997  to */\n  dup4\n    /* \"VaultCoin.sol\":3999:4004  value */\n  dup4\n    /* \"VaultCoin.sol\":3975:3988  super._update */\n  shl(0x20, tag_55)\n    /* \"VaultCoin.sol\":3975:4005  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_54:\n    /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\n  jump(tag_56)\ntag_53:\n    /* \"VaultCoin.sol\":4025:4036  _taxEnabled */\n  0x0b\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"VaultCoin.sol\":4022:4260  if(_taxEnabled){ ... */\n  iszero\n  tag_57\n  jumpi\n    /* \"VaultCoin.sol\":4053:4070  uint256 totalFees */\n  0x00\n    /* \"VaultCoin.sol\":4106:4109  100 */\n  0x64\n    /* \"VaultCoin.sol\":4091:4103  slippageFees */\n  sload(0x0a)\n    /* \"VaultCoin.sol\":4083:4090  taxFees */\n  sload(0x09)\n    /* \"VaultCoin.sol\":4083:4103  taxFees+slippageFees */\n  tag_58\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_58:\n    /* \"VaultCoin.sol\":4074:4079  value */\n  dup4\n    /* \"VaultCoin.sol\":4074:4104  value * (taxFees+slippageFees) */\n  tag_59\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_59:\n    /* \"VaultCoin.sol\":4073:4109  (value * (taxFees+slippageFees))/100 */\n  tag_60\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"VaultCoin.sol\":4053:4109  uint256 totalFees = (value * (taxFees+slippageFees))/100 */\n  swap1\n  pop\n    /* \"VaultCoin.sol\":4186:4195  totalFees */\n  dup1\n    /* \"VaultCoin.sol\":4178:4183  value */\n  dup3\n    /* \"VaultCoin.sol\":4178:4195  value - totalFees */\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n    /* \"VaultCoin.sol\":4169:4195  value =  value - totalFees */\n  swap2\n  pop\n    /* \"VaultCoin.sol\":4210:4248  super._update(from, taxAddress, value) */\n  tag_64\n    /* \"VaultCoin.sol\":4224:4228  from */\n  dup5\n    /* \"VaultCoin.sol\":4230:4240  taxAddress */\n  0x0b\n  0x02\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"VaultCoin.sol\":4242:4247  value */\n  dup5\n    /* \"VaultCoin.sol\":4210:4223  super._update */\n  shl(0x20, tag_55)\n    /* \"VaultCoin.sol\":4210:4248  super._update(from, taxAddress, value) */\n  0x20\n  shr\n  jump\t// in\ntag_64:\n    /* \"VaultCoin.sol\":4037:4260  { ... */\n  pop\n    /* \"VaultCoin.sol\":4022:4260  if(_taxEnabled){ ... */\ntag_57:\n    /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\ntag_56:\n    /* \"VaultCoin.sol\":3330:4281  function _update(address from, address to, uint256 value) internal override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_66\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_67\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_67:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_68)\ntag_66:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_70\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_71\n  jump\t// in\ntag_70:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_69:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_68:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_72\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_73)\ntag_72:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_73:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_74\n  swap2\n  swap1\n  tag_75\n  jump\t// in\ntag_74:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_76:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_77:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_78:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  0x00\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_124:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_128\n  tag_76\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":526:576   */\ntag_127:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_129:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_130\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_77\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_124)\ntag_126:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_79:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_131)\n    /* \"#utility.yul\":1390:1430   */\ntag_132:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_131)\n    /* \"#utility.yul\":1439:1475   */\ntag_133:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_134)\n    /* \"#utility.yul\":1578:1605   */\ntag_135:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_131)\n    /* \"#utility.yul\":1614:1805   */\ntag_136:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_138\n  tag_76\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":1643:1686   */\ntag_137:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_140\n  tag_76\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":1737:1777   */\ntag_139:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_131)\n    /* \"#utility.yul\":1528:1805   */\ntag_134:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_143\n  tag_76\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":1992:2032   */\ntag_142:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_131)\n    /* \"#utility.yul\":1814:2060   */\ntag_141:\n    /* \"#utility.yul\":2085:2127   */\n  tag_144\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_78\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_146\n  tag_76\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":2137:2188   */\ntag_145:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_131:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_80:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2403   */\ntag_81:\n    /* \"#utility.yul\":2352:2359   */\n  0x00\n    /* \"#utility.yul\":2392:2396   */\n  0xff\n    /* \"#utility.yul\":2385:2390   */\n  dup3\n    /* \"#utility.yul\":2381:2397   */\n  and\n    /* \"#utility.yul\":2370:2397   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2409:2690   */\ntag_4:\n    /* \"#utility.yul\":2467:2472   */\n  0x00\n    /* \"#utility.yul\":2491:2514   */\n  tag_150\n    /* \"#utility.yul\":2509:2513   */\n  dup3\n    /* \"#utility.yul\":2491:2514   */\n  tag_80\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":2483:2514   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2560   */\n  tag_151\n    /* \"#utility.yul\":2551:2559   */\n  dup4\n    /* \"#utility.yul\":2535:2560   */\n  tag_81\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":2523:2560   */\n  swap3\n  pop\n    /* \"#utility.yul\":2579:2683   */\n  tag_152\n    /* \"#utility.yul\":2616:2682   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2606:2614   */\n  dup5\n    /* \"#utility.yul\":2600:2604   */\n  dup5\n    /* \"#utility.yul\":2579:2683   */\n  tag_79\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":2570:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2409:2690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2696:3106   */\ntag_6:\n    /* \"#utility.yul\":2736:2743   */\n  0x00\n    /* \"#utility.yul\":2759:2779   */\n  tag_154\n    /* \"#utility.yul\":2777:2778   */\n  dup3\n    /* \"#utility.yul\":2759:2779   */\n  tag_80\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":2754:2779   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:2813   */\n  tag_155\n    /* \"#utility.yul\":2811:2812   */\n  dup4\n    /* \"#utility.yul\":2793:2813   */\n  tag_80\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":2788:2813   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  dup3\n    /* \"#utility.yul\":2845:2846   */\n  dup3\n    /* \"#utility.yul\":2841:2850   */\n  mul\n    /* \"#utility.yul\":2870:2900   */\n  tag_156\n    /* \"#utility.yul\":2888:2899   */\n  dup2\n    /* \"#utility.yul\":2870:2900   */\n  tag_80\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":2859:2900   */\n  swap2\n  pop\n    /* \"#utility.yul\":3049:3050   */\n  dup3\n    /* \"#utility.yul\":3040:3047   */\n  dup3\n    /* \"#utility.yul\":3036:3051   */\n  div\n    /* \"#utility.yul\":3033:3034   */\n  dup5\n    /* \"#utility.yul\":3030:3052   */\n  eq\n    /* \"#utility.yul\":3010:3011   */\n  dup4\n    /* \"#utility.yul\":3003:3012   */\n  iszero\n    /* \"#utility.yul\":2983:3066   */\n  or\n    /* \"#utility.yul\":2960:3099   */\n  tag_157\n  jumpi\n    /* \"#utility.yul\":3079:3097   */\n  tag_158\n  tag_76\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":2960:3099   */\ntag_157:\n    /* \"#utility.yul\":2744:3106   */\n  pop\n    /* \"#utility.yul\":2696:3106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3193:3310   */\ntag_83:\n    /* \"#utility.yul\":3302:3303   */\n  0x00\n    /* \"#utility.yul\":3299:3300   */\n  0x00\n    /* \"#utility.yul\":3292:3304   */\n  revert\n    /* \"#utility.yul\":3439:3565   */\ntag_85:\n    /* \"#utility.yul\":3476:3483   */\n  0x00\n    /* \"#utility.yul\":3516:3558   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3509:3514   */\n  dup3\n    /* \"#utility.yul\":3505:3559   */\n  and\n    /* \"#utility.yul\":3494:3559   */\n  swap1\n  pop\n    /* \"#utility.yul\":3439:3565   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3571:3667   */\ntag_86:\n    /* \"#utility.yul\":3608:3615   */\n  0x00\n    /* \"#utility.yul\":3637:3661   */\n  tag_164\n    /* \"#utility.yul\":3655:3660   */\n  dup3\n    /* \"#utility.yul\":3637:3661   */\n  tag_85\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":3626:3661   */\n  swap1\n  pop\n    /* \"#utility.yul\":3571:3667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3673:3795   */\ntag_87:\n    /* \"#utility.yul\":3746:3770   */\n  tag_166\n    /* \"#utility.yul\":3764:3769   */\n  dup2\n    /* \"#utility.yul\":3746:3770   */\n  tag_86\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":3739:3744   */\n  dup2\n    /* \"#utility.yul\":3736:3771   */\n  eq\n    /* \"#utility.yul\":3726:3789   */\n  tag_167\n  jumpi\n    /* \"#utility.yul\":3785:3786   */\n  0x00\n    /* \"#utility.yul\":3782:3783   */\n  0x00\n    /* \"#utility.yul\":3775:3787   */\n  revert\n    /* \"#utility.yul\":3726:3789   */\ntag_167:\n    /* \"#utility.yul\":3673:3795   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3801:3944   */\ntag_88:\n    /* \"#utility.yul\":3858:3863   */\n  0x00\n    /* \"#utility.yul\":3889:3895   */\n  dup2\n    /* \"#utility.yul\":3883:3896   */\n  mload\n    /* \"#utility.yul\":3874:3896   */\n  swap1\n  pop\n    /* \"#utility.yul\":3905:3938   */\n  tag_169\n    /* \"#utility.yul\":3932:3937   */\n  dup2\n    /* \"#utility.yul\":3905:3938   */\n  tag_87\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":3801:3944   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3950:4457   */\ntag_9:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4037:4043   */\n  0x00\n    /* \"#utility.yul\":4086:4088   */\n  0x40\n    /* \"#utility.yul\":4074:4083   */\n  dup4\n    /* \"#utility.yul\":4065:4072   */\n  dup6\n    /* \"#utility.yul\":4061:4084   */\n  sub\n    /* \"#utility.yul\":4057:4089   */\n  slt\n    /* \"#utility.yul\":4054:4173   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":4092:4171   */\n  tag_172\n  tag_83\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":4054:4173   */\ntag_171:\n    /* \"#utility.yul\":4212:4213   */\n  0x00\n    /* \"#utility.yul\":4237:4301   */\n  tag_173\n    /* \"#utility.yul\":4293:4300   */\n  dup6\n    /* \"#utility.yul\":4284:4290   */\n  dup3\n    /* \"#utility.yul\":4273:4282   */\n  dup7\n    /* \"#utility.yul\":4269:4291   */\n  add\n    /* \"#utility.yul\":4237:4301   */\n  tag_88\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":4227:4301   */\n  swap3\n  pop\n    /* \"#utility.yul\":4183:4311   */\n  pop\n    /* \"#utility.yul\":4350:4352   */\n  0x20\n    /* \"#utility.yul\":4376:4440   */\n  tag_174\n    /* \"#utility.yul\":4432:4439   */\n  dup6\n    /* \"#utility.yul\":4423:4429   */\n  dup3\n    /* \"#utility.yul\":4412:4421   */\n  dup7\n    /* \"#utility.yul\":4408:4430   */\n  add\n    /* \"#utility.yul\":4376:4440   */\n  tag_88\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":4366:4440   */\n  swap2\n  pop\n    /* \"#utility.yul\":4321:4450   */\n  pop\n    /* \"#utility.yul\":3950:4457   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4463:4562   */\ntag_89:\n    /* \"#utility.yul\":4515:4521   */\n  0x00\n    /* \"#utility.yul\":4549:4554   */\n  dup2\n    /* \"#utility.yul\":4543:4555   */\n  mload\n    /* \"#utility.yul\":4533:4555   */\n  swap1\n  pop\n    /* \"#utility.yul\":4463:4562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4568:4748   */\ntag_90:\n    /* \"#utility.yul\":4616:4693   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4613:4614   */\n  0x00\n    /* \"#utility.yul\":4606:4694   */\n  mstore\n    /* \"#utility.yul\":4713:4717   */\n  0x41\n    /* \"#utility.yul\":4710:4711   */\n  0x04\n    /* \"#utility.yul\":4703:4718   */\n  mstore\n    /* \"#utility.yul\":4737:4741   */\n  0x24\n    /* \"#utility.yul\":4734:4735   */\n  0x00\n    /* \"#utility.yul\":4727:4742   */\n  revert\n    /* \"#utility.yul\":4754:4934   */\ntag_91:\n    /* \"#utility.yul\":4802:4879   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4799:4800   */\n  0x00\n    /* \"#utility.yul\":4792:4880   */\n  mstore\n    /* \"#utility.yul\":4899:4903   */\n  0x22\n    /* \"#utility.yul\":4896:4897   */\n  0x04\n    /* \"#utility.yul\":4889:4904   */\n  mstore\n    /* \"#utility.yul\":4923:4927   */\n  0x24\n    /* \"#utility.yul\":4920:4921   */\n  0x00\n    /* \"#utility.yul\":4913:4928   */\n  revert\n    /* \"#utility.yul\":4940:5260   */\ntag_92:\n    /* \"#utility.yul\":4984:4990   */\n  0x00\n    /* \"#utility.yul\":5021:5022   */\n  0x02\n    /* \"#utility.yul\":5015:5019   */\n  dup3\n    /* \"#utility.yul\":5011:5023   */\n  div\n    /* \"#utility.yul\":5001:5023   */\n  swap1\n  pop\n    /* \"#utility.yul\":5068:5069   */\n  0x01\n    /* \"#utility.yul\":5062:5066   */\n  dup3\n    /* \"#utility.yul\":5058:5070   */\n  and\n    /* \"#utility.yul\":5089:5107   */\n  dup1\n    /* \"#utility.yul\":5079:5160   */\n  tag_179\n  jumpi\n    /* \"#utility.yul\":5145:5149   */\n  0x7f\n    /* \"#utility.yul\":5137:5143   */\n  dup3\n    /* \"#utility.yul\":5133:5150   */\n  and\n    /* \"#utility.yul\":5123:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5079:5160   */\ntag_179:\n    /* \"#utility.yul\":5207:5209   */\n  0x20\n    /* \"#utility.yul\":5199:5205   */\n  dup3\n    /* \"#utility.yul\":5196:5210   */\n  lt\n    /* \"#utility.yul\":5176:5194   */\n  dup2\n    /* \"#utility.yul\":5173:5211   */\n  sub\n    /* \"#utility.yul\":5170:5254   */\n  tag_180\n  jumpi\n    /* \"#utility.yul\":5226:5244   */\n  tag_181\n  tag_91\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":5170:5254   */\ntag_180:\n    /* \"#utility.yul\":4991:5260   */\n  pop\n    /* \"#utility.yul\":4940:5260   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5266:5407   */\ntag_93:\n    /* \"#utility.yul\":5315:5319   */\n  0x00\n    /* \"#utility.yul\":5338:5341   */\n  dup2\n    /* \"#utility.yul\":5330:5341   */\n  swap1\n  pop\n    /* \"#utility.yul\":5361:5364   */\n  dup2\n    /* \"#utility.yul\":5358:5359   */\n  0x00\n    /* \"#utility.yul\":5351:5365   */\n  mstore\n    /* \"#utility.yul\":5395:5399   */\n  0x20\n    /* \"#utility.yul\":5392:5393   */\n  0x00\n    /* \"#utility.yul\":5382:5400   */\n  keccak256\n    /* \"#utility.yul\":5374:5400   */\n  swap1\n  pop\n    /* \"#utility.yul\":5266:5407   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5413:5506   */\ntag_94:\n    /* \"#utility.yul\":5450:5456   */\n  0x00\n    /* \"#utility.yul\":5497:5499   */\n  0x20\n    /* \"#utility.yul\":5492:5494   */\n  0x1f\n    /* \"#utility.yul\":5485:5490   */\n  dup4\n    /* \"#utility.yul\":5481:5495   */\n  add\n    /* \"#utility.yul\":5477:5500   */\n  div\n    /* \"#utility.yul\":5467:5500   */\n  swap1\n  pop\n    /* \"#utility.yul\":5413:5506   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5512:5619   */\ntag_95:\n    /* \"#utility.yul\":5556:5564   */\n  0x00\n    /* \"#utility.yul\":5606:5611   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup3\n    /* \"#utility.yul\":5596:5612   */\n  shl\n    /* \"#utility.yul\":5575:5612   */\n  swap1\n  pop\n    /* \"#utility.yul\":5512:5619   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5625:6018   */\ntag_96:\n    /* \"#utility.yul\":5694:5700   */\n  0x00\n    /* \"#utility.yul\":5744:5745   */\n  0x08\n    /* \"#utility.yul\":5732:5742   */\n  dup4\n    /* \"#utility.yul\":5728:5746   */\n  mul\n    /* \"#utility.yul\":5767:5864   */\n  tag_186\n    /* \"#utility.yul\":5797:5863   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5786:5795   */\n  dup3\n    /* \"#utility.yul\":5767:5864   */\n  tag_95\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":5885:5924   */\n  tag_187\n    /* \"#utility.yul\":5915:5923   */\n  dup7\n    /* \"#utility.yul\":5904:5913   */\n  dup4\n    /* \"#utility.yul\":5885:5924   */\n  tag_95\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5873:5924   */\n  swap6\n  pop\n    /* \"#utility.yul\":5957:5961   */\n  dup1\n    /* \"#utility.yul\":5953:5962   */\n  not\n    /* \"#utility.yul\":5946:5951   */\n  dup5\n    /* \"#utility.yul\":5942:5963   */\n  and\n    /* \"#utility.yul\":5933:5963   */\n  swap4\n  pop\n    /* \"#utility.yul\":6006:6010   */\n  dup1\n    /* \"#utility.yul\":5996:6004   */\n  dup7\n    /* \"#utility.yul\":5992:6011   */\n  and\n    /* \"#utility.yul\":5985:5990   */\n  dup5\n    /* \"#utility.yul\":5982:6012   */\n  or\n    /* \"#utility.yul\":5972:6012   */\n  swap3\n  pop\n    /* \"#utility.yul\":5701:6018   */\n  pop\n  pop\n    /* \"#utility.yul\":5625:6018   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6024:6084   */\ntag_97:\n    /* \"#utility.yul\":6052:6055   */\n  0x00\n    /* \"#utility.yul\":6073:6078   */\n  dup2\n    /* \"#utility.yul\":6066:6078   */\n  swap1\n  pop\n    /* \"#utility.yul\":6024:6084   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6090:6232   */\ntag_98:\n    /* \"#utility.yul\":6140:6149   */\n  0x00\n    /* \"#utility.yul\":6173:6226   */\n  tag_190\n    /* \"#utility.yul\":6191:6225   */\n  tag_191\n    /* \"#utility.yul\":6200:6224   */\n  tag_192\n    /* \"#utility.yul\":6218:6223   */\n  dup5\n    /* \"#utility.yul\":6200:6224   */\n  tag_80\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6191:6225   */\n  tag_97\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":6173:6226   */\n  tag_80\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":6160:6226   */\n  swap1\n  pop\n    /* \"#utility.yul\":6090:6232   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6238:6313   */\ntag_99:\n    /* \"#utility.yul\":6281:6284   */\n  0x00\n    /* \"#utility.yul\":6302:6307   */\n  dup2\n    /* \"#utility.yul\":6295:6307   */\n  swap1\n  pop\n    /* \"#utility.yul\":6238:6313   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6319:6588   */\ntag_100:\n    /* \"#utility.yul\":6429:6468   */\n  tag_195\n    /* \"#utility.yul\":6460:6467   */\n  dup4\n    /* \"#utility.yul\":6429:6468   */\n  tag_98\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":6490:6581   */\n  tag_196\n    /* \"#utility.yul\":6539:6580   */\n  tag_197\n    /* \"#utility.yul\":6563:6579   */\n  dup3\n    /* \"#utility.yul\":6539:6580   */\n  tag_99\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":6531:6537   */\n  dup5\n    /* \"#utility.yul\":6524:6528   */\n  dup5\n    /* \"#utility.yul\":6518:6529   */\n  sload\n    /* \"#utility.yul\":6490:6581   */\n  tag_96\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":6484:6488   */\n  dup3\n    /* \"#utility.yul\":6477:6582   */\n  sstore\n    /* \"#utility.yul\":6395:6588   */\n  pop\n    /* \"#utility.yul\":6319:6588   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6594:6667   */\ntag_101:\n    /* \"#utility.yul\":6639:6642   */\n  0x00\n    /* \"#utility.yul\":6660:6661   */\n  0x00\n    /* \"#utility.yul\":6653:6661   */\n  swap1\n  pop\n    /* \"#utility.yul\":6594:6667   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6673:6862   */\ntag_102:\n    /* \"#utility.yul\":6750:6782   */\n  tag_200\n  tag_101\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":6791:6856   */\n  tag_201\n    /* \"#utility.yul\":6849:6855   */\n  dup2\n    /* \"#utility.yul\":6841:6847   */\n  dup5\n    /* \"#utility.yul\":6835:6839   */\n  dup5\n    /* \"#utility.yul\":6791:6856   */\n  tag_100\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":6726:6862   */\n  pop\n    /* \"#utility.yul\":6673:6862   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6868:7054   */\ntag_103:\n    /* \"#utility.yul\":6928:7048   */\ntag_203:\n    /* \"#utility.yul\":6945:6948   */\n  dup2\n    /* \"#utility.yul\":6938:6943   */\n  dup2\n    /* \"#utility.yul\":6935:6949   */\n  lt\n    /* \"#utility.yul\":6928:7048   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":6999:7038   */\n  tag_206\n    /* \"#utility.yul\":7036:7037   */\n  0x00\n    /* \"#utility.yul\":7029:7034   */\n  dup3\n    /* \"#utility.yul\":6999:7038   */\n  tag_102\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":6972:6973   */\n  0x01\n    /* \"#utility.yul\":6965:6970   */\n  dup2\n    /* \"#utility.yul\":6961:6974   */\n  add\n    /* \"#utility.yul\":6952:6974   */\n  swap1\n  pop\n    /* \"#utility.yul\":6928:7048   */\n  jump(tag_203)\ntag_205:\n    /* \"#utility.yul\":6868:7054   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7060:7603   */\ntag_104:\n    /* \"#utility.yul\":7161:7163   */\n  0x1f\n    /* \"#utility.yul\":7156:7159   */\n  dup3\n    /* \"#utility.yul\":7153:7164   */\n  gt\n    /* \"#utility.yul\":7150:7596   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":7195:7233   */\n  tag_209\n    /* \"#utility.yul\":7227:7232   */\n  dup2\n    /* \"#utility.yul\":7195:7233   */\n  tag_93\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":7279:7308   */\n  tag_210\n    /* \"#utility.yul\":7297:7307   */\n  dup5\n    /* \"#utility.yul\":7279:7308   */\n  tag_94\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":7269:7277   */\n  dup2\n    /* \"#utility.yul\":7265:7309   */\n  add\n    /* \"#utility.yul\":7462:7464   */\n  0x20\n    /* \"#utility.yul\":7450:7460   */\n  dup6\n    /* \"#utility.yul\":7447:7465   */\n  lt\n    /* \"#utility.yul\":7444:7493   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":7483:7491   */\n  dup2\n    /* \"#utility.yul\":7468:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7444:7493   */\ntag_211:\n    /* \"#utility.yul\":7506:7586   */\n  tag_212\n    /* \"#utility.yul\":7562:7584   */\n  tag_213\n    /* \"#utility.yul\":7580:7583   */\n  dup6\n    /* \"#utility.yul\":7562:7584   */\n  tag_94\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":7552:7560   */\n  dup4\n    /* \"#utility.yul\":7548:7585   */\n  add\n    /* \"#utility.yul\":7535:7546   */\n  dup3\n    /* \"#utility.yul\":7506:7586   */\n  tag_103\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":7165:7596   */\n  pop\n  pop\n    /* \"#utility.yul\":7150:7596   */\ntag_208:\n    /* \"#utility.yul\":7060:7603   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:7726   */\ntag_105:\n    /* \"#utility.yul\":7663:7671   */\n  0x00\n    /* \"#utility.yul\":7713:7718   */\n  dup3\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7703:7719   */\n  shr\n    /* \"#utility.yul\":7682:7719   */\n  swap1\n  pop\n    /* \"#utility.yul\":7609:7726   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7732:7901   */\ntag_106:\n    /* \"#utility.yul\":7776:7782   */\n  0x00\n    /* \"#utility.yul\":7809:7860   */\n  tag_216\n    /* \"#utility.yul\":7857:7858   */\n  0x00\n    /* \"#utility.yul\":7853:7859   */\n  not\n    /* \"#utility.yul\":7845:7850   */\n  dup5\n    /* \"#utility.yul\":7842:7843   */\n  0x08\n    /* \"#utility.yul\":7838:7851   */\n  mul\n    /* \"#utility.yul\":7809:7860   */\n  tag_105\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":7805:7861   */\n  not\n    /* \"#utility.yul\":7890:7894   */\n  dup1\n    /* \"#utility.yul\":7884:7888   */\n  dup4\n    /* \"#utility.yul\":7880:7895   */\n  and\n    /* \"#utility.yul\":7870:7895   */\n  swap2\n  pop\n    /* \"#utility.yul\":7783:7901   */\n  pop\n    /* \"#utility.yul\":7732:7901   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7906:8201   */\ntag_107:\n    /* \"#utility.yul\":7982:7986   */\n  0x00\n    /* \"#utility.yul\":8128:8157   */\n  tag_218\n    /* \"#utility.yul\":8153:8156   */\n  dup4\n    /* \"#utility.yul\":8147:8151   */\n  dup4\n    /* \"#utility.yul\":8128:8157   */\n  tag_106\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":8120:8157   */\n  swap2\n  pop\n    /* \"#utility.yul\":8190:8193   */\n  dup3\n    /* \"#utility.yul\":8187:8188   */\n  0x02\n    /* \"#utility.yul\":8183:8194   */\n  mul\n    /* \"#utility.yul\":8177:8181   */\n  dup3\n    /* \"#utility.yul\":8174:8195   */\n  or\n    /* \"#utility.yul\":8166:8195   */\n  swap1\n  pop\n    /* \"#utility.yul\":7906:8201   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8206:9601   */\ntag_15:\n    /* \"#utility.yul\":8323:8360   */\n  tag_220\n    /* \"#utility.yul\":8356:8359   */\n  dup3\n    /* \"#utility.yul\":8323:8360   */\n  tag_89\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8425:8443   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8417:8423   */\n  dup2\n    /* \"#utility.yul\":8414:8444   */\n  gt\n    /* \"#utility.yul\":8411:8467   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":8447:8465   */\n  tag_222\n  tag_90\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":8411:8467   */\ntag_221:\n    /* \"#utility.yul\":8491:8529   */\n  tag_223\n    /* \"#utility.yul\":8523:8527   */\n  dup3\n    /* \"#utility.yul\":8517:8528   */\n  sload\n    /* \"#utility.yul\":8491:8529   */\n  tag_92\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":8576:8643   */\n  tag_224\n    /* \"#utility.yul\":8636:8642   */\n  dup3\n    /* \"#utility.yul\":8628:8634   */\n  dup3\n    /* \"#utility.yul\":8622:8626   */\n  dup6\n    /* \"#utility.yul\":8576:8643   */\n  tag_104\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":8670:8671   */\n  0x00\n    /* \"#utility.yul\":8694:8698   */\n  0x20\n    /* \"#utility.yul\":8681:8698   */\n  swap1\n  pop\n    /* \"#utility.yul\":8726:8728   */\n  0x1f\n    /* \"#utility.yul\":8718:8724   */\n  dup4\n    /* \"#utility.yul\":8715:8729   */\n  gt\n    /* \"#utility.yul\":8743:8744   */\n  0x01\n    /* \"#utility.yul\":8738:9356   */\n  dup2\n  eq\n  tag_226\n  jumpi\n    /* \"#utility.yul\":9400:9401   */\n  0x00\n    /* \"#utility.yul\":9417:9423   */\n  dup5\n    /* \"#utility.yul\":9414:9491   */\n  iszero\n  tag_227\n  jumpi\n    /* \"#utility.yul\":9466:9475   */\n  dup3\n    /* \"#utility.yul\":9461:9464   */\n  dup8\n    /* \"#utility.yul\":9457:9476   */\n  add\n    /* \"#utility.yul\":9451:9477   */\n  mload\n    /* \"#utility.yul\":9442:9477   */\n  swap1\n  pop\n    /* \"#utility.yul\":9414:9491   */\ntag_227:\n    /* \"#utility.yul\":9517:9584   */\n  tag_228\n    /* \"#utility.yul\":9577:9583   */\n  dup6\n    /* \"#utility.yul\":9570:9575   */\n  dup3\n    /* \"#utility.yul\":9517:9584   */\n  tag_107\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":9511:9515   */\n  dup7\n    /* \"#utility.yul\":9504:9585   */\n  sstore\n    /* \"#utility.yul\":9373:9595   */\n  pop\n    /* \"#utility.yul\":8708:9595   */\n  jump(tag_225)\n    /* \"#utility.yul\":8738:9356   */\ntag_226:\n    /* \"#utility.yul\":8790:8794   */\n  0x1f\n    /* \"#utility.yul\":8786:8795   */\n  not\n    /* \"#utility.yul\":8778:8784   */\n  dup5\n    /* \"#utility.yul\":8774:8796   */\n  and\n    /* \"#utility.yul\":8824:8861   */\n  tag_229\n    /* \"#utility.yul\":8856:8860   */\n  dup7\n    /* \"#utility.yul\":8824:8861   */\n  tag_93\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":8883:8884   */\n  0x00\n    /* \"#utility.yul\":8897:9105   */\ntag_230:\n    /* \"#utility.yul\":8911:8918   */\n  dup3\n    /* \"#utility.yul\":8908:8909   */\n  dup2\n    /* \"#utility.yul\":8905:8919   */\n  lt\n    /* \"#utility.yul\":8897:9105   */\n  iszero\n  tag_232\n  jumpi\n    /* \"#utility.yul\":8990:8999   */\n  dup5\n    /* \"#utility.yul\":8985:8988   */\n  dup10\n    /* \"#utility.yul\":8981:9000   */\n  add\n    /* \"#utility.yul\":8975:9001   */\n  mload\n    /* \"#utility.yul\":8967:8973   */\n  dup3\n    /* \"#utility.yul\":8960:9002   */\n  sstore\n    /* \"#utility.yul\":9041:9042   */\n  0x01\n    /* \"#utility.yul\":9033:9039   */\n  dup3\n    /* \"#utility.yul\":9029:9043   */\n  add\n    /* \"#utility.yul\":9019:9043   */\n  swap2\n  pop\n    /* \"#utility.yul\":9088:9090   */\n  0x20\n    /* \"#utility.yul\":9077:9086   */\n  dup6\n    /* \"#utility.yul\":9073:9091   */\n  add\n    /* \"#utility.yul\":9060:9091   */\n  swap5\n  pop\n    /* \"#utility.yul\":8934:8938   */\n  0x20\n    /* \"#utility.yul\":8931:8932   */\n  dup2\n    /* \"#utility.yul\":8927:8939   */\n  add\n    /* \"#utility.yul\":8922:8939   */\n  swap1\n  pop\n    /* \"#utility.yul\":8897:9105   */\n  jump(tag_230)\ntag_232:\n    /* \"#utility.yul\":9133:9139   */\n  dup7\n    /* \"#utility.yul\":9124:9131   */\n  dup4\n    /* \"#utility.yul\":9121:9140   */\n  lt\n    /* \"#utility.yul\":9118:9297   */\n  iszero\n  tag_233\n  jumpi\n    /* \"#utility.yul\":9191:9200   */\n  dup5\n    /* \"#utility.yul\":9186:9189   */\n  dup10\n    /* \"#utility.yul\":9182:9201   */\n  add\n    /* \"#utility.yul\":9176:9202   */\n  mload\n    /* \"#utility.yul\":9234:9282   */\n  tag_234\n    /* \"#utility.yul\":9276:9280   */\n  0x1f\n    /* \"#utility.yul\":9268:9274   */\n  dup10\n    /* \"#utility.yul\":9264:9281   */\n  and\n    /* \"#utility.yul\":9253:9262   */\n  dup3\n    /* \"#utility.yul\":9234:9282   */\n  tag_106\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":9226:9232   */\n  dup4\n    /* \"#utility.yul\":9219:9283   */\n  sstore\n    /* \"#utility.yul\":9141:9297   */\n  pop\n    /* \"#utility.yul\":9118:9297   */\ntag_233:\n    /* \"#utility.yul\":9343:9344   */\n  0x01\n    /* \"#utility.yul\":9339:9340   */\n  0x02\n    /* \"#utility.yul\":9331:9337   */\n  dup9\n    /* \"#utility.yul\":9327:9341   */\n  mul\n    /* \"#utility.yul\":9323:9345   */\n  add\n    /* \"#utility.yul\":9317:9321   */\n  dup9\n    /* \"#utility.yul\":9310:9346   */\n  sstore\n    /* \"#utility.yul\":8745:9356   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8708:9595   */\ntag_225:\n  pop\n    /* \"#utility.yul\":8298:9601   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8206:9601   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9607:9725   */\ntag_108:\n    /* \"#utility.yul\":9694:9718   */\n  tag_236\n    /* \"#utility.yul\":9712:9717   */\n  dup2\n    /* \"#utility.yul\":9694:9718   */\n  tag_86\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":9689:9692   */\n  dup3\n    /* \"#utility.yul\":9682:9719   */\n  mstore\n    /* \"#utility.yul\":9607:9725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9731:9953   */\ntag_20:\n    /* \"#utility.yul\":9824:9828   */\n  0x00\n    /* \"#utility.yul\":9862:9864   */\n  0x20\n    /* \"#utility.yul\":9851:9860   */\n  dup3\n    /* \"#utility.yul\":9847:9865   */\n  add\n    /* \"#utility.yul\":9839:9865   */\n  swap1\n  pop\n    /* \"#utility.yul\":9875:9946   */\n  tag_238\n    /* \"#utility.yul\":9943:9944   */\n  0x00\n    /* \"#utility.yul\":9932:9941   */\n  dup4\n    /* \"#utility.yul\":9928:9945   */\n  add\n    /* \"#utility.yul\":9919:9925   */\n  dup5\n    /* \"#utility.yul\":9875:9946   */\n  tag_108\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":9731:9953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9959:10128   */\ntag_109:\n    /* \"#utility.yul\":10043:10054   */\n  0x00\n    /* \"#utility.yul\":10077:10083   */\n  dup3\n    /* \"#utility.yul\":10072:10075   */\n  dup3\n    /* \"#utility.yul\":10065:10084   */\n  mstore\n    /* \"#utility.yul\":10117:10121   */\n  0x20\n    /* \"#utility.yul\":10112:10115   */\n  dup3\n    /* \"#utility.yul\":10108:10122   */\n  add\n    /* \"#utility.yul\":10093:10122   */\n  swap1\n  pop\n    /* \"#utility.yul\":9959:10128   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10134:10303   */\ntag_110:\n    /* \"#utility.yul\":10274:10295   */\n  0x426c61636b6c6973746564206164647265737300000000000000000000000000\n    /* \"#utility.yul\":10270:10271   */\n  0x00\n    /* \"#utility.yul\":10262:10268   */\n  dup3\n    /* \"#utility.yul\":10258:10272   */\n  add\n    /* \"#utility.yul\":10251:10296   */\n  mstore\n    /* \"#utility.yul\":10134:10303   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10309:10675   */\ntag_111:\n    /* \"#utility.yul\":10451:10454   */\n  0x00\n    /* \"#utility.yul\":10472:10539   */\n  tag_242\n    /* \"#utility.yul\":10536:10538   */\n  0x13\n    /* \"#utility.yul\":10531:10534   */\n  dup4\n    /* \"#utility.yul\":10472:10539   */\n  tag_109\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":10465:10539   */\n  swap2\n  pop\n    /* \"#utility.yul\":10548:10641   */\n  tag_243\n    /* \"#utility.yul\":10637:10640   */\n  dup3\n    /* \"#utility.yul\":10548:10641   */\n  tag_110\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":10666:10668   */\n  0x20\n    /* \"#utility.yul\":10661:10664   */\n  dup3\n    /* \"#utility.yul\":10657:10669   */\n  add\n    /* \"#utility.yul\":10650:10669   */\n  swap1\n  pop\n    /* \"#utility.yul\":10309:10675   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10681:11100   */\ntag_38:\n    /* \"#utility.yul\":10847:10851   */\n  0x00\n    /* \"#utility.yul\":10885:10887   */\n  0x20\n    /* \"#utility.yul\":10874:10883   */\n  dup3\n    /* \"#utility.yul\":10870:10888   */\n  add\n    /* \"#utility.yul\":10862:10888   */\n  swap1\n  pop\n    /* \"#utility.yul\":10934:10943   */\n  dup2\n    /* \"#utility.yul\":10928:10932   */\n  dup2\n    /* \"#utility.yul\":10924:10944   */\n  sub\n    /* \"#utility.yul\":10920:10921   */\n  0x00\n    /* \"#utility.yul\":10909:10918   */\n  dup4\n    /* \"#utility.yul\":10905:10922   */\n  add\n    /* \"#utility.yul\":10898:10945   */\n  mstore\n    /* \"#utility.yul\":10962:11093   */\n  tag_245\n    /* \"#utility.yul\":11088:11092   */\n  dup2\n    /* \"#utility.yul\":10962:11093   */\n  tag_111\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":10954:11093   */\n  swap1\n  pop\n    /* \"#utility.yul\":10681:11100   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11106:11327   */\ntag_112:\n    /* \"#utility.yul\":11246:11280   */\n  0x426f746820616464726573736573206d7573742062652077686974656c697374\n    /* \"#utility.yul\":11242:11243   */\n  0x00\n    /* \"#utility.yul\":11234:11240   */\n  dup3\n    /* \"#utility.yul\":11230:11244   */\n  add\n    /* \"#utility.yul\":11223:11281   */\n  mstore\n    /* \"#utility.yul\":11315:11319   */\n  0x6564000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":11310:11312   */\n  0x20\n    /* \"#utility.yul\":11302:11308   */\n  dup3\n    /* \"#utility.yul\":11298:11313   */\n  add\n    /* \"#utility.yul\":11291:11320   */\n  mstore\n    /* \"#utility.yul\":11106:11327   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11333:11699   */\ntag_113:\n    /* \"#utility.yul\":11475:11478   */\n  0x00\n    /* \"#utility.yul\":11496:11563   */\n  tag_248\n    /* \"#utility.yul\":11560:11562   */\n  0x22\n    /* \"#utility.yul\":11555:11558   */\n  dup4\n    /* \"#utility.yul\":11496:11563   */\n  tag_109\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":11489:11563   */\n  swap2\n  pop\n    /* \"#utility.yul\":11572:11665   */\n  tag_249\n    /* \"#utility.yul\":11661:11664   */\n  dup3\n    /* \"#utility.yul\":11572:11665   */\n  tag_112\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":11690:11692   */\n  0x40\n    /* \"#utility.yul\":11685:11688   */\n  dup3\n    /* \"#utility.yul\":11681:11693   */\n  add\n    /* \"#utility.yul\":11674:11693   */\n  swap1\n  pop\n    /* \"#utility.yul\":11333:11699   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11705:12124   */\ntag_43:\n    /* \"#utility.yul\":11871:11875   */\n  0x00\n    /* \"#utility.yul\":11909:11911   */\n  0x20\n    /* \"#utility.yul\":11898:11907   */\n  dup3\n    /* \"#utility.yul\":11894:11912   */\n  add\n    /* \"#utility.yul\":11886:11912   */\n  swap1\n  pop\n    /* \"#utility.yul\":11958:11967   */\n  dup2\n    /* \"#utility.yul\":11952:11956   */\n  dup2\n    /* \"#utility.yul\":11948:11968   */\n  sub\n    /* \"#utility.yul\":11944:11945   */\n  0x00\n    /* \"#utility.yul\":11933:11942   */\n  dup4\n    /* \"#utility.yul\":11929:11946   */\n  add\n    /* \"#utility.yul\":11922:11969   */\n  mstore\n    /* \"#utility.yul\":11986:12117   */\n  tag_251\n    /* \"#utility.yul\":12112:12116   */\n  dup2\n    /* \"#utility.yul\":11986:12117   */\n  tag_113\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":11978:12117   */\n  swap1\n  pop\n    /* \"#utility.yul\":11705:12124   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12130:12309   */\ntag_114:\n    /* \"#utility.yul\":12270:12301   */\n  0x546f6b656e207472616e73666572206c696d6974206578636565646564000000\n    /* \"#utility.yul\":12266:12267   */\n  0x00\n    /* \"#utility.yul\":12258:12264   */\n  dup3\n    /* \"#utility.yul\":12254:12268   */\n  add\n    /* \"#utility.yul\":12247:12302   */\n  mstore\n    /* \"#utility.yul\":12130:12309   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12315:12681   */\ntag_115:\n    /* \"#utility.yul\":12457:12460   */\n  0x00\n    /* \"#utility.yul\":12478:12545   */\n  tag_254\n    /* \"#utility.yul\":12542:12544   */\n  0x1d\n    /* \"#utility.yul\":12537:12540   */\n  dup4\n    /* \"#utility.yul\":12478:12545   */\n  tag_109\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":12471:12545   */\n  swap2\n  pop\n    /* \"#utility.yul\":12554:12647   */\n  tag_255\n    /* \"#utility.yul\":12643:12646   */\n  dup3\n    /* \"#utility.yul\":12554:12647   */\n  tag_114\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":12672:12674   */\n  0x20\n    /* \"#utility.yul\":12667:12670   */\n  dup3\n    /* \"#utility.yul\":12663:12675   */\n  add\n    /* \"#utility.yul\":12656:12675   */\n  swap1\n  pop\n    /* \"#utility.yul\":12315:12681   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12687:13106   */\ntag_46:\n    /* \"#utility.yul\":12853:12857   */\n  0x00\n    /* \"#utility.yul\":12891:12893   */\n  0x20\n    /* \"#utility.yul\":12880:12889   */\n  dup3\n    /* \"#utility.yul\":12876:12894   */\n  add\n    /* \"#utility.yul\":12868:12894   */\n  swap1\n  pop\n    /* \"#utility.yul\":12940:12949   */\n  dup2\n    /* \"#utility.yul\":12934:12938   */\n  dup2\n    /* \"#utility.yul\":12930:12950   */\n  sub\n    /* \"#utility.yul\":12926:12927   */\n  0x00\n    /* \"#utility.yul\":12915:12924   */\n  dup4\n    /* \"#utility.yul\":12911:12928   */\n  add\n    /* \"#utility.yul\":12904:12951   */\n  mstore\n    /* \"#utility.yul\":12968:13099   */\n  tag_257\n    /* \"#utility.yul\":13094:13098   */\n  dup2\n    /* \"#utility.yul\":12968:13099   */\n  tag_115\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":12960:13099   */\n  swap1\n  pop\n    /* \"#utility.yul\":12687:13106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13112:13303   */\ntag_48:\n    /* \"#utility.yul\":13152:13155   */\n  0x00\n    /* \"#utility.yul\":13171:13191   */\n  tag_259\n    /* \"#utility.yul\":13189:13190   */\n  dup3\n    /* \"#utility.yul\":13171:13191   */\n  tag_80\n  jump\t// in\ntag_259:\n    /* \"#utility.yul\":13166:13191   */\n  swap2\n  pop\n    /* \"#utility.yul\":13205:13225   */\n  tag_260\n    /* \"#utility.yul\":13223:13224   */\n  dup4\n    /* \"#utility.yul\":13205:13225   */\n  tag_80\n  jump\t// in\ntag_260:\n    /* \"#utility.yul\":13200:13225   */\n  swap3\n  pop\n    /* \"#utility.yul\":13248:13249   */\n  dup3\n    /* \"#utility.yul\":13245:13246   */\n  dup3\n    /* \"#utility.yul\":13241:13250   */\n  add\n    /* \"#utility.yul\":13234:13250   */\n  swap1\n  pop\n    /* \"#utility.yul\":13269:13272   */\n  dup1\n    /* \"#utility.yul\":13266:13267   */\n  dup3\n    /* \"#utility.yul\":13263:13273   */\n  gt\n    /* \"#utility.yul\":13260:13296   */\n  iszero\n  tag_261\n  jumpi\n    /* \"#utility.yul\":13276:13294   */\n  tag_262\n  tag_76\n  jump\t// in\ntag_262:\n    /* \"#utility.yul\":13260:13296   */\ntag_261:\n    /* \"#utility.yul\":13112:13303   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13309:13479   */\ntag_116:\n    /* \"#utility.yul\":13449:13471   */\n  0x436f6f6c646f776e2074696d6520706572696f64000000000000000000000000\n    /* \"#utility.yul\":13445:13446   */\n  0x00\n    /* \"#utility.yul\":13437:13443   */\n  dup3\n    /* \"#utility.yul\":13433:13447   */\n  add\n    /* \"#utility.yul\":13426:13472   */\n  mstore\n    /* \"#utility.yul\":13309:13479   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13485:13851   */\ntag_117:\n    /* \"#utility.yul\":13627:13630   */\n  0x00\n    /* \"#utility.yul\":13648:13715   */\n  tag_265\n    /* \"#utility.yul\":13712:13714   */\n  0x14\n    /* \"#utility.yul\":13707:13710   */\n  dup4\n    /* \"#utility.yul\":13648:13715   */\n  tag_109\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":13641:13715   */\n  swap2\n  pop\n    /* \"#utility.yul\":13724:13817   */\n  tag_266\n    /* \"#utility.yul\":13813:13816   */\n  dup3\n    /* \"#utility.yul\":13724:13817   */\n  tag_116\n  jump\t// in\ntag_266:\n    /* \"#utility.yul\":13842:13844   */\n  0x20\n    /* \"#utility.yul\":13837:13840   */\n  dup3\n    /* \"#utility.yul\":13833:13845   */\n  add\n    /* \"#utility.yul\":13826:13845   */\n  swap1\n  pop\n    /* \"#utility.yul\":13485:13851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13857:14276   */\ntag_51:\n    /* \"#utility.yul\":14023:14027   */\n  0x00\n    /* \"#utility.yul\":14061:14063   */\n  0x20\n    /* \"#utility.yul\":14050:14059   */\n  dup3\n    /* \"#utility.yul\":14046:14064   */\n  add\n    /* \"#utility.yul\":14038:14064   */\n  swap1\n  pop\n    /* \"#utility.yul\":14110:14119   */\n  dup2\n    /* \"#utility.yul\":14104:14108   */\n  dup2\n    /* \"#utility.yul\":14100:14120   */\n  sub\n    /* \"#utility.yul\":14096:14097   */\n  0x00\n    /* \"#utility.yul\":14085:14094   */\n  dup4\n    /* \"#utility.yul\":14081:14098   */\n  add\n    /* \"#utility.yul\":14074:14121   */\n  mstore\n    /* \"#utility.yul\":14138:14269   */\n  tag_268\n    /* \"#utility.yul\":14264:14268   */\n  dup2\n    /* \"#utility.yul\":14138:14269   */\n  tag_117\n  jump\t// in\ntag_268:\n    /* \"#utility.yul\":14130:14269   */\n  swap1\n  pop\n    /* \"#utility.yul\":13857:14276   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14282:14462   */\ntag_118:\n    /* \"#utility.yul\":14330:14407   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":14327:14328   */\n  0x00\n    /* \"#utility.yul\":14320:14408   */\n  mstore\n    /* \"#utility.yul\":14427:14431   */\n  0x12\n    /* \"#utility.yul\":14424:14425   */\n  0x04\n    /* \"#utility.yul\":14417:14432   */\n  mstore\n    /* \"#utility.yul\":14451:14455   */\n  0x24\n    /* \"#utility.yul\":14448:14449   */\n  0x00\n    /* \"#utility.yul\":14441:14456   */\n  revert\n    /* \"#utility.yul\":14468:14653   */\ntag_61:\n    /* \"#utility.yul\":14508:14509   */\n  0x00\n    /* \"#utility.yul\":14525:14545   */\n  tag_271\n    /* \"#utility.yul\":14543:14544   */\n  dup3\n    /* \"#utility.yul\":14525:14545   */\n  tag_80\n  jump\t// in\ntag_271:\n    /* \"#utility.yul\":14520:14545   */\n  swap2\n  pop\n    /* \"#utility.yul\":14559:14579   */\n  tag_272\n    /* \"#utility.yul\":14577:14578   */\n  dup4\n    /* \"#utility.yul\":14559:14579   */\n  tag_80\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":14554:14579   */\n  swap3\n  pop\n    /* \"#utility.yul\":14598:14599   */\n  dup3\n    /* \"#utility.yul\":14588:14623   */\n  tag_273\n  jumpi\n    /* \"#utility.yul\":14603:14621   */\n  tag_274\n  tag_118\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":14588:14623   */\ntag_273:\n    /* \"#utility.yul\":14645:14646   */\n  dup3\n    /* \"#utility.yul\":14642:14643   */\n  dup3\n    /* \"#utility.yul\":14638:14647   */\n  div\n    /* \"#utility.yul\":14633:14647   */\n  swap1\n  pop\n    /* \"#utility.yul\":14468:14653   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14659:14853   */\ntag_63:\n    /* \"#utility.yul\":14699:14703   */\n  0x00\n    /* \"#utility.yul\":14719:14739   */\n  tag_276\n    /* \"#utility.yul\":14737:14738   */\n  dup3\n    /* \"#utility.yul\":14719:14739   */\n  tag_80\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":14714:14739   */\n  swap2\n  pop\n    /* \"#utility.yul\":14753:14773   */\n  tag_277\n    /* \"#utility.yul\":14771:14772   */\n  dup4\n    /* \"#utility.yul\":14753:14773   */\n  tag_80\n  jump\t// in\ntag_277:\n    /* \"#utility.yul\":14748:14773   */\n  swap3\n  pop\n    /* \"#utility.yul\":14797:14798   */\n  dup3\n    /* \"#utility.yul\":14794:14795   */\n  dup3\n    /* \"#utility.yul\":14790:14799   */\n  sub\n    /* \"#utility.yul\":14782:14799   */\n  swap1\n  pop\n    /* \"#utility.yul\":14821:14822   */\n  dup2\n    /* \"#utility.yul\":14815:14819   */\n  dup2\n    /* \"#utility.yul\":14812:14823   */\n  gt\n    /* \"#utility.yul\":14809:14846   */\n  iszero\n  tag_278\n  jumpi\n    /* \"#utility.yul\":14826:14844   */\n  tag_279\n  tag_76\n  jump\t// in\ntag_279:\n    /* \"#utility.yul\":14809:14846   */\ntag_278:\n    /* \"#utility.yul\":14659:14853   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14859:14977   */\ntag_119:\n    /* \"#utility.yul\":14946:14970   */\n  tag_281\n    /* \"#utility.yul\":14964:14969   */\n  dup2\n    /* \"#utility.yul\":14946:14970   */\n  tag_80\n  jump\t// in\ntag_281:\n    /* \"#utility.yul\":14941:14944   */\n  dup3\n    /* \"#utility.yul\":14934:14971   */\n  mstore\n    /* \"#utility.yul\":14859:14977   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14983:15425   */\ntag_71:\n    /* \"#utility.yul\":15132:15136   */\n  0x00\n    /* \"#utility.yul\":15170:15172   */\n  0x60\n    /* \"#utility.yul\":15159:15168   */\n  dup3\n    /* \"#utility.yul\":15155:15173   */\n  add\n    /* \"#utility.yul\":15147:15173   */\n  swap1\n  pop\n    /* \"#utility.yul\":15183:15254   */\n  tag_283\n    /* \"#utility.yul\":15251:15252   */\n  0x00\n    /* \"#utility.yul\":15240:15249   */\n  dup4\n    /* \"#utility.yul\":15236:15253   */\n  add\n    /* \"#utility.yul\":15227:15233   */\n  dup7\n    /* \"#utility.yul\":15183:15254   */\n  tag_108\n  jump\t// in\ntag_283:\n    /* \"#utility.yul\":15264:15336   */\n  tag_284\n    /* \"#utility.yul\":15332:15334   */\n  0x20\n    /* \"#utility.yul\":15321:15330   */\n  dup4\n    /* \"#utility.yul\":15317:15335   */\n  add\n    /* \"#utility.yul\":15308:15314   */\n  dup6\n    /* \"#utility.yul\":15264:15336   */\n  tag_119\n  jump\t// in\ntag_284:\n    /* \"#utility.yul\":15346:15418   */\n  tag_285\n    /* \"#utility.yul\":15414:15416   */\n  0x40\n    /* \"#utility.yul\":15403:15412   */\n  dup4\n    /* \"#utility.yul\":15399:15417   */\n  add\n    /* \"#utility.yul\":15390:15396   */\n  dup5\n    /* \"#utility.yul\":15346:15418   */\n  tag_119\n  jump\t// in\ntag_285:\n    /* \"#utility.yul\":14983:15425   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":15431:15653   */\ntag_75:\n    /* \"#utility.yul\":15524:15528   */\n  0x00\n    /* \"#utility.yul\":15562:15564   */\n  0x20\n    /* \"#utility.yul\":15551:15560   */\n  dup3\n    /* \"#utility.yul\":15547:15565   */\n  add\n    /* \"#utility.yul\":15539:15565   */\n  swap1\n  pop\n    /* \"#utility.yul\":15575:15646   */\n  tag_287\n    /* \"#utility.yul\":15643:15644   */\n  0x00\n    /* \"#utility.yul\":15632:15641   */\n  dup4\n    /* \"#utility.yul\":15628:15645   */\n  add\n    /* \"#utility.yul\":15619:15625   */\n  dup5\n    /* \"#utility.yul\":15575:15646   */\n  tag_119\n  jump\t// in\ntag_287:\n    /* \"#utility.yul\":15431:15653   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"VaultCoin.sol\":174:5203  contract VaultCoin is ERC20, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"VaultCoin.sol\":174:5203  contract VaultCoin is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f9170f6\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xec28438a\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xefc3a4aa\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb319c6b7\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb7bda68f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xced695a4\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd51d86f4\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x88210bb1\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x88210bb1\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8c0b5e22\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x93af22ff\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x6f9170f6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6ff73201\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x313ce567\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ebc552d\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ebc552d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x53eb3bcf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6b3907ca\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x6d8b0527\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x44337ea1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x47ee0394\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x49192418\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x18160ddd\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1bacad95\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2958ad7f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2973ef2d\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x01bf6648\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0ddc0976\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"VaultCoin.sol\":2235:2375  function removeFromWhiteList(address account)     external onlyOwner ... */\n    tag_3:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":366:393  uint256 public  taxFees = 5 */\n    tag_6:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":5069:5196  function removeExemptionFromTaxes(address account)     external onlyOwner{ ... */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":1266:1364  function enableWhiteListing() external onlyOwner... */\n    tag_10:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"VaultCoin.sol\":4647:4731  function getTaxes() external view returns (uint256){... */\n    tag_11:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":1914:2063  function addToBlacklist(address account)     external onlyOwner ... */\n    tag_13:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"VaultCoin.sol\":1659:1898  function addToWhiteList(address account)     external onlyOwner ... */\n    tag_14:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"VaultCoin.sol\":4740:4932  function setSlippageFees(uint256 newSlippageFee) external onlyOwner{... */\n    tag_15:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"VaultCoin.sol\":4376:4537  function setTaxes(uint256 newTaxFee) external onlyOwner{... */\n    tag_16:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"VaultCoin.sol\":2076:2223  function removeFromBlacklist(address account)     external onlyOwner ... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"VaultCoin.sol\":1478:1558  function enableTax() external onlyOwner... */\n    tag_18:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      stop\n        /* \"VaultCoin.sol\":396:428  uint256 public  slippageFees = 2 */\n    tag_19:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":2874:2985  function getMaxTxAmount() external view returns(uint256){... */\n    tag_20:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":2525:2657  function isWhiteListed(address account) external view returns (bool) ... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":3191:3320  function setCooldownTime(uint256 newCooldownTime) external onlyOwner{... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":1071:1258  function renounceOwnership() public override onlyOwner{... */\n    tag_24:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      stop\n        /* \"VaultCoin.sol\":4940:5061  function addExemptionToTaxes(address account)     external onlyOwner {... */\n    tag_25:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"VaultCoin.sol\":277:320  uint256 public  maxTxAmount = initialSupply */\n    tag_26:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":4545:4641  function getSlippageFees() external view returns (uint256){... */\n    tag_28:\n      tag_132\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_29:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":323:363  uint256 public  cooldownTime = 1 minutes */\n    tag_31:\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":512:537  address public taxAddress */\n    tag_32:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":1566:1648  function disableTax() external onlyOwner... */\n    tag_33:\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      stop\n        /* \"VaultCoin.sol\":2997:3177  function getContractDetials() external view returns (address, uint256, uint256, uint256)... */\n    tag_34:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_35:\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      tag_157\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":2669:2862  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner {... */\n    tag_36:\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      stop\n        /* \"VaultCoin.sol\":1372:1470  function enableBlackListing() external onlyOwner... */\n    tag_37:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n    tag_164:\n      stop\n        /* \"VaultCoin.sol\":2385:2517  function isBlacklisted(address account) external view returns (bool) ... */\n    tag_39:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"VaultCoin.sol\":2235:2375  function removeFromWhiteList(address account)     external onlyOwner ... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"VaultCoin.sol\":2358:2363  false */\n      0x00\n        /* \"VaultCoin.sol\":2336:2346  _whiteList */\n      0x0e\n        /* \"VaultCoin.sol\":2336:2355  _whiteList[account] */\n      0x00\n        /* \"VaultCoin.sol\":2347:2354  account */\n      dup4\n        /* \"VaultCoin.sol\":2336:2355  _whiteList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":2336:2363  _whiteList[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":2235:2375  function removeFromWhiteList(address account)     external onlyOwner ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_177\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":366:393  uint256 public  taxFees = 5 */\n    tag_62:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"VaultCoin.sol\":5069:5196  function removeExemptionFromTaxes(address account)     external onlyOwner{ ... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"VaultCoin.sol\":5179:5184  false */\n      0x00\n        /* \"VaultCoin.sol\":5159:5167  _taxList */\n      0x0d\n        /* \"VaultCoin.sol\":5159:5176  _taxList[account] */\n      0x00\n        /* \"VaultCoin.sol\":5168:5175  account */\n      dup4\n        /* \"VaultCoin.sol\":5159:5176  _taxList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":5159:5184  _taxList[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":5069:5196  function removeExemptionFromTaxes(address account)     external onlyOwner{ ... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":1266:1364  function enableWhiteListing() external onlyOwner... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"VaultCoin.sol\":1352:1356  true */\n      0x01\n        /* \"VaultCoin.sol\":1331:1351  _whiteListingEnabled */\n      0x0b\n      0x00\n        /* \"VaultCoin.sol\":1331:1356  _whiteListingEnabled=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1266:1364  function enableWhiteListing() external onlyOwner... */\n      jump\t// out\n        /* \"VaultCoin.sol\":4647:4731  function getTaxes() external view returns (uint256){... */\n    tag_79:\n        /* \"VaultCoin.sol\":4690:4697  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":4716:4723  taxFees */\n      sload(0x09)\n        /* \"VaultCoin.sol\":4709:4723  return taxFees */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":4647:4731  function getTaxes() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"VaultCoin.sol\":1914:2063  function addToBlacklist(address account)     external onlyOwner ... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_203:\n        /* \"VaultCoin.sol\":2033:2037  true */\n      0x01\n        /* \"VaultCoin.sol\":2011:2021  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":2011:2030  _blackList[account] */\n      0x00\n        /* \"VaultCoin.sol\":2022:2029  account */\n      dup4\n        /* \"VaultCoin.sol\":2011:2030  _blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":2011:2037  _blackList[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1914:2063  function addToBlacklist(address account)     external onlyOwner ... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":1659:1898  function addToWhiteList(address account)     external onlyOwner ... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_206:\n        /* \"VaultCoin.sol\":1767:1777  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":1767:1786  _blackList[account] */\n      0x00\n        /* \"VaultCoin.sol\":1778:1785  account */\n      dup3\n        /* \"VaultCoin.sol\":1767:1786  _blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":1766:1786  !_blackList[account] */\n      iszero\n        /* \"VaultCoin.sol\":1758:1832  require(!_blackList[account],\"Blacklisted accounts cannot be whitelisted\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"VaultCoin.sol\":1870:1874  true */\n      0x01\n        /* \"VaultCoin.sol\":1848:1858  _whiteList */\n      0x0e\n        /* \"VaultCoin.sol\":1848:1867  _whiteList[account] */\n      0x00\n        /* \"VaultCoin.sol\":1859:1866  account */\n      dup4\n        /* \"VaultCoin.sol\":1848:1867  _whiteList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":1848:1874  _whiteList[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1659:1898  function addToWhiteList(address account)     external onlyOwner ... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":4740:4932  function setSlippageFees(uint256 newSlippageFee) external onlyOwner{... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"VaultCoin.sol\":4842:4843  5 */\n      0x05\n        /* \"VaultCoin.sol\":4826:4840  newSlippageFee */\n      dup2\n        /* \"VaultCoin.sol\":4826:4843  newSlippageFee<=5 */\n      gt\n      iszero\n        /* \"VaultCoin.sol\":4818:4886  require(newSlippageFee<=5, \"Slippage fees cannot be higher than 5%\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"VaultCoin.sol\":4910:4924  newSlippageFee */\n      dup1\n        /* \"VaultCoin.sol\":4897:4909  slippageFees */\n      0x0a\n        /* \"VaultCoin.sol\":4897:4924  slippageFees=newSlippageFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":4740:4932  function setSlippageFees(uint256 newSlippageFee) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":4376:4537  function setTaxes(uint256 newTaxFee) external onlyOwner{... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"VaultCoin.sol\":4461:4463  10 */\n      0x0a\n        /* \"VaultCoin.sol\":4450:4459  newTaxFee */\n      dup2\n        /* \"VaultCoin.sol\":4450:4463  newTaxFee<=10 */\n      gt\n      iszero\n        /* \"VaultCoin.sol\":4442:4501  require(newTaxFee<=10, \"Tax fee cannot be higher than 10%\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"VaultCoin.sol\":4520:4529  newTaxFee */\n      dup1\n        /* \"VaultCoin.sol\":4512:4519  taxFees */\n      0x09\n        /* \"VaultCoin.sol\":4512:4529  taxFees=newTaxFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":4376:4537  function setTaxes(uint256 newTaxFee) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":2076:2223  function removeFromBlacklist(address account)     external onlyOwner ... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"VaultCoin.sol\":2206:2211  false */\n      0x00\n        /* \"VaultCoin.sol\":2184:2194  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":2184:2203  _blackList[account] */\n      0x00\n        /* \"VaultCoin.sol\":2195:2202  account */\n      dup4\n        /* \"VaultCoin.sol\":2184:2203  _blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":2184:2211  _blackList[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":2076:2223  function removeFromBlacklist(address account)     external onlyOwner ... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":1478:1558  function enableTax() external onlyOwner... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"VaultCoin.sol\":1546:1550  true */\n      0x01\n        /* \"VaultCoin.sol\":1534:1545  _taxEnabled */\n      0x0b\n      0x01\n        /* \"VaultCoin.sol\":1534:1550  _taxEnabled=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1478:1558  function enableTax() external onlyOwner... */\n      jump\t// out\n        /* \"VaultCoin.sol\":396:428  uint256 public  slippageFees = 2 */\n    tag_104:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"VaultCoin.sol\":2874:2985  function getMaxTxAmount() external view returns(uint256){... */\n    tag_107:\n        /* \"VaultCoin.sol\":2922:2929  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":2952:2963  maxTxAmount */\n      sload(0x07)\n        /* \"VaultCoin.sol\":2945:2963  return maxTxAmount */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":2874:2985  function getMaxTxAmount() external view returns(uint256){... */\n      swap1\n      jump\t// out\n        /* \"VaultCoin.sol\":2525:2657  function isWhiteListed(address account) external view returns (bool) ... */\n    tag_111:\n        /* \"VaultCoin.sol\":2588:2592  bool */\n      0x00\n        /* \"VaultCoin.sol\":2626:2636  _whiteList */\n      0x0e\n        /* \"VaultCoin.sol\":2626:2645  _whiteList[account] */\n      0x00\n        /* \"VaultCoin.sol\":2637:2644  account */\n      dup4\n        /* \"VaultCoin.sol\":2626:2645  _whiteList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":2619:2645  return _whiteList[account] */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":2525:2657  function isWhiteListed(address account) external view returns (bool) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":3191:3320  function setCooldownTime(uint256 newCooldownTime) external onlyOwner{... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_232:\n        /* \"VaultCoin.sol\":3287:3302  newCooldownTime */\n      dup1\n        /* \"VaultCoin.sol\":3274:3286  cooldownTime */\n      0x08\n        /* \"VaultCoin.sol\":3274:3302  cooldownTime=newCooldownTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":3191:3320  function setCooldownTime(uint256 newCooldownTime) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":1071:1258  function renounceOwnership() public override onlyOwner{... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"VaultCoin.sol\":1225:1250  super.renounceOwnership() */\n      tag_238\n        /* \"VaultCoin.sol\":1225:1248  super.renounceOwnership */\n      tag_239\n        /* \"VaultCoin.sol\":1225:1250  super.renounceOwnership() */\n      jump\t// in\n    tag_238:\n        /* \"VaultCoin.sol\":1071:1258  function renounceOwnership() public override onlyOwner{... */\n      jump\t// out\n        /* \"VaultCoin.sol\":4940:5061  function addExemptionToTaxes(address account)     external onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_241:\n        /* \"VaultCoin.sol\":5045:5049  true */\n      0x01\n        /* \"VaultCoin.sol\":5025:5033  _taxList */\n      0x0d\n        /* \"VaultCoin.sol\":5025:5042  _taxList[account] */\n      0x00\n        /* \"VaultCoin.sol\":5034:5041  account */\n      dup4\n        /* \"VaultCoin.sol\":5025:5042  _taxList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"VaultCoin.sol\":5025:5049  _taxList[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":4940:5061  function addExemptionToTaxes(address account)     external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":277:320  uint256 public  maxTxAmount = initialSupply */\n    tag_126:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"VaultCoin.sol\":4545:4641  function getSlippageFees() external view returns (uint256){... */\n    tag_133:\n        /* \"VaultCoin.sol\":4595:4602  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":4621:4633  slippageFees */\n      sload(0x0a)\n        /* \"VaultCoin.sol\":4614:4633  return slippageFees */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":4545:4641  function getSlippageFees() external view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_177\n      jump\t// in\n    tag_246:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_177\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":323:363  uint256 public  cooldownTime = 1 minutes */\n    tag_143:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"VaultCoin.sol\":512:537  address public taxAddress */\n    tag_146:\n      0x0b\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"VaultCoin.sol\":1566:1648  function disableTax() external onlyOwner... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"VaultCoin.sol\":1635:1640  false */\n      0x00\n        /* \"VaultCoin.sol\":1623:1634  _taxEnabled */\n      0x0b\n      0x01\n        /* \"VaultCoin.sol\":1623:1640  _taxEnabled=false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1566:1648  function disableTax() external onlyOwner... */\n      jump\t// out\n        /* \"VaultCoin.sol\":2997:3177  function getContractDetials() external view returns (address, uint256, uint256, uint256)... */\n    tag_151:\n        /* \"VaultCoin.sol\":3050:3057  address */\n      0x00\n        /* \"VaultCoin.sol\":3059:3066  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":3068:3075  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":3077:3084  uint256 */\n      0x00\n        /* \"VaultCoin.sol\":3118:3125  owner() */\n      tag_258\n        /* \"VaultCoin.sol\":3118:3123  owner */\n      tag_129\n        /* \"VaultCoin.sol\":3118:3125  owner() */\n      jump\t// in\n    tag_258:\n        /* \"VaultCoin.sol\":3126:3137  maxTxAmount */\n      sload(0x07)\n        /* \"VaultCoin.sol\":3138:3150  cooldownTime */\n      sload(0x08)\n        /* \"VaultCoin.sol\":3151:3164  initialSupply */\n      sload(0x06)\n        /* \"VaultCoin.sol\":3110:3165  return (owner(),maxTxAmount,cooldownTime,initialSupply) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"VaultCoin.sol\":2997:3177  function getContractDetials() external view returns (address, uint256, uint256, uint256)... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":2669:2862  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"VaultCoin.sol\":2765:2779  newMaxTxAmount */\n      dup1\n        /* \"VaultCoin.sol\":2751:2762  maxTxAmount */\n      0x07\n        /* \"VaultCoin.sol\":2751:2779  maxTxAmount = newMaxTxAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":2669:2862  function setMaxTxAmount(uint256 newMaxTxAmount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":1372:1470  function enableBlackListing() external onlyOwner... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"VaultCoin.sol\":1458:1462  true */\n      0x01\n        /* \"VaultCoin.sol\":1437:1457  _blackListingEnabled */\n      0x0b\n      0x16\n        /* \"VaultCoin.sol\":1437:1462  _blackListingEnabled=true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":1372:1470  function enableBlackListing() external onlyOwner... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":2385:2517  function isBlacklisted(address account) external view returns (bool) ... */\n    tag_169:\n        /* \"VaultCoin.sol\":2448:2452  bool */\n      0x00\n        /* \"VaultCoin.sol\":2486:2496  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":2486:2505  _blackList[account] */\n      0x00\n        /* \"VaultCoin.sol\":2497:2504  account */\n      dup4\n        /* \"VaultCoin.sol\":2486:2505  _blackList[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":2479:2505  return _blackList[account] */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":2385:2517  function isBlacklisted(address account) external view returns (bool) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_276\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_309\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VaultCoin.sol\":3330:4281  function _update(address from, address to, uint256 value) internal override {... */\n    tag_297:\n        /* \"VaultCoin.sol\":3426:3436  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":3426:3440  _blackList[to] */\n      0x00\n        /* \"VaultCoin.sol\":3437:3439  to */\n      dup4\n        /* \"VaultCoin.sol\":3426:3440  _blackList[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3425:3440  !_blackList[to] */\n      iszero\n        /* \"VaultCoin.sol\":3425:3461  !_blackList[to] && !_blackList[from] */\n      dup1\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"VaultCoin.sol\":3445:3455  _blackList */\n      0x0c\n        /* \"VaultCoin.sol\":3445:3461  _blackList[from] */\n      0x00\n        /* \"VaultCoin.sol\":3456:3460  from */\n      dup5\n        /* \"VaultCoin.sol\":3445:3461  _blackList[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3444:3461  !_blackList[from] */\n      iszero\n        /* \"VaultCoin.sol\":3425:3461  !_blackList[to] && !_blackList[from] */\n    tag_311:\n        /* \"VaultCoin.sol\":3417:3484  require(!_blackList[to] && !_blackList[from],\"Blacklisted address\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"VaultCoin.sol\":3498:3518  _whiteListingEnabled */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3495:3627  if(_whiteListingEnabled){... */\n      iszero\n      tag_315\n      jumpi\n        /* \"VaultCoin.sol\":3542:3552  _whiteList */\n      0x0e\n        /* \"VaultCoin.sol\":3542:3558  _whiteList[from] */\n      0x00\n        /* \"VaultCoin.sol\":3553:3557  from */\n      dup5\n        /* \"VaultCoin.sol\":3542:3558  _whiteList[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3542:3576  _whiteList[from] && _whiteList[to] */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"VaultCoin.sol\":3562:3572  _whiteList */\n      0x0e\n        /* \"VaultCoin.sol\":3562:3576  _whiteList[to] */\n      0x00\n        /* \"VaultCoin.sol\":3573:3575  to */\n      dup4\n        /* \"VaultCoin.sol\":3562:3576  _whiteList[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3542:3576  _whiteList[from] && _whiteList[to] */\n    tag_316:\n        /* \"VaultCoin.sol\":3534:3615  require(_whiteList[from] && _whiteList[to], \"Both addresses must be whitelisted\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"VaultCoin.sol\":3495:3627  if(_whiteListingEnabled){... */\n    tag_315:\n        /* \"VaultCoin.sol\":3654:3665  maxTxAmount */\n      sload(0x07)\n        /* \"VaultCoin.sol\":3645:3650  value */\n      dup2\n        /* \"VaultCoin.sol\":3645:3665  value <= maxTxAmount */\n      gt\n      iszero\n        /* \"VaultCoin.sol\":3637:3698  require(value <= maxTxAmount,\"Token transfer limit exceeded\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"VaultCoin.sol\":3755:3767  cooldownTime */\n      sload(0x08)\n        /* \"VaultCoin.sol\":3736:3747  _lastTxTime */\n      0x0f\n        /* \"VaultCoin.sol\":3736:3753  _lastTxTime[from] */\n      0x00\n        /* \"VaultCoin.sol\":3748:3752  from */\n      dup6\n        /* \"VaultCoin.sol\":3736:3753  _lastTxTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"VaultCoin.sol\":3736:3767  _lastTxTime[from] +cooldownTime */\n      tag_323\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"VaultCoin.sol\":3717:3732  block.timestamp */\n      timestamp\n        /* \"VaultCoin.sol\":3717:3767  block.timestamp >= _lastTxTime[from] +cooldownTime */\n      lt\n      iszero\n        /* \"VaultCoin.sol\":3709:3791  require(block.timestamp >= _lastTxTime[from] +cooldownTime,\"Cooldown time period\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"VaultCoin.sol\":3822:3837  block.timestamp */\n      timestamp\n        /* \"VaultCoin.sol\":3802:3813  _lastTxTime */\n      0x0f\n        /* \"VaultCoin.sol\":3802:3819  _lastTxTime[from] */\n      0x00\n        /* \"VaultCoin.sol\":3814:3818  from */\n      dup6\n        /* \"VaultCoin.sol\":3802:3819  _lastTxTime[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"VaultCoin.sol\":3802:3837  _lastTxTime[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"VaultCoin.sol\":3867:3875  _taxList */\n      0x0d\n        /* \"VaultCoin.sol\":3867:3881  _taxList[from] */\n      0x00\n        /* \"VaultCoin.sol\":3876:3880  from */\n      dup5\n        /* \"VaultCoin.sol\":3867:3881  _taxList[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3867:3897  _taxList[from] || !_taxEnabled */\n      dup1\n      tag_328\n      jumpi\n      pop\n        /* \"VaultCoin.sol\":3886:3897  _taxEnabled */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":3885:3897  !_taxEnabled */\n      iszero\n        /* \"VaultCoin.sol\":3867:3897  _taxList[from] || !_taxEnabled */\n    tag_328:\n        /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\n      iszero\n      tag_329\n      jumpi\n        /* \"VaultCoin.sol\":3975:4005  super._update(from, to, value) */\n      tag_330\n        /* \"VaultCoin.sol\":3989:3993  from */\n      dup4\n        /* \"VaultCoin.sol\":3995:3997  to */\n      dup4\n        /* \"VaultCoin.sol\":3999:4004  value */\n      dup4\n        /* \"VaultCoin.sol\":3975:3988  super._update */\n      tag_331\n        /* \"VaultCoin.sol\":3975:4005  super._update(from, to, value) */\n      jump\t// in\n    tag_330:\n        /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\n      jump(tag_332)\n    tag_329:\n        /* \"VaultCoin.sol\":4025:4036  _taxEnabled */\n      0x0b\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"VaultCoin.sol\":4022:4260  if(_taxEnabled){ ... */\n      iszero\n      tag_333\n      jumpi\n        /* \"VaultCoin.sol\":4053:4070  uint256 totalFees */\n      0x00\n        /* \"VaultCoin.sol\":4106:4109  100 */\n      0x64\n        /* \"VaultCoin.sol\":4091:4103  slippageFees */\n      sload(0x0a)\n        /* \"VaultCoin.sol\":4083:4090  taxFees */\n      sload(0x09)\n        /* \"VaultCoin.sol\":4083:4103  taxFees+slippageFees */\n      tag_334\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_334:\n        /* \"VaultCoin.sol\":4074:4079  value */\n      dup4\n        /* \"VaultCoin.sol\":4074:4104  value * (taxFees+slippageFees) */\n      tag_335\n      swap2\n      swap1\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"VaultCoin.sol\":4073:4109  (value * (taxFees+slippageFees))/100 */\n      tag_337\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"VaultCoin.sol\":4053:4109  uint256 totalFees = (value * (taxFees+slippageFees))/100 */\n      swap1\n      pop\n        /* \"VaultCoin.sol\":4186:4195  totalFees */\n      dup1\n        /* \"VaultCoin.sol\":4178:4183  value */\n      dup3\n        /* \"VaultCoin.sol\":4178:4195  value - totalFees */\n      tag_339\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"VaultCoin.sol\":4169:4195  value =  value - totalFees */\n      swap2\n      pop\n        /* \"VaultCoin.sol\":4210:4248  super._update(from, taxAddress, value) */\n      tag_341\n        /* \"VaultCoin.sol\":4224:4228  from */\n      dup5\n        /* \"VaultCoin.sol\":4230:4240  taxAddress */\n      0x0b\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"VaultCoin.sol\":4242:4247  value */\n      dup5\n        /* \"VaultCoin.sol\":4210:4223  super._update */\n      tag_331\n        /* \"VaultCoin.sol\":4210:4248  super._update(from, taxAddress, value) */\n      jump\t// in\n    tag_341:\n        /* \"VaultCoin.sol\":4037:4260  { ... */\n      pop\n        /* \"VaultCoin.sol\":4022:4260  if(_taxEnabled){ ... */\n    tag_333:\n        /* \"VaultCoin.sol\":3864:4260  if(_taxList[from] || !_taxEnabled){... */\n    tag_332:\n        /* \"VaultCoin.sol\":3330:4281  function _update(address from, address to, uint256 value) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_344\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_344:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_345)\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_349)\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_352:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_354:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_355:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_395\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_354\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_356:\n        /* \"#utility.yul\":641:665   */\n      tag_397\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_355\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_398:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_357:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_400\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_356\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_49:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_403\n      tag_352\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":917:1036   */\n    tag_402:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_404\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_357\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1275   */\n    tag_358:\n        /* \"#utility.yul\":1228:1234   */\n      0x00\n        /* \"#utility.yul\":1262:1267   */\n      dup2\n        /* \"#utility.yul\":1256:1268   */\n      mload\n        /* \"#utility.yul\":1246:1268   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1450   */\n    tag_359:\n        /* \"#utility.yul\":1365:1376   */\n      0x00\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1394:1397   */\n      dup3\n        /* \"#utility.yul\":1387:1406   */\n      mstore\n        /* \"#utility.yul\":1439:1443   */\n      0x20\n        /* \"#utility.yul\":1434:1437   */\n      dup3\n        /* \"#utility.yul\":1430:1444   */\n      add\n        /* \"#utility.yul\":1415:1444   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1456:1595   */\n    tag_360:\n        /* \"#utility.yul\":1545:1551   */\n      dup3\n        /* \"#utility.yul\":1540:1543   */\n      dup2\n        /* \"#utility.yul\":1535:1538   */\n      dup4\n        /* \"#utility.yul\":1529:1552   */\n      mcopy\n        /* \"#utility.yul\":1586:1587   */\n      0x00\n        /* \"#utility.yul\":1577:1583   */\n      dup4\n        /* \"#utility.yul\":1572:1575   */\n      dup4\n        /* \"#utility.yul\":1568:1584   */\n      add\n        /* \"#utility.yul\":1561:1588   */\n      mstore\n        /* \"#utility.yul\":1456:1595   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1703   */\n    tag_361:\n        /* \"#utility.yul\":1642:1648   */\n      0x00\n        /* \"#utility.yul\":1693:1695   */\n      0x1f\n        /* \"#utility.yul\":1689:1696   */\n      not\n        /* \"#utility.yul\":1684:1686   */\n      0x1f\n        /* \"#utility.yul\":1677:1682   */\n      dup4\n        /* \"#utility.yul\":1673:1687   */\n      add\n        /* \"#utility.yul\":1669:1697   */\n      and\n        /* \"#utility.yul\":1659:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1601:1703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1709:2086   */\n    tag_362:\n        /* \"#utility.yul\":1797:1800   */\n      0x00\n        /* \"#utility.yul\":1825:1864   */\n      tag_410\n        /* \"#utility.yul\":1858:1863   */\n      dup3\n        /* \"#utility.yul\":1825:1864   */\n      tag_358\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1880:1951   */\n      tag_411\n        /* \"#utility.yul\":1944:1950   */\n      dup2\n        /* \"#utility.yul\":1939:1942   */\n      dup6\n        /* \"#utility.yul\":1880:1951   */\n      tag_359\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1873:1951   */\n      swap4\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_412\n        /* \"#utility.yul\":2018:2024   */\n      dup2\n        /* \"#utility.yul\":2013:2016   */\n      dup6\n        /* \"#utility.yul\":2006:2010   */\n      0x20\n        /* \"#utility.yul\":1999:2004   */\n      dup7\n        /* \"#utility.yul\":1995:2011   */\n      add\n        /* \"#utility.yul\":1960:2025   */\n      tag_360\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2050:2079   */\n      tag_413\n        /* \"#utility.yul\":2072:2078   */\n      dup2\n        /* \"#utility.yul\":2050:2079   */\n      tag_361\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2045:2048   */\n      dup5\n        /* \"#utility.yul\":2041:2080   */\n      add\n        /* \"#utility.yul\":2034:2080   */\n      swap2\n      pop\n        /* \"#utility.yul\":1801:2086   */\n      pop\n        /* \"#utility.yul\":1709:2086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2405   */\n    tag_54:\n        /* \"#utility.yul\":2205:2209   */\n      0x00\n        /* \"#utility.yul\":2243:2245   */\n      0x20\n        /* \"#utility.yul\":2232:2241   */\n      dup3\n        /* \"#utility.yul\":2228:2246   */\n      add\n        /* \"#utility.yul\":2220:2246   */\n      swap1\n      pop\n        /* \"#utility.yul\":2292:2301   */\n      dup2\n        /* \"#utility.yul\":2286:2290   */\n      dup2\n        /* \"#utility.yul\":2282:2302   */\n      sub\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2267:2276   */\n      dup4\n        /* \"#utility.yul\":2263:2280   */\n      add\n        /* \"#utility.yul\":2256:2303   */\n      mstore\n        /* \"#utility.yul\":2320:2398   */\n      tag_415\n        /* \"#utility.yul\":2393:2397   */\n      dup2\n        /* \"#utility.yul\":2384:2390   */\n      dup5\n        /* \"#utility.yul\":2320:2398   */\n      tag_362\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2312:2398   */\n      swap1\n      pop\n        /* \"#utility.yul\":2092:2405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2411:2488   */\n    tag_363:\n        /* \"#utility.yul\":2448:2455   */\n      0x00\n        /* \"#utility.yul\":2477:2482   */\n      dup2\n        /* \"#utility.yul\":2466:2482   */\n      swap1\n      pop\n        /* \"#utility.yul\":2411:2488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2494:2616   */\n    tag_364:\n        /* \"#utility.yul\":2567:2591   */\n      tag_418\n        /* \"#utility.yul\":2585:2590   */\n      dup2\n        /* \"#utility.yul\":2567:2591   */\n      tag_363\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2560:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2592   */\n      eq\n        /* \"#utility.yul\":2547:2610   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":2606:2607   */\n      0x00\n        /* \"#utility.yul\":2603:2604   */\n      0x00\n        /* \"#utility.yul\":2596:2608   */\n      revert\n        /* \"#utility.yul\":2547:2610   */\n    tag_419:\n        /* \"#utility.yul\":2494:2616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2622:2761   */\n    tag_365:\n        /* \"#utility.yul\":2668:2673   */\n      0x00\n        /* \"#utility.yul\":2706:2712   */\n      dup2\n        /* \"#utility.yul\":2693:2713   */\n      calldataload\n        /* \"#utility.yul\":2684:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2722:2755   */\n      tag_421\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2722:2755   */\n      tag_364\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2622:2761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2767:3241   */\n    tag_57:\n        /* \"#utility.yul\":2835:2841   */\n      0x00\n        /* \"#utility.yul\":2843:2849   */\n      0x00\n        /* \"#utility.yul\":2892:2894   */\n      0x40\n        /* \"#utility.yul\":2880:2889   */\n      dup4\n        /* \"#utility.yul\":2871:2878   */\n      dup6\n        /* \"#utility.yul\":2867:2890   */\n      sub\n        /* \"#utility.yul\":2863:2895   */\n      slt\n        /* \"#utility.yul\":2860:2979   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":2898:2977   */\n      tag_424\n      tag_352\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2860:2979   */\n    tag_423:\n        /* \"#utility.yul\":3018:3019   */\n      0x00\n        /* \"#utility.yul\":3043:3096   */\n      tag_425\n        /* \"#utility.yul\":3088:3095   */\n      dup6\n        /* \"#utility.yul\":3079:3085   */\n      dup3\n        /* \"#utility.yul\":3068:3077   */\n      dup7\n        /* \"#utility.yul\":3064:3086   */\n      add\n        /* \"#utility.yul\":3043:3096   */\n      tag_357\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3033:3096   */\n      swap3\n      pop\n        /* \"#utility.yul\":2989:3106   */\n      pop\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3171:3224   */\n      tag_426\n        /* \"#utility.yul\":3216:3223   */\n      dup6\n        /* \"#utility.yul\":3207:3213   */\n      dup3\n        /* \"#utility.yul\":3196:3205   */\n      dup7\n        /* \"#utility.yul\":3192:3214   */\n      add\n        /* \"#utility.yul\":3171:3224   */\n      tag_365\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3161:3224   */\n      swap2\n      pop\n        /* \"#utility.yul\":3116:3234   */\n      pop\n        /* \"#utility.yul\":2767:3241   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3337   */\n    tag_366:\n        /* \"#utility.yul\":3281:3288   */\n      0x00\n        /* \"#utility.yul\":3324:3329   */\n      dup2\n        /* \"#utility.yul\":3317:3330   */\n      iszero\n        /* \"#utility.yul\":3310:3331   */\n      iszero\n        /* \"#utility.yul\":3299:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3247:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3452   */\n    tag_367:\n        /* \"#utility.yul\":3424:3445   */\n      tag_429\n        /* \"#utility.yul\":3439:3444   */\n      dup2\n        /* \"#utility.yul\":3424:3445   */\n      tag_366\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3419:3422   */\n      dup3\n        /* \"#utility.yul\":3412:3446   */\n      mstore\n        /* \"#utility.yul\":3343:3452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3458:3668   */\n    tag_60:\n        /* \"#utility.yul\":3545:3549   */\n      0x00\n        /* \"#utility.yul\":3583:3585   */\n      0x20\n        /* \"#utility.yul\":3572:3581   */\n      dup3\n        /* \"#utility.yul\":3568:3586   */\n      add\n        /* \"#utility.yul\":3560:3586   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3661   */\n      tag_431\n        /* \"#utility.yul\":3658:3659   */\n      0x00\n        /* \"#utility.yul\":3647:3656   */\n      dup4\n        /* \"#utility.yul\":3643:3660   */\n      add\n        /* \"#utility.yul\":3634:3640   */\n      dup5\n        /* \"#utility.yul\":3596:3661   */\n      tag_367\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3458:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_368:\n        /* \"#utility.yul\":3761:3785   */\n      tag_433\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_363\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_64:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_435\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_368\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_73:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_438\n      tag_352\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4136:4255   */\n    tag_437:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_439\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_357\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_440\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_357\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_441\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_365\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_369:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_370:\n        /* \"#utility.yul\":4826:4848   */\n      tag_444\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_369\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_84:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_446\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_370\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_93:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_449\n      tag_352\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5157:5276   */\n    tag_448:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_450\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_365\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_371:\n        /* \"#utility.yul\":5503:5527   */\n      tag_452\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_355\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_131:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_454\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_371\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6321   */\n    tag_153:\n        /* \"#utility.yul\":5945:5949   */\n      0x00\n        /* \"#utility.yul\":5983:5986   */\n      0x80\n        /* \"#utility.yul\":5972:5981   */\n      dup3\n        /* \"#utility.yul\":5968:5987   */\n      add\n        /* \"#utility.yul\":5960:5987   */\n      swap1\n      pop\n        /* \"#utility.yul\":5997:6068   */\n      tag_456\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6054:6063   */\n      dup4\n        /* \"#utility.yul\":6050:6067   */\n      add\n        /* \"#utility.yul\":6041:6047   */\n      dup8\n        /* \"#utility.yul\":5997:6068   */\n      tag_371\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6078:6150   */\n      tag_457\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6135:6144   */\n      dup4\n        /* \"#utility.yul\":6131:6149   */\n      add\n        /* \"#utility.yul\":6122:6128   */\n      dup7\n        /* \"#utility.yul\":6078:6150   */\n      tag_368\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6160:6232   */\n      tag_458\n        /* \"#utility.yul\":6228:6230   */\n      0x40\n        /* \"#utility.yul\":6217:6226   */\n      dup4\n        /* \"#utility.yul\":6213:6231   */\n      add\n        /* \"#utility.yul\":6204:6210   */\n      dup6\n        /* \"#utility.yul\":6160:6232   */\n      tag_368\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6242:6314   */\n      tag_459\n        /* \"#utility.yul\":6310:6312   */\n      0x60\n        /* \"#utility.yul\":6299:6308   */\n      dup4\n        /* \"#utility.yul\":6295:6313   */\n      add\n        /* \"#utility.yul\":6286:6292   */\n      dup5\n        /* \"#utility.yul\":6242:6314   */\n      tag_368\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5768:6321   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6801   */\n    tag_156:\n        /* \"#utility.yul\":6395:6401   */\n      0x00\n        /* \"#utility.yul\":6403:6409   */\n      0x00\n        /* \"#utility.yul\":6452:6454   */\n      0x40\n        /* \"#utility.yul\":6440:6449   */\n      dup4\n        /* \"#utility.yul\":6431:6438   */\n      dup6\n        /* \"#utility.yul\":6427:6450   */\n      sub\n        /* \"#utility.yul\":6423:6455   */\n      slt\n        /* \"#utility.yul\":6420:6539   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":6458:6537   */\n      tag_462\n      tag_352\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6420:6539   */\n    tag_461:\n        /* \"#utility.yul\":6578:6579   */\n      0x00\n        /* \"#utility.yul\":6603:6656   */\n      tag_463\n        /* \"#utility.yul\":6648:6655   */\n      dup6\n        /* \"#utility.yul\":6639:6645   */\n      dup3\n        /* \"#utility.yul\":6628:6637   */\n      dup7\n        /* \"#utility.yul\":6624:6646   */\n      add\n        /* \"#utility.yul\":6603:6656   */\n      tag_357\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6593:6656   */\n      swap3\n      pop\n        /* \"#utility.yul\":6549:6666   */\n      pop\n        /* \"#utility.yul\":6705:6707   */\n      0x20\n        /* \"#utility.yul\":6731:6784   */\n      tag_464\n        /* \"#utility.yul\":6776:6783   */\n      dup6\n        /* \"#utility.yul\":6767:6773   */\n      dup3\n        /* \"#utility.yul\":6756:6765   */\n      dup7\n        /* \"#utility.yul\":6752:6774   */\n      add\n        /* \"#utility.yul\":6731:6784   */\n      tag_357\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6721:6784   */\n      swap2\n      pop\n        /* \"#utility.yul\":6676:6794   */\n      pop\n        /* \"#utility.yul\":6327:6801   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6807:6987   */\n    tag_372:\n        /* \"#utility.yul\":6855:6932   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6852:6853   */\n      0x00\n        /* \"#utility.yul\":6845:6933   */\n      mstore\n        /* \"#utility.yul\":6952:6956   */\n      0x22\n        /* \"#utility.yul\":6949:6950   */\n      0x04\n        /* \"#utility.yul\":6942:6957   */\n      mstore\n        /* \"#utility.yul\":6976:6980   */\n      0x24\n        /* \"#utility.yul\":6973:6974   */\n      0x00\n        /* \"#utility.yul\":6966:6981   */\n      revert\n        /* \"#utility.yul\":6993:7313   */\n    tag_177:\n        /* \"#utility.yul\":7037:7043   */\n      0x00\n        /* \"#utility.yul\":7074:7075   */\n      0x02\n        /* \"#utility.yul\":7068:7072   */\n      dup3\n        /* \"#utility.yul\":7064:7076   */\n      div\n        /* \"#utility.yul\":7054:7076   */\n      swap1\n      pop\n        /* \"#utility.yul\":7121:7122   */\n      0x01\n        /* \"#utility.yul\":7115:7119   */\n      dup3\n        /* \"#utility.yul\":7111:7123   */\n      and\n        /* \"#utility.yul\":7142:7160   */\n      dup1\n        /* \"#utility.yul\":7132:7213   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7198:7202   */\n      0x7f\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7186:7203   */\n      and\n        /* \"#utility.yul\":7176:7203   */\n      swap2\n      pop\n        /* \"#utility.yul\":7132:7213   */\n    tag_467:\n        /* \"#utility.yul\":7260:7262   */\n      0x20\n        /* \"#utility.yul\":7252:7258   */\n      dup3\n        /* \"#utility.yul\":7249:7263   */\n      lt\n        /* \"#utility.yul\":7229:7247   */\n      dup2\n        /* \"#utility.yul\":7226:7264   */\n      sub\n        /* \"#utility.yul\":7223:7307   */\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7279:7297   */\n      tag_469\n      tag_372\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":7223:7307   */\n    tag_468:\n        /* \"#utility.yul\":7044:7313   */\n      pop\n        /* \"#utility.yul\":6993:7313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7319:7548   */\n    tag_373:\n        /* \"#utility.yul\":7459:7493   */\n      0x426c61636b6c6973746564206163636f756e74732063616e6e6f742062652077\n        /* \"#utility.yul\":7455:7456   */\n      0x00\n        /* \"#utility.yul\":7447:7453   */\n      dup3\n        /* \"#utility.yul\":7443:7457   */\n      add\n        /* \"#utility.yul\":7436:7494   */\n      mstore\n        /* \"#utility.yul\":7528:7540   */\n      0x686974656c697374656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7523:7525   */\n      0x20\n        /* \"#utility.yul\":7515:7521   */\n      dup3\n        /* \"#utility.yul\":7511:7526   */\n      add\n        /* \"#utility.yul\":7504:7541   */\n      mstore\n        /* \"#utility.yul\":7319:7548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7554:7920   */\n    tag_374:\n        /* \"#utility.yul\":7696:7699   */\n      0x00\n        /* \"#utility.yul\":7717:7784   */\n      tag_472\n        /* \"#utility.yul\":7781:7783   */\n      0x2a\n        /* \"#utility.yul\":7776:7779   */\n      dup4\n        /* \"#utility.yul\":7717:7784   */\n      tag_359\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7710:7784   */\n      swap2\n      pop\n        /* \"#utility.yul\":7793:7886   */\n      tag_473\n        /* \"#utility.yul\":7882:7885   */\n      dup3\n        /* \"#utility.yul\":7793:7886   */\n      tag_373\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7911:7913   */\n      0x40\n        /* \"#utility.yul\":7906:7909   */\n      dup3\n        /* \"#utility.yul\":7902:7914   */\n      add\n        /* \"#utility.yul\":7895:7914   */\n      swap1\n      pop\n        /* \"#utility.yul\":7554:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8345   */\n    tag_210:\n        /* \"#utility.yul\":8092:8096   */\n      0x00\n        /* \"#utility.yul\":8130:8132   */\n      0x20\n        /* \"#utility.yul\":8119:8128   */\n      dup3\n        /* \"#utility.yul\":8115:8133   */\n      add\n        /* \"#utility.yul\":8107:8133   */\n      swap1\n      pop\n        /* \"#utility.yul\":8179:8188   */\n      dup2\n        /* \"#utility.yul\":8173:8177   */\n      dup2\n        /* \"#utility.yul\":8169:8189   */\n      sub\n        /* \"#utility.yul\":8165:8166   */\n      0x00\n        /* \"#utility.yul\":8154:8163   */\n      dup4\n        /* \"#utility.yul\":8150:8167   */\n      add\n        /* \"#utility.yul\":8143:8190   */\n      mstore\n        /* \"#utility.yul\":8207:8338   */\n      tag_475\n        /* \"#utility.yul\":8333:8337   */\n      dup2\n        /* \"#utility.yul\":8207:8338   */\n      tag_374\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8199:8338   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8351:8576   */\n    tag_375:\n        /* \"#utility.yul\":8491:8525   */\n      0x536c69707061676520666565732063616e6e6f74206265206869676865722074\n        /* \"#utility.yul\":8487:8488   */\n      0x00\n        /* \"#utility.yul\":8479:8485   */\n      dup3\n        /* \"#utility.yul\":8475:8489   */\n      add\n        /* \"#utility.yul\":8468:8526   */\n      mstore\n        /* \"#utility.yul\":8560:8568   */\n      0x68616e2035250000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8555:8557   */\n      0x20\n        /* \"#utility.yul\":8547:8553   */\n      dup3\n        /* \"#utility.yul\":8543:8558   */\n      add\n        /* \"#utility.yul\":8536:8569   */\n      mstore\n        /* \"#utility.yul\":8351:8576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8582:8948   */\n    tag_376:\n        /* \"#utility.yul\":8724:8727   */\n      0x00\n        /* \"#utility.yul\":8745:8812   */\n      tag_478\n        /* \"#utility.yul\":8809:8811   */\n      0x26\n        /* \"#utility.yul\":8804:8807   */\n      dup4\n        /* \"#utility.yul\":8745:8812   */\n      tag_359\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8738:8812   */\n      swap2\n      pop\n        /* \"#utility.yul\":8821:8914   */\n      tag_479\n        /* \"#utility.yul\":8910:8913   */\n      dup3\n        /* \"#utility.yul\":8821:8914   */\n      tag_375\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8939:8941   */\n      0x40\n        /* \"#utility.yul\":8934:8937   */\n      dup3\n        /* \"#utility.yul\":8930:8942   */\n      add\n        /* \"#utility.yul\":8923:8942   */\n      swap1\n      pop\n        /* \"#utility.yul\":8582:8948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8954:9373   */\n    tag_216:\n        /* \"#utility.yul\":9120:9124   */\n      0x00\n        /* \"#utility.yul\":9158:9160   */\n      0x20\n        /* \"#utility.yul\":9147:9156   */\n      dup3\n        /* \"#utility.yul\":9143:9161   */\n      add\n        /* \"#utility.yul\":9135:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9207:9216   */\n      dup2\n        /* \"#utility.yul\":9201:9205   */\n      dup2\n        /* \"#utility.yul\":9197:9217   */\n      sub\n        /* \"#utility.yul\":9193:9194   */\n      0x00\n        /* \"#utility.yul\":9182:9191   */\n      dup4\n        /* \"#utility.yul\":9178:9195   */\n      add\n        /* \"#utility.yul\":9171:9218   */\n      mstore\n        /* \"#utility.yul\":9235:9366   */\n      tag_481\n        /* \"#utility.yul\":9361:9365   */\n      dup2\n        /* \"#utility.yul\":9235:9366   */\n      tag_376\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":9227:9366   */\n      swap1\n      pop\n        /* \"#utility.yul\":8954:9373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9599   */\n    tag_377:\n        /* \"#utility.yul\":9519:9553   */\n      0x546178206665652063616e6e6f7420626520686967686572207468616e203130\n        /* \"#utility.yul\":9515:9516   */\n      0x00\n        /* \"#utility.yul\":9507:9513   */\n      dup3\n        /* \"#utility.yul\":9503:9517   */\n      add\n        /* \"#utility.yul\":9496:9554   */\n      mstore\n        /* \"#utility.yul\":9588:9591   */\n      0x2500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9583:9585   */\n      0x20\n        /* \"#utility.yul\":9575:9581   */\n      dup3\n        /* \"#utility.yul\":9571:9586   */\n      add\n        /* \"#utility.yul\":9564:9592   */\n      mstore\n        /* \"#utility.yul\":9379:9599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9605:9971   */\n    tag_378:\n        /* \"#utility.yul\":9747:9750   */\n      0x00\n        /* \"#utility.yul\":9768:9835   */\n      tag_484\n        /* \"#utility.yul\":9832:9834   */\n      0x21\n        /* \"#utility.yul\":9827:9830   */\n      dup4\n        /* \"#utility.yul\":9768:9835   */\n      tag_359\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9761:9835   */\n      swap2\n      pop\n        /* \"#utility.yul\":9844:9937   */\n      tag_485\n        /* \"#utility.yul\":9933:9936   */\n      dup3\n        /* \"#utility.yul\":9844:9937   */\n      tag_377\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":9962:9964   */\n      0x40\n        /* \"#utility.yul\":9957:9960   */\n      dup3\n        /* \"#utility.yul\":9953:9965   */\n      add\n        /* \"#utility.yul\":9946:9965   */\n      swap1\n      pop\n        /* \"#utility.yul\":9605:9971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9977:10396   */\n    tag_222:\n        /* \"#utility.yul\":10143:10147   */\n      0x00\n        /* \"#utility.yul\":10181:10183   */\n      0x20\n        /* \"#utility.yul\":10170:10179   */\n      dup3\n        /* \"#utility.yul\":10166:10184   */\n      add\n        /* \"#utility.yul\":10158:10184   */\n      swap1\n      pop\n        /* \"#utility.yul\":10230:10239   */\n      dup2\n        /* \"#utility.yul\":10224:10228   */\n      dup2\n        /* \"#utility.yul\":10220:10240   */\n      sub\n        /* \"#utility.yul\":10216:10217   */\n      0x00\n        /* \"#utility.yul\":10205:10214   */\n      dup4\n        /* \"#utility.yul\":10201:10218   */\n      add\n        /* \"#utility.yul\":10194:10241   */\n      mstore\n        /* \"#utility.yul\":10258:10389   */\n      tag_487\n        /* \"#utility.yul\":10384:10388   */\n      dup2\n        /* \"#utility.yul\":10258:10389   */\n      tag_378\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":10250:10389   */\n      swap1\n      pop\n        /* \"#utility.yul\":9977:10396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10402:10844   */\n    tag_289:\n        /* \"#utility.yul\":10551:10555   */\n      0x00\n        /* \"#utility.yul\":10589:10591   */\n      0x60\n        /* \"#utility.yul\":10578:10587   */\n      dup3\n        /* \"#utility.yul\":10574:10592   */\n      add\n        /* \"#utility.yul\":10566:10592   */\n      swap1\n      pop\n        /* \"#utility.yul\":10602:10673   */\n      tag_489\n        /* \"#utility.yul\":10670:10671   */\n      0x00\n        /* \"#utility.yul\":10659:10668   */\n      dup4\n        /* \"#utility.yul\":10655:10672   */\n      add\n        /* \"#utility.yul\":10646:10652   */\n      dup7\n        /* \"#utility.yul\":10602:10673   */\n      tag_371\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10683:10755   */\n      tag_490\n        /* \"#utility.yul\":10751:10753   */\n      0x20\n        /* \"#utility.yul\":10740:10749   */\n      dup4\n        /* \"#utility.yul\":10736:10754   */\n      add\n        /* \"#utility.yul\":10727:10733   */\n      dup6\n        /* \"#utility.yul\":10683:10755   */\n      tag_368\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":10765:10837   */\n      tag_491\n        /* \"#utility.yul\":10833:10835   */\n      0x40\n        /* \"#utility.yul\":10822:10831   */\n      dup4\n        /* \"#utility.yul\":10818:10836   */\n      add\n        /* \"#utility.yul\":10809:10815   */\n      dup5\n        /* \"#utility.yul\":10765:10837   */\n      tag_368\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10402:10844   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10850:11019   */\n    tag_379:\n        /* \"#utility.yul\":10990:11011   */\n      0x426c61636b6c6973746564206164647265737300000000000000000000000000\n        /* \"#utility.yul\":10986:10987   */\n      0x00\n        /* \"#utility.yul\":10978:10984   */\n      dup3\n        /* \"#utility.yul\":10974:10988   */\n      add\n        /* \"#utility.yul\":10967:11012   */\n      mstore\n        /* \"#utility.yul\":10850:11019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11391   */\n    tag_380:\n        /* \"#utility.yul\":11167:11170   */\n      0x00\n        /* \"#utility.yul\":11188:11255   */\n      tag_494\n        /* \"#utility.yul\":11252:11254   */\n      0x13\n        /* \"#utility.yul\":11247:11250   */\n      dup4\n        /* \"#utility.yul\":11188:11255   */\n      tag_359\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":11181:11255   */\n      swap2\n      pop\n        /* \"#utility.yul\":11264:11357   */\n      tag_495\n        /* \"#utility.yul\":11353:11356   */\n      dup3\n        /* \"#utility.yul\":11264:11357   */\n      tag_379\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11382:11384   */\n      0x20\n        /* \"#utility.yul\":11377:11380   */\n      dup3\n        /* \"#utility.yul\":11373:11385   */\n      add\n        /* \"#utility.yul\":11366:11385   */\n      swap1\n      pop\n        /* \"#utility.yul\":11025:11391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11397:11816   */\n    tag_314:\n        /* \"#utility.yul\":11563:11567   */\n      0x00\n        /* \"#utility.yul\":11601:11603   */\n      0x20\n        /* \"#utility.yul\":11590:11599   */\n      dup3\n        /* \"#utility.yul\":11586:11604   */\n      add\n        /* \"#utility.yul\":11578:11604   */\n      swap1\n      pop\n        /* \"#utility.yul\":11650:11659   */\n      dup2\n        /* \"#utility.yul\":11644:11648   */\n      dup2\n        /* \"#utility.yul\":11640:11660   */\n      sub\n        /* \"#utility.yul\":11636:11637   */\n      0x00\n        /* \"#utility.yul\":11625:11634   */\n      dup4\n        /* \"#utility.yul\":11621:11638   */\n      add\n        /* \"#utility.yul\":11614:11661   */\n      mstore\n        /* \"#utility.yul\":11678:11809   */\n      tag_497\n        /* \"#utility.yul\":11804:11808   */\n      dup2\n        /* \"#utility.yul\":11678:11809   */\n      tag_380\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11670:11809   */\n      swap1\n      pop\n        /* \"#utility.yul\":11397:11816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11822:12043   */\n    tag_381:\n        /* \"#utility.yul\":11962:11996   */\n      0x426f746820616464726573736573206d7573742062652077686974656c697374\n        /* \"#utility.yul\":11958:11959   */\n      0x00\n        /* \"#utility.yul\":11950:11956   */\n      dup3\n        /* \"#utility.yul\":11946:11960   */\n      add\n        /* \"#utility.yul\":11939:11997   */\n      mstore\n        /* \"#utility.yul\":12031:12035   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12026:12028   */\n      0x20\n        /* \"#utility.yul\":12018:12024   */\n      dup3\n        /* \"#utility.yul\":12014:12029   */\n      add\n        /* \"#utility.yul\":12007:12036   */\n      mstore\n        /* \"#utility.yul\":11822:12043   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12049:12415   */\n    tag_382:\n        /* \"#utility.yul\":12191:12194   */\n      0x00\n        /* \"#utility.yul\":12212:12279   */\n      tag_500\n        /* \"#utility.yul\":12276:12278   */\n      0x22\n        /* \"#utility.yul\":12271:12274   */\n      dup4\n        /* \"#utility.yul\":12212:12279   */\n      tag_359\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12205:12279   */\n      swap2\n      pop\n        /* \"#utility.yul\":12288:12381   */\n      tag_501\n        /* \"#utility.yul\":12377:12380   */\n      dup3\n        /* \"#utility.yul\":12288:12381   */\n      tag_381\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12406:12408   */\n      0x40\n        /* \"#utility.yul\":12401:12404   */\n      dup3\n        /* \"#utility.yul\":12397:12409   */\n      add\n        /* \"#utility.yul\":12390:12409   */\n      swap1\n      pop\n        /* \"#utility.yul\":12049:12415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12421:12840   */\n    tag_319:\n        /* \"#utility.yul\":12587:12591   */\n      0x00\n        /* \"#utility.yul\":12625:12627   */\n      0x20\n        /* \"#utility.yul\":12614:12623   */\n      dup3\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12602:12628   */\n      swap1\n      pop\n        /* \"#utility.yul\":12674:12683   */\n      dup2\n        /* \"#utility.yul\":12668:12672   */\n      dup2\n        /* \"#utility.yul\":12664:12684   */\n      sub\n        /* \"#utility.yul\":12660:12661   */\n      0x00\n        /* \"#utility.yul\":12649:12658   */\n      dup4\n        /* \"#utility.yul\":12645:12662   */\n      add\n        /* \"#utility.yul\":12638:12685   */\n      mstore\n        /* \"#utility.yul\":12702:12833   */\n      tag_503\n        /* \"#utility.yul\":12828:12832   */\n      dup2\n        /* \"#utility.yul\":12702:12833   */\n      tag_382\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12694:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:13025   */\n    tag_383:\n        /* \"#utility.yul\":12986:13017   */\n      0x546f6b656e207472616e73666572206c696d6974206578636565646564000000\n        /* \"#utility.yul\":12982:12983   */\n      0x00\n        /* \"#utility.yul\":12974:12980   */\n      dup3\n        /* \"#utility.yul\":12970:12984   */\n      add\n        /* \"#utility.yul\":12963:13018   */\n      mstore\n        /* \"#utility.yul\":12846:13025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13031:13397   */\n    tag_384:\n        /* \"#utility.yul\":13173:13176   */\n      0x00\n        /* \"#utility.yul\":13194:13261   */\n      tag_506\n        /* \"#utility.yul\":13258:13260   */\n      0x1d\n        /* \"#utility.yul\":13253:13256   */\n      dup4\n        /* \"#utility.yul\":13194:13261   */\n      tag_359\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13187:13261   */\n      swap2\n      pop\n        /* \"#utility.yul\":13270:13363   */\n      tag_507\n        /* \"#utility.yul\":13359:13362   */\n      dup3\n        /* \"#utility.yul\":13270:13363   */\n      tag_383\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13388:13390   */\n      0x20\n        /* \"#utility.yul\":13383:13386   */\n      dup3\n        /* \"#utility.yul\":13379:13391   */\n      add\n        /* \"#utility.yul\":13372:13391   */\n      swap1\n      pop\n        /* \"#utility.yul\":13031:13397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13403:13822   */\n    tag_322:\n        /* \"#utility.yul\":13569:13573   */\n      0x00\n        /* \"#utility.yul\":13607:13609   */\n      0x20\n        /* \"#utility.yul\":13596:13605   */\n      dup3\n        /* \"#utility.yul\":13592:13610   */\n      add\n        /* \"#utility.yul\":13584:13610   */\n      swap1\n      pop\n        /* \"#utility.yul\":13656:13665   */\n      dup2\n        /* \"#utility.yul\":13650:13654   */\n      dup2\n        /* \"#utility.yul\":13646:13666   */\n      sub\n        /* \"#utility.yul\":13642:13643   */\n      0x00\n        /* \"#utility.yul\":13631:13640   */\n      dup4\n        /* \"#utility.yul\":13627:13644   */\n      add\n        /* \"#utility.yul\":13620:13667   */\n      mstore\n        /* \"#utility.yul\":13684:13815   */\n      tag_509\n        /* \"#utility.yul\":13810:13814   */\n      dup2\n        /* \"#utility.yul\":13684:13815   */\n      tag_384\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13676:13815   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13828:14008   */\n    tag_385:\n        /* \"#utility.yul\":13876:13953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13873:13874   */\n      0x00\n        /* \"#utility.yul\":13866:13954   */\n      mstore\n        /* \"#utility.yul\":13973:13977   */\n      0x11\n        /* \"#utility.yul\":13970:13971   */\n      0x04\n        /* \"#utility.yul\":13963:13978   */\n      mstore\n        /* \"#utility.yul\":13997:14001   */\n      0x24\n        /* \"#utility.yul\":13994:13995   */\n      0x00\n        /* \"#utility.yul\":13987:14002   */\n      revert\n        /* \"#utility.yul\":14014:14205   */\n    tag_324:\n        /* \"#utility.yul\":14054:14057   */\n      0x00\n        /* \"#utility.yul\":14073:14093   */\n      tag_512\n        /* \"#utility.yul\":14091:14092   */\n      dup3\n        /* \"#utility.yul\":14073:14093   */\n      tag_363\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14068:14093   */\n      swap2\n      pop\n        /* \"#utility.yul\":14107:14127   */\n      tag_513\n        /* \"#utility.yul\":14125:14126   */\n      dup4\n        /* \"#utility.yul\":14107:14127   */\n      tag_363\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14102:14127   */\n      swap3\n      pop\n        /* \"#utility.yul\":14150:14151   */\n      dup3\n        /* \"#utility.yul\":14147:14148   */\n      dup3\n        /* \"#utility.yul\":14143:14152   */\n      add\n        /* \"#utility.yul\":14136:14152   */\n      swap1\n      pop\n        /* \"#utility.yul\":14171:14174   */\n      dup1\n        /* \"#utility.yul\":14168:14169   */\n      dup3\n        /* \"#utility.yul\":14165:14175   */\n      gt\n        /* \"#utility.yul\":14162:14198   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":14178:14196   */\n      tag_515\n      tag_385\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14162:14198   */\n    tag_514:\n        /* \"#utility.yul\":14014:14205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14211:14381   */\n    tag_386:\n        /* \"#utility.yul\":14351:14373   */\n      0x436f6f6c646f776e2074696d6520706572696f64000000000000000000000000\n        /* \"#utility.yul\":14347:14348   */\n      0x00\n        /* \"#utility.yul\":14339:14345   */\n      dup3\n        /* \"#utility.yul\":14335:14349   */\n      add\n        /* \"#utility.yul\":14328:14374   */\n      mstore\n        /* \"#utility.yul\":14211:14381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14387:14753   */\n    tag_387:\n        /* \"#utility.yul\":14529:14532   */\n      0x00\n        /* \"#utility.yul\":14550:14617   */\n      tag_518\n        /* \"#utility.yul\":14614:14616   */\n      0x14\n        /* \"#utility.yul\":14609:14612   */\n      dup4\n        /* \"#utility.yul\":14550:14617   */\n      tag_359\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":14543:14617   */\n      swap2\n      pop\n        /* \"#utility.yul\":14626:14719   */\n      tag_519\n        /* \"#utility.yul\":14715:14718   */\n      dup3\n        /* \"#utility.yul\":14626:14719   */\n      tag_386\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14744:14746   */\n      0x20\n        /* \"#utility.yul\":14739:14742   */\n      dup3\n        /* \"#utility.yul\":14735:14747   */\n      add\n        /* \"#utility.yul\":14728:14747   */\n      swap1\n      pop\n        /* \"#utility.yul\":14387:14753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14759:15178   */\n    tag_327:\n        /* \"#utility.yul\":14925:14929   */\n      0x00\n        /* \"#utility.yul\":14963:14965   */\n      0x20\n        /* \"#utility.yul\":14952:14961   */\n      dup3\n        /* \"#utility.yul\":14948:14966   */\n      add\n        /* \"#utility.yul\":14940:14966   */\n      swap1\n      pop\n        /* \"#utility.yul\":15012:15021   */\n      dup2\n        /* \"#utility.yul\":15006:15010   */\n      dup2\n        /* \"#utility.yul\":15002:15022   */\n      sub\n        /* \"#utility.yul\":14998:14999   */\n      0x00\n        /* \"#utility.yul\":14987:14996   */\n      dup4\n        /* \"#utility.yul\":14983:15000   */\n      add\n        /* \"#utility.yul\":14976:15023   */\n      mstore\n        /* \"#utility.yul\":15040:15171   */\n      tag_521\n        /* \"#utility.yul\":15166:15170   */\n      dup2\n        /* \"#utility.yul\":15040:15171   */\n      tag_387\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15032:15171   */\n      swap1\n      pop\n        /* \"#utility.yul\":14759:15178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15184:15594   */\n    tag_336:\n        /* \"#utility.yul\":15224:15231   */\n      0x00\n        /* \"#utility.yul\":15247:15267   */\n      tag_523\n        /* \"#utility.yul\":15265:15266   */\n      dup3\n        /* \"#utility.yul\":15247:15267   */\n      tag_363\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15242:15267   */\n      swap2\n      pop\n        /* \"#utility.yul\":15281:15301   */\n      tag_524\n        /* \"#utility.yul\":15299:15300   */\n      dup4\n        /* \"#utility.yul\":15281:15301   */\n      tag_363\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":15276:15301   */\n      swap3\n      pop\n        /* \"#utility.yul\":15336:15337   */\n      dup3\n        /* \"#utility.yul\":15333:15334   */\n      dup3\n        /* \"#utility.yul\":15329:15338   */\n      mul\n        /* \"#utility.yul\":15358:15388   */\n      tag_525\n        /* \"#utility.yul\":15376:15387   */\n      dup2\n        /* \"#utility.yul\":15358:15388   */\n      tag_363\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15347:15388   */\n      swap2\n      pop\n        /* \"#utility.yul\":15537:15538   */\n      dup3\n        /* \"#utility.yul\":15528:15535   */\n      dup3\n        /* \"#utility.yul\":15524:15539   */\n      div\n        /* \"#utility.yul\":15521:15522   */\n      dup5\n        /* \"#utility.yul\":15518:15540   */\n      eq\n        /* \"#utility.yul\":15498:15499   */\n      dup4\n        /* \"#utility.yul\":15491:15500   */\n      iszero\n        /* \"#utility.yul\":15471:15554   */\n      or\n        /* \"#utility.yul\":15448:15587   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":15567:15585   */\n      tag_527\n      tag_385\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15448:15587   */\n    tag_526:\n        /* \"#utility.yul\":15232:15594   */\n      pop\n        /* \"#utility.yul\":15184:15594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15600:15780   */\n    tag_388:\n        /* \"#utility.yul\":15648:15725   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15645:15646   */\n      0x00\n        /* \"#utility.yul\":15638:15726   */\n      mstore\n        /* \"#utility.yul\":15745:15749   */\n      0x12\n        /* \"#utility.yul\":15742:15743   */\n      0x04\n        /* \"#utility.yul\":15735:15750   */\n      mstore\n        /* \"#utility.yul\":15769:15773   */\n      0x24\n        /* \"#utility.yul\":15766:15767   */\n      0x00\n        /* \"#utility.yul\":15759:15774   */\n      revert\n        /* \"#utility.yul\":15786:15971   */\n    tag_338:\n        /* \"#utility.yul\":15826:15827   */\n      0x00\n        /* \"#utility.yul\":15843:15863   */\n      tag_530\n        /* \"#utility.yul\":15861:15862   */\n      dup3\n        /* \"#utility.yul\":15843:15863   */\n      tag_363\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15838:15863   */\n      swap2\n      pop\n        /* \"#utility.yul\":15877:15897   */\n      tag_531\n        /* \"#utility.yul\":15895:15896   */\n      dup4\n        /* \"#utility.yul\":15877:15897   */\n      tag_363\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":15872:15897   */\n      swap3\n      pop\n        /* \"#utility.yul\":15916:15917   */\n      dup3\n        /* \"#utility.yul\":15906:15941   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":15921:15939   */\n      tag_533\n      tag_388\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15906:15941   */\n    tag_532:\n        /* \"#utility.yul\":15963:15964   */\n      dup3\n        /* \"#utility.yul\":15960:15961   */\n      dup3\n        /* \"#utility.yul\":15956:15965   */\n      div\n        /* \"#utility.yul\":15951:15965   */\n      swap1\n      pop\n        /* \"#utility.yul\":15786:15971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15977:16171   */\n    tag_340:\n        /* \"#utility.yul\":16017:16021   */\n      0x00\n        /* \"#utility.yul\":16037:16057   */\n      tag_535\n        /* \"#utility.yul\":16055:16056   */\n      dup3\n        /* \"#utility.yul\":16037:16057   */\n      tag_363\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16032:16057   */\n      swap2\n      pop\n        /* \"#utility.yul\":16071:16091   */\n      tag_536\n        /* \"#utility.yul\":16089:16090   */\n      dup4\n        /* \"#utility.yul\":16071:16091   */\n      tag_363\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":16066:16091   */\n      swap3\n      pop\n        /* \"#utility.yul\":16115:16116   */\n      dup3\n        /* \"#utility.yul\":16112:16113   */\n      dup3\n        /* \"#utility.yul\":16108:16117   */\n      sub\n        /* \"#utility.yul\":16100:16117   */\n      swap1\n      pop\n        /* \"#utility.yul\":16139:16140   */\n      dup2\n        /* \"#utility.yul\":16133:16137   */\n      dup2\n        /* \"#utility.yul\":16130:16141   */\n      gt\n        /* \"#utility.yul\":16127:16164   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":16144:16162   */\n      tag_538\n      tag_385\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16127:16164   */\n    tag_537:\n        /* \"#utility.yul\":15977:16171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220101ff2a8b897d4bcb96453bcc5f6e97efb9ceee4ba36e6e53ae25328464743a264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1018": {
									"entryPoint": null,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 840,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 645,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1318": {
									"entryPoint": 973,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1971,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 637,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d": {
									"entryPoint": 4400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15656:7",
										"nodeType": "YulBlock",
										"src": "0:15656:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:7",
													"nodeType": "YulBlock",
													"src": "35:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:7",
																		"nodeType": "YulLiteral",
																		"src": "52:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:7",
																		"nodeType": "YulLiteral",
																		"src": "55:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:7"
																},
																"nativeSrc": "45:88:7",
																"nodeType": "YulFunctionCall",
																"src": "45:88:7"
															},
															"nativeSrc": "45:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "149:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:7",
																		"nodeType": "YulLiteral",
																		"src": "152:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:7"
																},
																"nativeSrc": "142:15:7",
																"nodeType": "YulFunctionCall",
																"src": "142:15:7"
															},
															"nativeSrc": "142:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:7",
																		"nodeType": "YulLiteral",
																		"src": "173:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:7",
																		"nodeType": "YulLiteral",
																		"src": "176:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nativeSrc": "166:15:7",
																"nodeType": "YulFunctionCall",
																"src": "166:15:7"
															},
															"nativeSrc": "166:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:7"
											},
											{
												"body": {
													"nativeSrc": "244:51:7",
													"nodeType": "YulBlock",
													"src": "244:51:7",
													"statements": [
														{
															"nativeSrc": "254:34:7",
															"nodeType": "YulAssignment",
															"src": "254:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:7",
																		"nodeType": "YulLiteral",
																		"src": "279:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:13:7",
																"nodeType": "YulFunctionCall",
																"src": "275:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:7",
														"nodeType": "YulTypedName",
														"src": "225:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:7",
														"nodeType": "YulTypedName",
														"src": "235:8:7",
														"type": ""
													}
												],
												"src": "193:102:7"
											},
											{
												"body": {
													"nativeSrc": "374:775:7",
													"nodeType": "YulBlock",
													"src": "374:775:7",
													"statements": [
														{
															"nativeSrc": "384:15:7",
															"nodeType": "YulAssignment",
															"src": "384:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:7",
																"nodeType": "YulIdentifier",
																"src": "393:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:7"
																}
															]
														},
														{
															"nativeSrc": "408:14:7",
															"nodeType": "YulAssignment",
															"src": "408:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:7",
																"nodeType": "YulIdentifier",
																"src": "417:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:7",
																"nodeType": "YulBlock",
																"src": "466:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:7",
																			"nodeType": "YulBlock",
																			"src": "554:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:7"
																						},
																						"nativeSrc": "556:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:7"
																					},
																					"nativeSrc": "556:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:7"
																					},
																					"nativeSrc": "538:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:7"
																			},
																			"nativeSrc": "529:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:7"
																		},
																		"nativeSrc": "526:50:7",
																		"nodeType": "YulIf",
																		"src": "526:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:7",
																			"nodeType": "YulBlock",
																			"src": "621:419:7",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:7",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:7"
																						},
																						"nativeSrc": "1010:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "606:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:7"
																			},
																			"nativeSrc": "592:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:7"
																		},
																		"nativeSrc": "589:451:7",
																		"nodeType": "YulIf",
																		"src": "589:451:7"
																	},
																	{
																		"nativeSrc": "1053:23:7",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:7"
																			},
																			"nativeSrc": "1061:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:7",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:7"
																			},
																			"nativeSrc": "1101:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:7",
																		"nodeType": "YulLiteral",
																		"src": "452:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:7"
																},
																"nativeSrc": "439:15:7",
																"nodeType": "YulFunctionCall",
																"src": "439:15:7"
															},
															"nativeSrc": "431:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:7",
																"nodeType": "YulBlock",
																"src": "455:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:7",
																"nodeType": "YulBlock",
																"src": "435:3:7",
																"statements": []
															},
															"src": "431:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:7",
														"nodeType": "YulTypedName",
														"src": "329:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:7",
														"nodeType": "YulTypedName",
														"src": "337:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:7",
														"nodeType": "YulTypedName",
														"src": "344:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:7",
														"nodeType": "YulTypedName",
														"src": "354:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:7",
														"nodeType": "YulTypedName",
														"src": "362:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:7",
														"nodeType": "YulTypedName",
														"src": "369:4:7",
														"type": ""
													}
												],
												"src": "301:848:7"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:7",
													"nodeType": "YulBlock",
													"src": "1215:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:7",
																"nodeType": "YulBlock",
																"src": "1410:20:7",
																"statements": [
																	{
																		"nativeSrc": "1412:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:7",
																		"nodeType": "YulLeave",
																		"src": "1423:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:7"
																},
																"nativeSrc": "1393:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:7"
															},
															"nativeSrc": "1390:40:7",
															"nodeType": "YulIf",
															"src": "1390:40:7"
														},
														{
															"body": {
																"nativeSrc": "1455:20:7",
																"nodeType": "YulBlock",
																"src": "1455:20:7",
																"statements": [
																	{
																		"nativeSrc": "1457:10:7",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:7",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:7",
																		"nodeType": "YulLeave",
																		"src": "1468:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:7"
																},
																"nativeSrc": "1442:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:7"
															},
															"nativeSrc": "1439:36:7",
															"nodeType": "YulIf",
															"src": "1439:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:7",
																		"nodeType": "YulBlock",
																		"src": "1585:20:7",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:7",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:7",
																				"nodeType": "YulLeave",
																				"src": "1598:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:7",
																	"nodeType": "YulCase",
																	"src": "1578:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:7",
																		"nodeType": "YulBlock",
																		"src": "1629:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:7",
																					"nodeType": "YulBlock",
																					"src": "1664:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:7"
																								},
																								"nativeSrc": "1666:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:7"
																							},
																							"nativeSrc": "1666:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:7"
																					},
																					"nativeSrc": "1646:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:7"
																				},
																				"nativeSrc": "1643:43:7",
																				"nodeType": "YulIf",
																				"src": "1643:43:7"
																			},
																			{
																				"nativeSrc": "1699:25:7",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:7"
																					},
																					"nativeSrc": "1708:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:7",
																					"nodeType": "YulBlock",
																					"src": "1755:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:7"
																								},
																								"nativeSrc": "1757:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:7"
																							},
																							"nativeSrc": "1757:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:7"
																					},
																					"nativeSrc": "1740:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:7"
																				},
																				"nativeSrc": "1737:40:7",
																				"nodeType": "YulIf",
																				"src": "1737:40:7"
																			},
																			{
																				"nativeSrc": "1790:5:7",
																				"nodeType": "YulLeave",
																				"src": "1790:5:7"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:7",
																	"nodeType": "YulCase",
																	"src": "1614:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:7",
																"nodeType": "YulIdentifier",
																"src": "1535:4:7"
															},
															"nativeSrc": "1528:277:7",
															"nodeType": "YulSwitch",
															"src": "1528:277:7"
														},
														{
															"body": {
																"nativeSrc": "1937:123:7",
																"nodeType": "YulBlock",
																"src": "1937:123:7",
																"statements": [
																	{
																		"nativeSrc": "1951:28:7",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:7"
																			},
																			"nativeSrc": "1960:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:7",
																			"nodeType": "YulBlock",
																			"src": "2010:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:7"
																						},
																						"nativeSrc": "2012:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:7"
																					},
																					"nativeSrc": "2012:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:7"
																			},
																			"nativeSrc": "1995:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:7"
																		},
																		"nativeSrc": "1992:40:7",
																		"nodeType": "YulIf",
																		"src": "1992:40:7"
																	},
																	{
																		"nativeSrc": "2045:5:7",
																		"nodeType": "YulLeave",
																		"src": "2045:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:7"
																				},
																				"nativeSrc": "1837:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:7"
																				},
																				"nativeSrc": "1851:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:7"
																		},
																		"nativeSrc": "1833:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:7",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:7"
																				},
																				"nativeSrc": "1886:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:7"
																				},
																				"nativeSrc": "1901:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:7"
																		},
																		"nativeSrc": "1882:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:7"
																},
																"nativeSrc": "1817:111:7",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:7"
															},
															"nativeSrc": "1814:246:7",
															"nodeType": "YulIf",
															"src": "1814:246:7"
														},
														{
															"nativeSrc": "2070:57:7",
															"nodeType": "YulAssignment",
															"src": "2070:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:7"
																},
																"nativeSrc": "2085:42:7",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:7",
																"nodeType": "YulBlock",
																"src": "2166:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:7"
																			},
																			"nativeSrc": "2168:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:7"
																		},
																		"nativeSrc": "2168:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:7"
																		},
																		"nativeSrc": "2150:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:7"
																},
																"nativeSrc": "2140:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:7"
															},
															"nativeSrc": "2137:51:7",
															"nodeType": "YulIf",
															"src": "2137:51:7"
														},
														{
															"nativeSrc": "2197:25:7",
															"nodeType": "YulAssignment",
															"src": "2197:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:7"
																},
																"nativeSrc": "2206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:7",
														"nodeType": "YulTypedName",
														"src": "1185:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:7",
														"nodeType": "YulTypedName",
														"src": "1191:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:7",
														"nodeType": "YulTypedName",
														"src": "1201:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:7",
														"nodeType": "YulTypedName",
														"src": "1209:5:7",
														"type": ""
													}
												],
												"src": "1155:1073:7"
											},
											{
												"body": {
													"nativeSrc": "2279:32:7",
													"nodeType": "YulBlock",
													"src": "2279:32:7",
													"statements": [
														{
															"nativeSrc": "2289:16:7",
															"nodeType": "YulAssignment",
															"src": "2289:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:7",
																"nodeType": "YulIdentifier",
																"src": "2300:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:7",
														"nodeType": "YulTypedName",
														"src": "2261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:7",
														"nodeType": "YulTypedName",
														"src": "2271:7:7",
														"type": ""
													}
												],
												"src": "2234:77:7"
											},
											{
												"body": {
													"nativeSrc": "2360:43:7",
													"nodeType": "YulBlock",
													"src": "2360:43:7",
													"statements": [
														{
															"nativeSrc": "2370:27:7",
															"nodeType": "YulAssignment",
															"src": "2370:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2381:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2381:3:7"
																},
																"nativeSrc": "2381:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2381:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2370:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2370:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2317:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:7",
														"nodeType": "YulTypedName",
														"src": "2342:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2352:7:7",
														"nodeType": "YulTypedName",
														"src": "2352:7:7",
														"type": ""
													}
												],
												"src": "2317:86:7"
											},
											{
												"body": {
													"nativeSrc": "2473:217:7",
													"nodeType": "YulBlock",
													"src": "2473:217:7",
													"statements": [
														{
															"nativeSrc": "2483:31:7",
															"nodeType": "YulAssignment",
															"src": "2483:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2491:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:17:7"
																},
																"nativeSrc": "2491:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2483:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:7"
																}
															]
														},
														{
															"nativeSrc": "2523:37:7",
															"nodeType": "YulAssignment",
															"src": "2523:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2551:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2551:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2535:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2535:15:7"
																},
																"nativeSrc": "2535:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2535:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2523:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2523:8:7"
																}
															]
														},
														{
															"nativeSrc": "2570:113:7",
															"nodeType": "YulAssignment",
															"src": "2570:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2600:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2606:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2606:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2616:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2579:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "2579:20:7"
																},
																"nativeSrc": "2579:104:7",
																"nodeType": "YulFunctionCall",
																"src": "2579:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2570:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2409:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2448:4:7",
														"nodeType": "YulTypedName",
														"src": "2448:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2454:8:7",
														"nodeType": "YulTypedName",
														"src": "2454:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2467:5:7",
														"nodeType": "YulTypedName",
														"src": "2467:5:7",
														"type": ""
													}
												],
												"src": "2409:281:7"
											},
											{
												"body": {
													"nativeSrc": "2744:362:7",
													"nodeType": "YulBlock",
													"src": "2744:362:7",
													"statements": [
														{
															"nativeSrc": "2754:25:7",
															"nodeType": "YulAssignment",
															"src": "2754:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2759:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:7"
																},
																"nativeSrc": "2759:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2759:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2754:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2754:1:7"
																}
															]
														},
														{
															"nativeSrc": "2788:25:7",
															"nodeType": "YulAssignment",
															"src": "2788:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2811:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2811:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2793:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2793:17:7"
																},
																"nativeSrc": "2793:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2793:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2788:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2788:1:7"
																}
															]
														},
														{
															"nativeSrc": "2822:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2841:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:7"
																},
																"nativeSrc": "2841:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2826:11:7",
																	"nodeType": "YulTypedName",
																	"src": "2826:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2859:41:7",
															"nodeType": "YulAssignment",
															"src": "2859:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2888:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "2888:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2870:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2870:17:7"
																},
																"nativeSrc": "2870:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2859:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2859:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3077:22:7",
																"nodeType": "YulBlock",
																"src": "3077:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3079:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:7"
																			},
																			"nativeSrc": "3079:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:7"
																		},
																		"nativeSrc": "3079:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3010:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3003:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3003:6:7"
																				},
																				"nativeSrc": "3003:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3033:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3033:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3040:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "3040:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3049:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "3049:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3036:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3036:3:7"
																						},
																						"nativeSrc": "3036:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3036:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3030:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3030:2:7"
																				},
																				"nativeSrc": "3030:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2983:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:7"
																		},
																		"nativeSrc": "2983:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:7"
																},
																"nativeSrc": "2963:113:7",
																"nodeType": "YulFunctionCall",
																"src": "2963:113:7"
															},
															"nativeSrc": "2960:139:7",
															"nodeType": "YulIf",
															"src": "2960:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2696:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2727:1:7",
														"nodeType": "YulTypedName",
														"src": "2727:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2730:1:7",
														"nodeType": "YulTypedName",
														"src": "2730:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2736:7:7",
														"nodeType": "YulTypedName",
														"src": "2736:7:7",
														"type": ""
													}
												],
												"src": "2696:410:7"
											},
											{
												"body": {
													"nativeSrc": "3152:35:7",
													"nodeType": "YulBlock",
													"src": "3152:35:7",
													"statements": [
														{
															"nativeSrc": "3162:19:7",
															"nodeType": "YulAssignment",
															"src": "3162:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3172:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3172:5:7"
																},
																"nativeSrc": "3172:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3172:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3112:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3145:6:7",
														"nodeType": "YulTypedName",
														"src": "3145:6:7",
														"type": ""
													}
												],
												"src": "3112:75:7"
											},
											{
												"body": {
													"nativeSrc": "3282:28:7",
													"nodeType": "YulBlock",
													"src": "3282:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3299:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3299:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3302:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nativeSrc": "3292:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3292:12:7"
															},
															"nativeSrc": "3292:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3292:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3193:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3193:117:7"
											},
											{
												"body": {
													"nativeSrc": "3405:28:7",
													"nodeType": "YulBlock",
													"src": "3405:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3425:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3425:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:7"
																},
																"nativeSrc": "3415:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:7"
															},
															"nativeSrc": "3415:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3415:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3316:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3316:117:7"
											},
											{
												"body": {
													"nativeSrc": "3484:81:7",
													"nodeType": "YulBlock",
													"src": "3484:81:7",
													"statements": [
														{
															"nativeSrc": "3494:65:7",
															"nodeType": "YulAssignment",
															"src": "3494:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3509:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3509:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3516:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3516:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:7"
																},
																"nativeSrc": "3505:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3505:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3494:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3494:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3439:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3466:5:7",
														"nodeType": "YulTypedName",
														"src": "3466:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3476:7:7",
														"nodeType": "YulTypedName",
														"src": "3476:7:7",
														"type": ""
													}
												],
												"src": "3439:126:7"
											},
											{
												"body": {
													"nativeSrc": "3616:51:7",
													"nodeType": "YulBlock",
													"src": "3616:51:7",
													"statements": [
														{
															"nativeSrc": "3626:35:7",
															"nodeType": "YulAssignment",
															"src": "3626:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3655:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3655:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3637:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3637:17:7"
																},
																"nativeSrc": "3637:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3637:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3626:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3626:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3571:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3598:5:7",
														"nodeType": "YulTypedName",
														"src": "3598:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3608:7:7",
														"nodeType": "YulTypedName",
														"src": "3608:7:7",
														"type": ""
													}
												],
												"src": "3571:96:7"
											},
											{
												"body": {
													"nativeSrc": "3716:79:7",
													"nodeType": "YulBlock",
													"src": "3716:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3773:16:7",
																"nodeType": "YulBlock",
																"src": "3773:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3785:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3775:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3775:6:7"
																			},
																			"nativeSrc": "3775:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3775:12:7"
																		},
																		"nativeSrc": "3775:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3775:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3739:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3739:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3764:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3764:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3746:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3746:17:7"
																				},
																				"nativeSrc": "3746:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3746:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3736:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3736:2:7"
																		},
																		"nativeSrc": "3736:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:7"
																},
																"nativeSrc": "3729:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3729:43:7"
															},
															"nativeSrc": "3726:63:7",
															"nodeType": "YulIf",
															"src": "3726:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3673:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3709:5:7",
														"nodeType": "YulTypedName",
														"src": "3709:5:7",
														"type": ""
													}
												],
												"src": "3673:122:7"
											},
											{
												"body": {
													"nativeSrc": "3864:80:7",
													"nodeType": "YulBlock",
													"src": "3864:80:7",
													"statements": [
														{
															"nativeSrc": "3874:22:7",
															"nodeType": "YulAssignment",
															"src": "3874:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3889:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3883:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3883:5:7"
																},
																"nativeSrc": "3883:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3883:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3874:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3874:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3932:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3932:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3905:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3905:26:7"
																},
																"nativeSrc": "3905:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3905:33:7"
															},
															"nativeSrc": "3905:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3905:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3801:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3842:6:7",
														"nodeType": "YulTypedName",
														"src": "3842:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3850:3:7",
														"nodeType": "YulTypedName",
														"src": "3850:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3858:5:7",
														"nodeType": "YulTypedName",
														"src": "3858:5:7",
														"type": ""
													}
												],
												"src": "3801:143:7"
											},
											{
												"body": {
													"nativeSrc": "4044:413:7",
													"nodeType": "YulBlock",
													"src": "4044:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4090:83:7",
																"nodeType": "YulBlock",
																"src": "4090:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4092:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4092:77:7"
																			},
																			"nativeSrc": "4092:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4092:79:7"
																		},
																		"nativeSrc": "4092:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4092:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4074:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4061:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4061:3:7"
																		},
																		"nativeSrc": "4061:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4057:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4057:3:7"
																},
																"nativeSrc": "4057:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4057:32:7"
															},
															"nativeSrc": "4054:119:7",
															"nodeType": "YulIf",
															"src": "4054:119:7"
														},
														{
															"nativeSrc": "4183:128:7",
															"nodeType": "YulBlock",
															"src": "4183:128:7",
															"statements": [
																{
																	"nativeSrc": "4198:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4198:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4212:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4212:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4202:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4202:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4227:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4227:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4273:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4273:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4284:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4284:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4269:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4269:3:7"
																				},
																				"nativeSrc": "4269:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4269:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4293:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4293:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4237:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4237:31:7"
																		},
																		"nativeSrc": "4237:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4237:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4227:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4227:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4321:129:7",
															"nodeType": "YulBlock",
															"src": "4321:129:7",
															"statements": [
																{
																	"nativeSrc": "4336:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4336:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4350:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4350:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4340:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4340:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4366:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4366:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4412:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4412:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4423:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4423:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4408:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4408:3:7"
																				},
																				"nativeSrc": "4408:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4408:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4432:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4432:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4376:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4376:31:7"
																		},
																		"nativeSrc": "4376:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4366:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4366:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "3950:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4006:9:7",
														"nodeType": "YulTypedName",
														"src": "4006:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4017:7:7",
														"nodeType": "YulTypedName",
														"src": "4017:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4029:6:7",
														"nodeType": "YulTypedName",
														"src": "4029:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4037:6:7",
														"nodeType": "YulTypedName",
														"src": "4037:6:7",
														"type": ""
													}
												],
												"src": "3950:507:7"
											},
											{
												"body": {
													"nativeSrc": "4522:40:7",
													"nodeType": "YulBlock",
													"src": "4522:40:7",
													"statements": [
														{
															"nativeSrc": "4533:22:7",
															"nodeType": "YulAssignment",
															"src": "4533:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4549:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4549:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4543:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4543:5:7"
																},
																"nativeSrc": "4543:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4543:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4533:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4463:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4505:5:7",
														"nodeType": "YulTypedName",
														"src": "4505:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4515:6:7",
														"nodeType": "YulTypedName",
														"src": "4515:6:7",
														"type": ""
													}
												],
												"src": "4463:99:7"
											},
											{
												"body": {
													"nativeSrc": "4596:152:7",
													"nodeType": "YulBlock",
													"src": "4596:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4616:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4606:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4606:6:7"
																},
																"nativeSrc": "4606:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4606:88:7"
															},
															"nativeSrc": "4606:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4606:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4710:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4710:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4713:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4713:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4703:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:7"
																},
																"nativeSrc": "4703:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4703:15:7"
															},
															"nativeSrc": "4703:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4703:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4734:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4734:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4737:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4737:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4727:6:7"
																},
																"nativeSrc": "4727:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4727:15:7"
															},
															"nativeSrc": "4727:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4727:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4568:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4568:180:7"
											},
											{
												"body": {
													"nativeSrc": "4782:152:7",
													"nodeType": "YulBlock",
													"src": "4782:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4799:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4799:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4802:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4802:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:7"
																},
																"nativeSrc": "4792:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4792:88:7"
															},
															"nativeSrc": "4792:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4792:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4896:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4899:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4899:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:7"
																},
																"nativeSrc": "4889:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4889:15:7"
															},
															"nativeSrc": "4889:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4889:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4920:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4920:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4923:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4923:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4913:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4913:6:7"
																},
																"nativeSrc": "4913:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4913:15:7"
															},
															"nativeSrc": "4913:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4913:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4754:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4754:180:7"
											},
											{
												"body": {
													"nativeSrc": "4991:269:7",
													"nodeType": "YulBlock",
													"src": "4991:269:7",
													"statements": [
														{
															"nativeSrc": "5001:22:7",
															"nodeType": "YulAssignment",
															"src": "5001:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5015:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5015:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5021:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5011:3:7"
																},
																"nativeSrc": "5011:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5011:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5001:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:7"
																}
															]
														},
														{
															"nativeSrc": "5032:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5032:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5062:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5062:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5068:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5058:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5058:3:7"
																},
																"nativeSrc": "5058:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5058:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5036:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5036:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5109:51:7",
																"nodeType": "YulBlock",
																"src": "5109:51:7",
																"statements": [
																	{
																		"nativeSrc": "5123:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5123:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5137:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5137:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5145:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5145:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5133:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5133:3:7"
																			},
																			"nativeSrc": "5133:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5133:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5123:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5123:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5089:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5089:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:7"
																},
																"nativeSrc": "5082:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5082:26:7"
															},
															"nativeSrc": "5079:81:7",
															"nodeType": "YulIf",
															"src": "5079:81:7"
														},
														{
															"body": {
																"nativeSrc": "5212:42:7",
																"nodeType": "YulBlock",
																"src": "5212:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5226:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5226:16:7"
																			},
																			"nativeSrc": "5226:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5226:18:7"
																		},
																		"nativeSrc": "5226:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5226:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5176:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5176:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5199:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5199:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5207:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5207:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5196:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5196:2:7"
																		},
																		"nativeSrc": "5196:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5196:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5173:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5173:2:7"
																},
																"nativeSrc": "5173:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5173:38:7"
															},
															"nativeSrc": "5170:84:7",
															"nodeType": "YulIf",
															"src": "5170:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4940:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4975:4:7",
														"nodeType": "YulTypedName",
														"src": "4975:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4984:6:7",
														"nodeType": "YulTypedName",
														"src": "4984:6:7",
														"type": ""
													}
												],
												"src": "4940:320:7"
											},
											{
												"body": {
													"nativeSrc": "5320:87:7",
													"nodeType": "YulBlock",
													"src": "5320:87:7",
													"statements": [
														{
															"nativeSrc": "5330:11:7",
															"nodeType": "YulAssignment",
															"src": "5330:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5338:3:7",
																"nodeType": "YulIdentifier",
																"src": "5338:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5330:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5330:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5358:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5358:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5361:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5361:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5351:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:7"
																},
																"nativeSrc": "5351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5351:14:7"
															},
															"nativeSrc": "5351:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5351:14:7"
														},
														{
															"nativeSrc": "5374:26:7",
															"nodeType": "YulAssignment",
															"src": "5374:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5392:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5392:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5395:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5395:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5382:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5382:9:7"
																},
																"nativeSrc": "5382:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5382:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5374:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5374:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5266:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5307:3:7",
														"nodeType": "YulTypedName",
														"src": "5307:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5315:4:7",
														"nodeType": "YulTypedName",
														"src": "5315:4:7",
														"type": ""
													}
												],
												"src": "5266:141:7"
											},
											{
												"body": {
													"nativeSrc": "5457:49:7",
													"nodeType": "YulBlock",
													"src": "5457:49:7",
													"statements": [
														{
															"nativeSrc": "5467:33:7",
															"nodeType": "YulAssignment",
															"src": "5467:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5485:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5485:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5492:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5492:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:7"
																		},
																		"nativeSrc": "5481:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5481:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5497:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5477:3:7"
																},
																"nativeSrc": "5477:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5477:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5467:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5467:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5413:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5440:5:7",
														"nodeType": "YulTypedName",
														"src": "5440:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5450:6:7",
														"nodeType": "YulTypedName",
														"src": "5450:6:7",
														"type": ""
													}
												],
												"src": "5413:93:7"
											},
											{
												"body": {
													"nativeSrc": "5565:54:7",
													"nodeType": "YulBlock",
													"src": "5565:54:7",
													"statements": [
														{
															"nativeSrc": "5575:37:7",
															"nodeType": "YulAssignment",
															"src": "5575:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5606:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5606:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:7"
																},
																"nativeSrc": "5596:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5596:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5575:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5575:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5512:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5540:4:7",
														"nodeType": "YulTypedName",
														"src": "5540:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5546:5:7",
														"nodeType": "YulTypedName",
														"src": "5546:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5556:8:7",
														"nodeType": "YulTypedName",
														"src": "5556:8:7",
														"type": ""
													}
												],
												"src": "5512:107:7"
											},
											{
												"body": {
													"nativeSrc": "5701:317:7",
													"nodeType": "YulBlock",
													"src": "5701:317:7",
													"statements": [
														{
															"nativeSrc": "5711:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5711:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5732:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5732:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5744:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5744:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5728:3:7"
																},
																"nativeSrc": "5728:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5728:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5715:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5715:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5755:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5755:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5797:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5797:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5767:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5767:18:7"
																},
																"nativeSrc": "5767:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5767:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5759:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5759:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5873:51:7",
															"nodeType": "YulAssignment",
															"src": "5873:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5904:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5915:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5915:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5885:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5885:18:7"
																},
																"nativeSrc": "5885:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5885:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5873:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5873:8:7"
																}
															]
														},
														{
															"nativeSrc": "5933:30:7",
															"nodeType": "YulAssignment",
															"src": "5933:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5946:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5946:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5957:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5957:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:7"
																		},
																		"nativeSrc": "5953:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5953:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5942:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5942:3:7"
																},
																"nativeSrc": "5942:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5942:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5933:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5933:5:7"
																}
															]
														},
														{
															"nativeSrc": "5972:40:7",
															"nodeType": "YulAssignment",
															"src": "5972:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5985:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5996:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5996:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6006:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6006:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:7"
																		},
																		"nativeSrc": "5992:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5992:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5982:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5982:2:7"
																},
																"nativeSrc": "5982:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5982:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5625:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5662:5:7",
														"nodeType": "YulTypedName",
														"src": "5662:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5669:10:7",
														"nodeType": "YulTypedName",
														"src": "5669:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5681:8:7",
														"nodeType": "YulTypedName",
														"src": "5681:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5694:6:7",
														"nodeType": "YulTypedName",
														"src": "5694:6:7",
														"type": ""
													}
												],
												"src": "5625:393:7"
											},
											{
												"body": {
													"nativeSrc": "6056:28:7",
													"nodeType": "YulBlock",
													"src": "6056:28:7",
													"statements": [
														{
															"nativeSrc": "6066:12:7",
															"nodeType": "YulAssignment",
															"src": "6066:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6073:5:7",
																"nodeType": "YulIdentifier",
																"src": "6073:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6066:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6066:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6024:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6042:5:7",
														"nodeType": "YulTypedName",
														"src": "6042:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6052:3:7",
														"nodeType": "YulTypedName",
														"src": "6052:3:7",
														"type": ""
													}
												],
												"src": "6024:60:7"
											},
											{
												"body": {
													"nativeSrc": "6150:82:7",
													"nodeType": "YulBlock",
													"src": "6150:82:7",
													"statements": [
														{
															"nativeSrc": "6160:66:7",
															"nodeType": "YulAssignment",
															"src": "6160:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6218:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6218:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6200:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6200:17:7"
																				},
																				"nativeSrc": "6200:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6200:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6191:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6191:8:7"
																		},
																		"nativeSrc": "6191:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6191:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6173:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6173:17:7"
																},
																"nativeSrc": "6173:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6173:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6160:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6090:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6130:5:7",
														"nodeType": "YulTypedName",
														"src": "6130:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6140:9:7",
														"nodeType": "YulTypedName",
														"src": "6140:9:7",
														"type": ""
													}
												],
												"src": "6090:142:7"
											},
											{
												"body": {
													"nativeSrc": "6285:28:7",
													"nodeType": "YulBlock",
													"src": "6285:28:7",
													"statements": [
														{
															"nativeSrc": "6295:12:7",
															"nodeType": "YulAssignment",
															"src": "6295:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6302:5:7",
																"nodeType": "YulIdentifier",
																"src": "6302:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6295:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6295:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6238:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6271:5:7",
														"nodeType": "YulTypedName",
														"src": "6271:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6281:3:7",
														"nodeType": "YulTypedName",
														"src": "6281:3:7",
														"type": ""
													}
												],
												"src": "6238:75:7"
											},
											{
												"body": {
													"nativeSrc": "6395:193:7",
													"nodeType": "YulBlock",
													"src": "6395:193:7",
													"statements": [
														{
															"nativeSrc": "6405:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6405:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6460:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6460:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6429:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6429:30:7"
																},
																"nativeSrc": "6429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6429:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6409:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6409:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6484:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6484:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6524:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6518:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6518:5:7"
																				},
																				"nativeSrc": "6518:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6518:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6531:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6563:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6563:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6539:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6539:23:7"
																				},
																				"nativeSrc": "6539:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6539:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6490:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6490:27:7"
																		},
																		"nativeSrc": "6490:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6490:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6477:6:7"
																},
																"nativeSrc": "6477:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6477:105:7"
															},
															"nativeSrc": "6477:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6477:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6319:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6372:4:7",
														"nodeType": "YulTypedName",
														"src": "6372:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6378:6:7",
														"nodeType": "YulTypedName",
														"src": "6378:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6386:7:7",
														"nodeType": "YulTypedName",
														"src": "6386:7:7",
														"type": ""
													}
												],
												"src": "6319:269:7"
											},
											{
												"body": {
													"nativeSrc": "6643:24:7",
													"nodeType": "YulBlock",
													"src": "6643:24:7",
													"statements": [
														{
															"nativeSrc": "6653:8:7",
															"nodeType": "YulAssignment",
															"src": "6653:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6660:1:7",
																"nodeType": "YulLiteral",
																"src": "6660:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6653:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6594:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6639:3:7",
														"nodeType": "YulTypedName",
														"src": "6639:3:7",
														"type": ""
													}
												],
												"src": "6594:73:7"
											},
											{
												"body": {
													"nativeSrc": "6726:136:7",
													"nodeType": "YulBlock",
													"src": "6726:136:7",
													"statements": [
														{
															"nativeSrc": "6736:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6736:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6750:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6750:30:7"
																},
																"nativeSrc": "6750:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6750:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6740:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6740:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6835:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6835:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6841:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6841:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6849:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6791:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6791:43:7"
																},
																"nativeSrc": "6791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6791:65:7"
															},
															"nativeSrc": "6791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6791:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6673:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6712:4:7",
														"nodeType": "YulTypedName",
														"src": "6712:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6718:6:7",
														"nodeType": "YulTypedName",
														"src": "6718:6:7",
														"type": ""
													}
												],
												"src": "6673:189:7"
											},
											{
												"body": {
													"nativeSrc": "6918:136:7",
													"nodeType": "YulBlock",
													"src": "6918:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6985:63:7",
																"nodeType": "YulBlock",
																"src": "6985:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7029:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7029:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7036:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6999:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6999:29:7"
																			},
																			"nativeSrc": "6999:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6999:39:7"
																		},
																		"nativeSrc": "6999:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6999:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6938:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6938:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6945:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6945:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6935:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6935:2:7"
																},
																"nativeSrc": "6935:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6935:14:7"
															},
															"nativeSrc": "6928:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6950:26:7",
																"nodeType": "YulBlock",
																"src": "6950:26:7",
																"statements": [
																	{
																		"nativeSrc": "6952:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6952:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6965:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6965:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6972:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6972:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6961:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6961:3:7"
																			},
																			"nativeSrc": "6961:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6961:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6952:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6952:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6932:2:7",
																"nodeType": "YulBlock",
																"src": "6932:2:7",
																"statements": []
															},
															"src": "6928:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6868:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6906:5:7",
														"nodeType": "YulTypedName",
														"src": "6906:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6913:3:7",
														"nodeType": "YulTypedName",
														"src": "6913:3:7",
														"type": ""
													}
												],
												"src": "6868:186:7"
											},
											{
												"body": {
													"nativeSrc": "7139:464:7",
													"nodeType": "YulBlock",
													"src": "7139:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7165:431:7",
																"nodeType": "YulBlock",
																"src": "7165:431:7",
																"statements": [
																	{
																		"nativeSrc": "7179:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7179:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7227:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7227:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7195:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7195:31:7"
																			},
																			"nativeSrc": "7195:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7195:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7183:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7183:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7246:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7246:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7269:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7269:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7297:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7297:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7279:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7279:17:7"
																					},
																					"nativeSrc": "7279:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7279:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7265:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7265:3:7"
																			},
																			"nativeSrc": "7265:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7265:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7250:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7250:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7466:27:7",
																			"nodeType": "YulBlock",
																			"src": "7466:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7468:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7468:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7483:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7483:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7468:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7468:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7450:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7450:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7462:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7462:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7447:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7447:2:7"
																			},
																			"nativeSrc": "7447:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7447:18:7"
																		},
																		"nativeSrc": "7444:49:7",
																		"nodeType": "YulIf",
																		"src": "7444:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7535:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7535:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7552:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7552:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7580:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7580:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7562:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7562:17:7"
																							},
																							"nativeSrc": "7562:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7562:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7548:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7548:3:7"
																					},
																					"nativeSrc": "7548:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7548:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7506:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7506:28:7"
																			},
																			"nativeSrc": "7506:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7506:80:7"
																		},
																		"nativeSrc": "7506:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7506:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7161:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7153:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7153:2:7"
																},
																"nativeSrc": "7153:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7153:11:7"
															},
															"nativeSrc": "7150:446:7",
															"nodeType": "YulIf",
															"src": "7150:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7060:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7115:5:7",
														"nodeType": "YulTypedName",
														"src": "7115:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7122:3:7",
														"nodeType": "YulTypedName",
														"src": "7122:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7127:10:7",
														"nodeType": "YulTypedName",
														"src": "7127:10:7",
														"type": ""
													}
												],
												"src": "7060:543:7"
											},
											{
												"body": {
													"nativeSrc": "7672:54:7",
													"nodeType": "YulBlock",
													"src": "7672:54:7",
													"statements": [
														{
															"nativeSrc": "7682:37:7",
															"nodeType": "YulAssignment",
															"src": "7682:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7707:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7713:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7713:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7703:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7703:3:7"
																},
																"nativeSrc": "7703:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7703:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7682:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7682:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7609:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7647:4:7",
														"nodeType": "YulTypedName",
														"src": "7647:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7653:5:7",
														"nodeType": "YulTypedName",
														"src": "7653:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7663:8:7",
														"nodeType": "YulTypedName",
														"src": "7663:8:7",
														"type": ""
													}
												],
												"src": "7609:117:7"
											},
											{
												"body": {
													"nativeSrc": "7783:118:7",
													"nodeType": "YulBlock",
													"src": "7783:118:7",
													"statements": [
														{
															"nativeSrc": "7793:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7793:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7842:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7842:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7838:3:7"
																				},
																				"nativeSrc": "7838:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7838:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7857:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7857:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7853:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7853:3:7"
																				},
																				"nativeSrc": "7853:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7853:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7809:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7809:28:7"
																		},
																		"nativeSrc": "7809:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7809:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7805:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7805:3:7"
																},
																"nativeSrc": "7805:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7805:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7797:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7797:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7870:25:7",
															"nodeType": "YulAssignment",
															"src": "7870:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7884:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7884:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7890:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7890:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:7"
																},
																"nativeSrc": "7880:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7880:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7870:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7870:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7732:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7760:4:7",
														"nodeType": "YulTypedName",
														"src": "7760:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7766:5:7",
														"nodeType": "YulTypedName",
														"src": "7766:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7776:6:7",
														"nodeType": "YulTypedName",
														"src": "7776:6:7",
														"type": ""
													}
												],
												"src": "7732:169:7"
											},
											{
												"body": {
													"nativeSrc": "7987:214:7",
													"nodeType": "YulBlock",
													"src": "7987:214:7",
													"statements": [
														{
															"nativeSrc": "8120:37:7",
															"nodeType": "YulAssignment",
															"src": "8120:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8147:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8147:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8153:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8153:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8128:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8128:18:7"
																},
																"nativeSrc": "8128:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8128:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8120:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8120:4:7"
																}
															]
														},
														{
															"nativeSrc": "8166:29:7",
															"nodeType": "YulAssignment",
															"src": "8166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8177:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8177:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8187:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8187:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8190:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8190:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:7"
																		},
																		"nativeSrc": "8183:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8183:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8174:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8174:2:7"
																},
																"nativeSrc": "8174:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8174:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8166:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7906:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7968:4:7",
														"nodeType": "YulTypedName",
														"src": "7968:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7974:3:7",
														"nodeType": "YulTypedName",
														"src": "7974:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7982:4:7",
														"nodeType": "YulTypedName",
														"src": "7982:4:7",
														"type": ""
													}
												],
												"src": "7906:295:7"
											},
											{
												"body": {
													"nativeSrc": "8298:1303:7",
													"nodeType": "YulBlock",
													"src": "8298:1303:7",
													"statements": [
														{
															"nativeSrc": "8309:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8309:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8356:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8356:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8323:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8323:32:7"
																},
																"nativeSrc": "8323:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8323:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8313:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8313:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8445:22:7",
																"nodeType": "YulBlock",
																"src": "8445:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8447:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8447:16:7"
																			},
																			"nativeSrc": "8447:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8447:18:7"
																		},
																		"nativeSrc": "8447:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8447:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8417:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8425:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8425:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8414:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8414:2:7"
																},
																"nativeSrc": "8414:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8414:30:7"
															},
															"nativeSrc": "8411:56:7",
															"nodeType": "YulIf",
															"src": "8411:56:7"
														},
														{
															"nativeSrc": "8477:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8477:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8523:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8523:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8517:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8517:5:7"
																		},
																		"nativeSrc": "8517:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8517:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8491:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8491:25:7"
																},
																"nativeSrc": "8491:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8491:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8481:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8481:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8622:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8622:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8628:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8628:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8636:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8576:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8576:45:7"
																},
																"nativeSrc": "8576:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8576:67:7"
															},
															"nativeSrc": "8576:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8576:67:7"
														},
														{
															"nativeSrc": "8653:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8653:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8670:1:7",
																"nodeType": "YulLiteral",
																"src": "8670:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8657:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8657:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8681:17:7",
															"nodeType": "YulAssignment",
															"src": "8681:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8694:4:7",
																"nodeType": "YulLiteral",
																"src": "8694:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8681:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8681:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8745:611:7",
																		"nodeType": "YulBlock",
																		"src": "8745:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8759:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8759:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8778:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8778:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8790:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8790:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8786:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8786:3:7"
																							},
																							"nativeSrc": "8786:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8786:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8774:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8774:3:7"
																					},
																					"nativeSrc": "8774:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8774:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8763:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8763:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8810:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8810:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8856:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8856:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8824:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8824:31:7"
																					},
																					"nativeSrc": "8824:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8824:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8814:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8814:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8874:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8874:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8883:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8883:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8878:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8878:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8942:163:7",
																					"nodeType": "YulBlock",
																					"src": "8942:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8967:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8967:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8985:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8985:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8990:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8990:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8981:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8981:3:7"
																												},
																												"nativeSrc": "8981:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8981:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8975:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8975:5:7"
																										},
																										"nativeSrc": "8975:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8975:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8960:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8960:6:7"
																								},
																								"nativeSrc": "8960:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8960:42:7"
																							},
																							"nativeSrc": "8960:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8960:42:7"
																						},
																						{
																							"nativeSrc": "9019:24:7",
																							"nodeType": "YulAssignment",
																							"src": "9019:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9033:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9033:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9041:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9041:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9029:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9029:3:7"
																								},
																								"nativeSrc": "9029:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9029:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9019:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9019:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9060:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9060:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9077:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9077:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9088:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9088:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9073:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9073:3:7"
																								},
																								"nativeSrc": "9073:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9073:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9060:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9060:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8908:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8908:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8911:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8911:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8905:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8905:2:7"
																					},
																					"nativeSrc": "8905:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8905:14:7"
																				},
																				"nativeSrc": "8897:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8920:21:7",
																					"nodeType": "YulBlock",
																					"src": "8920:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8922:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8922:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8931:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8931:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8934:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8934:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8927:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8927:3:7"
																								},
																								"nativeSrc": "8927:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8927:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8922:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8922:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8901:3:7",
																					"nodeType": "YulBlock",
																					"src": "8901:3:7",
																					"statements": []
																				},
																				"src": "8897:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9141:156:7",
																					"nodeType": "YulBlock",
																					"src": "9141:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9159:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9159:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9186:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9186:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9191:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9191:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9182:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9182:3:7"
																										},
																										"nativeSrc": "9182:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9182:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9176:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9176:5:7"
																								},
																								"nativeSrc": "9176:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9176:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9163:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9163:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9226:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9226:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9253:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9253:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9268:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9268:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9276:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9276:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9264:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9264:3:7"
																												},
																												"nativeSrc": "9264:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9264:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9234:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9234:18:7"
																										},
																										"nativeSrc": "9234:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9234:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9219:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9219:6:7"
																								},
																								"nativeSrc": "9219:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9219:64:7"
																							},
																							"nativeSrc": "9219:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9219:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9124:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9124:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9133:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9133:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9121:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9121:2:7"
																					},
																					"nativeSrc": "9121:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9121:19:7"
																				},
																				"nativeSrc": "9118:179:7",
																				"nodeType": "YulIf",
																				"src": "9118:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9317:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9317:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9331:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9331:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9339:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9339:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9327:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9327:3:7"
																									},
																									"nativeSrc": "9327:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9327:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9343:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9343:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9323:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9323:3:7"
																							},
																							"nativeSrc": "9323:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9323:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9310:6:7"
																					},
																					"nativeSrc": "9310:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9310:36:7"
																				},
																				"nativeSrc": "9310:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9310:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8738:618:7",
																	"nodeType": "YulCase",
																	"src": "8738:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8743:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8743:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9373:222:7",
																		"nodeType": "YulBlock",
																		"src": "9373:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9387:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9387:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9400:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9400:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9391:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9391:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9424:67:7",
																					"nodeType": "YulBlock",
																					"src": "9424:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9442:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9442:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9461:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9461:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9466:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9466:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9457:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9457:3:7"
																										},
																										"nativeSrc": "9457:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9457:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9451:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9451:5:7"
																								},
																								"nativeSrc": "9451:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9451:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9442:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9442:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9417:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9417:6:7"
																				},
																				"nativeSrc": "9414:77:7",
																				"nodeType": "YulIf",
																				"src": "9414:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9511:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9511:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9570:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9570:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9577:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9577:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9517:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9517:52:7"
																							},
																							"nativeSrc": "9517:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9517:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9504:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9504:6:7"
																					},
																					"nativeSrc": "9504:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9504:81:7"
																				},
																				"nativeSrc": "9504:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9504:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9365:230:7",
																	"nodeType": "YulCase",
																	"src": "9365:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8718:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8718:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8715:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:2:7"
																},
																"nativeSrc": "8715:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8715:14:7"
															},
															"nativeSrc": "8708:887:7",
															"nodeType": "YulSwitch",
															"src": "8708:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8206:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8287:4:7",
														"nodeType": "YulTypedName",
														"src": "8287:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8293:3:7",
														"nodeType": "YulTypedName",
														"src": "8293:3:7",
														"type": ""
													}
												],
												"src": "8206:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9672:53:7",
													"nodeType": "YulBlock",
													"src": "9672:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9689:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9712:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9712:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9694:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9694:17:7"
																		},
																		"nativeSrc": "9694:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9694:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9682:6:7"
																},
																"nativeSrc": "9682:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9682:37:7"
															},
															"nativeSrc": "9682:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9682:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9607:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9660:5:7",
														"nodeType": "YulTypedName",
														"src": "9660:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9667:3:7",
														"nodeType": "YulTypedName",
														"src": "9667:3:7",
														"type": ""
													}
												],
												"src": "9607:118:7"
											},
											{
												"body": {
													"nativeSrc": "9829:124:7",
													"nodeType": "YulBlock",
													"src": "9829:124:7",
													"statements": [
														{
															"nativeSrc": "9839:26:7",
															"nodeType": "YulAssignment",
															"src": "9839:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9851:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9851:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9862:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9862:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9847:3:7"
																},
																"nativeSrc": "9847:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9847:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9839:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9839:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9919:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9919:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9932:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9932:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9943:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9943:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9928:3:7"
																		},
																		"nativeSrc": "9928:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9928:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9875:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9875:43:7"
																},
																"nativeSrc": "9875:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9875:71:7"
															},
															"nativeSrc": "9875:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9875:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9731:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9801:9:7",
														"nodeType": "YulTypedName",
														"src": "9801:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9813:6:7",
														"nodeType": "YulTypedName",
														"src": "9813:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9824:4:7",
														"nodeType": "YulTypedName",
														"src": "9824:4:7",
														"type": ""
													}
												],
												"src": "9731:222:7"
											},
											{
												"body": {
													"nativeSrc": "10055:73:7",
													"nodeType": "YulBlock",
													"src": "10055:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10072:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10077:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:7"
																},
																"nativeSrc": "10065:19:7",
																"nodeType": "YulFunctionCall",
																"src": "10065:19:7"
															},
															"nativeSrc": "10065:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "10065:19:7"
														},
														{
															"nativeSrc": "10093:29:7",
															"nodeType": "YulAssignment",
															"src": "10093:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10112:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10112:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10117:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10117:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10108:3:7"
																},
																"nativeSrc": "10108:14:7",
																"nodeType": "YulFunctionCall",
																"src": "10108:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10093:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "10093:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9959:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10027:3:7",
														"nodeType": "YulTypedName",
														"src": "10027:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10032:6:7",
														"nodeType": "YulTypedName",
														"src": "10032:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10043:11:7",
														"nodeType": "YulTypedName",
														"src": "10043:11:7",
														"type": ""
													}
												],
												"src": "9959:169:7"
											},
											{
												"body": {
													"nativeSrc": "10240:63:7",
													"nodeType": "YulBlock",
													"src": "10240:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10262:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10262:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10270:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10270:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10258:3:7"
																		},
																		"nativeSrc": "10258:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10258:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "10274:21:7",
																		"nodeType": "YulLiteral",
																		"src": "10274:21:7",
																		"type": "",
																		"value": "Blacklisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:7"
																},
																"nativeSrc": "10251:45:7",
																"nodeType": "YulFunctionCall",
																"src": "10251:45:7"
															},
															"nativeSrc": "10251:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "10251:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
												"nativeSrc": "10134:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10232:6:7",
														"nodeType": "YulTypedName",
														"src": "10232:6:7",
														"type": ""
													}
												],
												"src": "10134:169:7"
											},
											{
												"body": {
													"nativeSrc": "10455:220:7",
													"nodeType": "YulBlock",
													"src": "10455:220:7",
													"statements": [
														{
															"nativeSrc": "10465:74:7",
															"nodeType": "YulAssignment",
															"src": "10465:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10531:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10531:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10536:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10472:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10472:58:7"
																},
																"nativeSrc": "10472:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10472:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10465:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10637:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10637:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
																	"nativeSrc": "10548:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10548:88:7"
																},
																"nativeSrc": "10548:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10548:93:7"
															},
															"nativeSrc": "10548:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10548:93:7"
														},
														{
															"nativeSrc": "10650:19:7",
															"nodeType": "YulAssignment",
															"src": "10650:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10661:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10661:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10666:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10666:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10657:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10657:3:7"
																},
																"nativeSrc": "10657:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10657:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10650:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10650:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10309:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10443:3:7",
														"nodeType": "YulTypedName",
														"src": "10443:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10451:3:7",
														"nodeType": "YulTypedName",
														"src": "10451:3:7",
														"type": ""
													}
												],
												"src": "10309:366:7"
											},
											{
												"body": {
													"nativeSrc": "10852:248:7",
													"nodeType": "YulBlock",
													"src": "10852:248:7",
													"statements": [
														{
															"nativeSrc": "10862:26:7",
															"nodeType": "YulAssignment",
															"src": "10862:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10874:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10874:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10885:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10885:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10870:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10870:3:7"
																},
																"nativeSrc": "10870:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10870:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10862:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10862:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10909:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10909:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10920:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10920:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10905:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10905:3:7"
																		},
																		"nativeSrc": "10905:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10905:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10928:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10928:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10934:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10934:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10924:3:7"
																		},
																		"nativeSrc": "10924:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10924:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10898:6:7"
																},
																"nativeSrc": "10898:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10898:47:7"
															},
															"nativeSrc": "10898:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10898:47:7"
														},
														{
															"nativeSrc": "10954:139:7",
															"nodeType": "YulAssignment",
															"src": "10954:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11088:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11088:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10962:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10962:124:7"
																},
																"nativeSrc": "10962:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10962:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10954:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10954:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10681:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10832:9:7",
														"nodeType": "YulTypedName",
														"src": "10832:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10847:4:7",
														"nodeType": "YulTypedName",
														"src": "10847:4:7",
														"type": ""
													}
												],
												"src": "10681:419:7"
											},
											{
												"body": {
													"nativeSrc": "11212:115:7",
													"nodeType": "YulBlock",
													"src": "11212:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11234:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11234:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11242:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11242:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11230:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11230:3:7"
																		},
																		"nativeSrc": "11230:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11230:14:7"
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "11246:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11246:34:7",
																		"type": "",
																		"value": "Both addresses must be whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11223:6:7"
																},
																"nativeSrc": "11223:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11223:58:7"
															},
															"nativeSrc": "11223:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11223:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11302:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11302:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11310:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11310:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11298:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:7"
																		},
																		"nativeSrc": "11298:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11298:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "11315:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11315:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11291:6:7"
																},
																"nativeSrc": "11291:29:7",
																"nodeType": "YulFunctionCall",
																"src": "11291:29:7"
															},
															"nativeSrc": "11291:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "11291:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
												"nativeSrc": "11106:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11204:6:7",
														"nodeType": "YulTypedName",
														"src": "11204:6:7",
														"type": ""
													}
												],
												"src": "11106:221:7"
											},
											{
												"body": {
													"nativeSrc": "11479:220:7",
													"nodeType": "YulBlock",
													"src": "11479:220:7",
													"statements": [
														{
															"nativeSrc": "11489:74:7",
															"nodeType": "YulAssignment",
															"src": "11489:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11555:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11555:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11560:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11560:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11496:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11496:58:7"
																},
																"nativeSrc": "11496:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11496:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11489:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11661:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11661:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																	"nativeSrc": "11572:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11572:88:7"
																},
																"nativeSrc": "11572:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11572:93:7"
															},
															"nativeSrc": "11572:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11572:93:7"
														},
														{
															"nativeSrc": "11674:19:7",
															"nodeType": "YulAssignment",
															"src": "11674:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11685:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11685:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11690:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11690:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:7"
																},
																"nativeSrc": "11681:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11681:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11674:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11674:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11333:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11467:3:7",
														"nodeType": "YulTypedName",
														"src": "11467:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11475:3:7",
														"nodeType": "YulTypedName",
														"src": "11475:3:7",
														"type": ""
													}
												],
												"src": "11333:366:7"
											},
											{
												"body": {
													"nativeSrc": "11876:248:7",
													"nodeType": "YulBlock",
													"src": "11876:248:7",
													"statements": [
														{
															"nativeSrc": "11886:26:7",
															"nodeType": "YulAssignment",
															"src": "11886:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11898:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11898:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11909:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11894:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11894:3:7"
																},
																"nativeSrc": "11894:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11894:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11886:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11886:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11933:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11933:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11944:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11944:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11929:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11929:3:7"
																		},
																		"nativeSrc": "11929:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11929:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11952:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11952:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11958:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11958:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11948:3:7"
																		},
																		"nativeSrc": "11948:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11948:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11922:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11922:6:7"
																},
																"nativeSrc": "11922:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11922:47:7"
															},
															"nativeSrc": "11922:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11922:47:7"
														},
														{
															"nativeSrc": "11978:139:7",
															"nodeType": "YulAssignment",
															"src": "11978:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12112:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12112:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11986:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11986:124:7"
																},
																"nativeSrc": "11986:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11986:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11978:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11978:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11705:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11856:9:7",
														"nodeType": "YulTypedName",
														"src": "11856:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11871:4:7",
														"nodeType": "YulTypedName",
														"src": "11871:4:7",
														"type": ""
													}
												],
												"src": "11705:419:7"
											},
											{
												"body": {
													"nativeSrc": "12236:73:7",
													"nodeType": "YulBlock",
													"src": "12236:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12258:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12258:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12266:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12266:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12254:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12254:3:7"
																		},
																		"nativeSrc": "12254:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12254:14:7"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206c696d6974206578636565646564",
																		"kind": "string",
																		"nativeSrc": "12270:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12270:31:7",
																		"type": "",
																		"value": "Token transfer limit exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12247:6:7"
																},
																"nativeSrc": "12247:55:7",
																"nodeType": "YulFunctionCall",
																"src": "12247:55:7"
															},
															"nativeSrc": "12247:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "12247:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
												"nativeSrc": "12130:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12228:6:7",
														"nodeType": "YulTypedName",
														"src": "12228:6:7",
														"type": ""
													}
												],
												"src": "12130:179:7"
											},
											{
												"body": {
													"nativeSrc": "12461:220:7",
													"nodeType": "YulBlock",
													"src": "12461:220:7",
													"statements": [
														{
															"nativeSrc": "12471:74:7",
															"nodeType": "YulAssignment",
															"src": "12471:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12537:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12537:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12542:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12542:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12478:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12478:58:7"
																},
																"nativeSrc": "12478:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12478:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12471:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12471:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12643:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12643:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
																	"nativeSrc": "12554:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12554:88:7"
																},
																"nativeSrc": "12554:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12554:93:7"
															},
															"nativeSrc": "12554:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12554:93:7"
														},
														{
															"nativeSrc": "12656:19:7",
															"nodeType": "YulAssignment",
															"src": "12656:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12667:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12672:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12672:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12663:3:7"
																},
																"nativeSrc": "12663:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12663:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12656:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12315:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12449:3:7",
														"nodeType": "YulTypedName",
														"src": "12449:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12457:3:7",
														"nodeType": "YulTypedName",
														"src": "12457:3:7",
														"type": ""
													}
												],
												"src": "12315:366:7"
											},
											{
												"body": {
													"nativeSrc": "12858:248:7",
													"nodeType": "YulBlock",
													"src": "12858:248:7",
													"statements": [
														{
															"nativeSrc": "12868:26:7",
															"nodeType": "YulAssignment",
															"src": "12868:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12880:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12880:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12891:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12891:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:7"
																},
																"nativeSrc": "12876:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12876:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12868:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12868:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12915:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12915:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12926:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12926:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12911:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:7"
																		},
																		"nativeSrc": "12911:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12911:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12934:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12934:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12940:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12930:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12930:3:7"
																		},
																		"nativeSrc": "12930:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12930:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:7"
																},
																"nativeSrc": "12904:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12904:47:7"
															},
															"nativeSrc": "12904:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12904:47:7"
														},
														{
															"nativeSrc": "12960:139:7",
															"nodeType": "YulAssignment",
															"src": "12960:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13094:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13094:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12968:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12968:124:7"
																},
																"nativeSrc": "12968:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12968:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12960:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12687:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12838:9:7",
														"nodeType": "YulTypedName",
														"src": "12838:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12853:4:7",
														"nodeType": "YulTypedName",
														"src": "12853:4:7",
														"type": ""
													}
												],
												"src": "12687:419:7"
											},
											{
												"body": {
													"nativeSrc": "13156:147:7",
													"nodeType": "YulBlock",
													"src": "13156:147:7",
													"statements": [
														{
															"nativeSrc": "13166:25:7",
															"nodeType": "YulAssignment",
															"src": "13166:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13189:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13189:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13171:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13171:17:7"
																},
																"nativeSrc": "13171:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13171:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13166:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13166:1:7"
																}
															]
														},
														{
															"nativeSrc": "13200:25:7",
															"nodeType": "YulAssignment",
															"src": "13200:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13223:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13223:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13205:17:7"
																},
																"nativeSrc": "13205:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13205:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13200:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13200:1:7"
																}
															]
														},
														{
															"nativeSrc": "13234:16:7",
															"nodeType": "YulAssignment",
															"src": "13234:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13245:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13245:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13248:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13248:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13241:3:7"
																},
																"nativeSrc": "13241:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13241:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13234:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13234:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13274:22:7",
																"nodeType": "YulBlock",
																"src": "13274:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13276:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13276:16:7"
																			},
																			"nativeSrc": "13276:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13276:18:7"
																		},
																		"nativeSrc": "13276:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13276:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13266:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13266:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13269:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13269:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13263:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13263:2:7"
																},
																"nativeSrc": "13263:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13263:10:7"
															},
															"nativeSrc": "13260:36:7",
															"nodeType": "YulIf",
															"src": "13260:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13112:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13143:1:7",
														"nodeType": "YulTypedName",
														"src": "13143:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13146:1:7",
														"nodeType": "YulTypedName",
														"src": "13146:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13152:3:7",
														"nodeType": "YulTypedName",
														"src": "13152:3:7",
														"type": ""
													}
												],
												"src": "13112:191:7"
											},
											{
												"body": {
													"nativeSrc": "13415:64:7",
													"nodeType": "YulBlock",
													"src": "13415:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13437:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13437:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13445:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13445:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13433:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13433:3:7"
																		},
																		"nativeSrc": "13433:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13433:14:7"
																	},
																	{
																		"hexValue": "436f6f6c646f776e2074696d6520706572696f64",
																		"kind": "string",
																		"nativeSrc": "13449:22:7",
																		"nodeType": "YulLiteral",
																		"src": "13449:22:7",
																		"type": "",
																		"value": "Cooldown time period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13426:6:7"
																},
																"nativeSrc": "13426:46:7",
																"nodeType": "YulFunctionCall",
																"src": "13426:46:7"
															},
															"nativeSrc": "13426:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "13426:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
												"nativeSrc": "13309:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13407:6:7",
														"nodeType": "YulTypedName",
														"src": "13407:6:7",
														"type": ""
													}
												],
												"src": "13309:170:7"
											},
											{
												"body": {
													"nativeSrc": "13631:220:7",
													"nodeType": "YulBlock",
													"src": "13631:220:7",
													"statements": [
														{
															"nativeSrc": "13641:74:7",
															"nodeType": "YulAssignment",
															"src": "13641:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13707:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13707:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13712:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13712:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13648:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13648:58:7"
																},
																"nativeSrc": "13648:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13648:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13641:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13641:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13813:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13813:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
																	"nativeSrc": "13724:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13724:88:7"
																},
																"nativeSrc": "13724:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13724:93:7"
															},
															"nativeSrc": "13724:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13724:93:7"
														},
														{
															"nativeSrc": "13826:19:7",
															"nodeType": "YulAssignment",
															"src": "13826:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13837:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13837:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13842:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13842:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13833:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13833:3:7"
																},
																"nativeSrc": "13833:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13833:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13826:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13826:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13485:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13619:3:7",
														"nodeType": "YulTypedName",
														"src": "13619:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13627:3:7",
														"nodeType": "YulTypedName",
														"src": "13627:3:7",
														"type": ""
													}
												],
												"src": "13485:366:7"
											},
											{
												"body": {
													"nativeSrc": "14028:248:7",
													"nodeType": "YulBlock",
													"src": "14028:248:7",
													"statements": [
														{
															"nativeSrc": "14038:26:7",
															"nodeType": "YulAssignment",
															"src": "14038:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14050:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14050:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14061:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14046:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14046:3:7"
																},
																"nativeSrc": "14046:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14046:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14038:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14038:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14085:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14085:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14096:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14096:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14081:3:7"
																		},
																		"nativeSrc": "14081:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14081:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14104:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14104:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14110:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14110:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14100:3:7"
																		},
																		"nativeSrc": "14100:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14100:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14074:6:7"
																},
																"nativeSrc": "14074:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14074:47:7"
															},
															"nativeSrc": "14074:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14074:47:7"
														},
														{
															"nativeSrc": "14130:139:7",
															"nodeType": "YulAssignment",
															"src": "14130:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14264:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14264:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14138:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14138:124:7"
																},
																"nativeSrc": "14138:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14138:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14130:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14130:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13857:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14008:9:7",
														"nodeType": "YulTypedName",
														"src": "14008:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14023:4:7",
														"nodeType": "YulTypedName",
														"src": "14023:4:7",
														"type": ""
													}
												],
												"src": "13857:419:7"
											},
											{
												"body": {
													"nativeSrc": "14310:152:7",
													"nodeType": "YulBlock",
													"src": "14310:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14327:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14327:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14330:77:7",
																		"nodeType": "YulLiteral",
																		"src": "14330:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14320:6:7"
																},
																"nativeSrc": "14320:88:7",
																"nodeType": "YulFunctionCall",
																"src": "14320:88:7"
															},
															"nativeSrc": "14320:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "14320:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14424:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14424:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14427:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14427:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14417:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14417:6:7"
																},
																"nativeSrc": "14417:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14417:15:7"
															},
															"nativeSrc": "14417:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14417:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14448:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14448:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14451:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14451:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14441:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14441:6:7"
																},
																"nativeSrc": "14441:15:7",
																"nodeType": "YulFunctionCall",
																"src": "14441:15:7"
															},
															"nativeSrc": "14441:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "14441:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14282:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "14282:180:7"
											},
											{
												"body": {
													"nativeSrc": "14510:143:7",
													"nodeType": "YulBlock",
													"src": "14510:143:7",
													"statements": [
														{
															"nativeSrc": "14520:25:7",
															"nodeType": "YulAssignment",
															"src": "14520:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14543:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14543:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14525:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14525:17:7"
																},
																"nativeSrc": "14525:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14525:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14520:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14520:1:7"
																}
															]
														},
														{
															"nativeSrc": "14554:25:7",
															"nodeType": "YulAssignment",
															"src": "14554:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14577:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14577:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14559:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14559:17:7"
																},
																"nativeSrc": "14559:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14559:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14554:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14554:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14601:22:7",
																"nodeType": "YulBlock",
																"src": "14601:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14603:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14603:16:7"
																			},
																			"nativeSrc": "14603:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14603:18:7"
																		},
																		"nativeSrc": "14603:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14603:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14598:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14598:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14591:6:7"
																},
																"nativeSrc": "14591:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14591:9:7"
															},
															"nativeSrc": "14588:35:7",
															"nodeType": "YulIf",
															"src": "14588:35:7"
														},
														{
															"nativeSrc": "14633:14:7",
															"nodeType": "YulAssignment",
															"src": "14633:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14642:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14642:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14645:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14645:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14638:3:7"
																},
																"nativeSrc": "14638:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14638:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14633:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14633:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14468:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14499:1:7",
														"nodeType": "YulTypedName",
														"src": "14499:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14502:1:7",
														"nodeType": "YulTypedName",
														"src": "14502:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14508:1:7",
														"nodeType": "YulTypedName",
														"src": "14508:1:7",
														"type": ""
													}
												],
												"src": "14468:185:7"
											},
											{
												"body": {
													"nativeSrc": "14704:149:7",
													"nodeType": "YulBlock",
													"src": "14704:149:7",
													"statements": [
														{
															"nativeSrc": "14714:25:7",
															"nodeType": "YulAssignment",
															"src": "14714:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14737:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14737:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14719:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14719:17:7"
																},
																"nativeSrc": "14719:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14719:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14714:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14714:1:7"
																}
															]
														},
														{
															"nativeSrc": "14748:25:7",
															"nodeType": "YulAssignment",
															"src": "14748:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14771:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14771:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14753:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14753:17:7"
																},
																"nativeSrc": "14753:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14753:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14748:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14748:1:7"
																}
															]
														},
														{
															"nativeSrc": "14782:17:7",
															"nodeType": "YulAssignment",
															"src": "14782:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14794:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14794:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14797:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14797:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14790:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14790:3:7"
																},
																"nativeSrc": "14790:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14790:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14782:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14782:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14824:22:7",
																"nodeType": "YulBlock",
																"src": "14824:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14826:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14826:16:7"
																			},
																			"nativeSrc": "14826:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14826:18:7"
																		},
																		"nativeSrc": "14826:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14826:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14815:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14815:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14821:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14821:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14812:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14812:2:7"
																},
																"nativeSrc": "14812:11:7",
																"nodeType": "YulFunctionCall",
																"src": "14812:11:7"
															},
															"nativeSrc": "14809:37:7",
															"nodeType": "YulIf",
															"src": "14809:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14659:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14690:1:7",
														"nodeType": "YulTypedName",
														"src": "14690:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14693:1:7",
														"nodeType": "YulTypedName",
														"src": "14693:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14699:4:7",
														"nodeType": "YulTypedName",
														"src": "14699:4:7",
														"type": ""
													}
												],
												"src": "14659:194:7"
											},
											{
												"body": {
													"nativeSrc": "14924:53:7",
													"nodeType": "YulBlock",
													"src": "14924:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14941:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14941:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14964:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14964:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14946:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "14946:17:7"
																		},
																		"nativeSrc": "14946:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14946:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14934:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14934:6:7"
																},
																"nativeSrc": "14934:37:7",
																"nodeType": "YulFunctionCall",
																"src": "14934:37:7"
															},
															"nativeSrc": "14934:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "14934:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "14859:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14912:5:7",
														"nodeType": "YulTypedName",
														"src": "14912:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14919:3:7",
														"nodeType": "YulTypedName",
														"src": "14919:3:7",
														"type": ""
													}
												],
												"src": "14859:118:7"
											},
											{
												"body": {
													"nativeSrc": "15137:288:7",
													"nodeType": "YulBlock",
													"src": "15137:288:7",
													"statements": [
														{
															"nativeSrc": "15147:26:7",
															"nodeType": "YulAssignment",
															"src": "15147:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15159:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15159:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15170:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15170:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15155:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15155:3:7"
																},
																"nativeSrc": "15155:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15155:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15147:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15147:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15227:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15227:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15240:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15240:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15251:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15251:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15236:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15236:3:7"
																		},
																		"nativeSrc": "15236:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15236:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15183:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15183:43:7"
																},
																"nativeSrc": "15183:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15183:71:7"
															},
															"nativeSrc": "15183:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15183:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15308:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15308:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15321:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15321:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15332:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15332:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15317:3:7"
																		},
																		"nativeSrc": "15317:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15317:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15264:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15264:43:7"
																},
																"nativeSrc": "15264:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15264:72:7"
															},
															"nativeSrc": "15264:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15264:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15390:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15390:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15403:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15403:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15414:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15414:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15399:3:7"
																		},
																		"nativeSrc": "15399:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15399:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15346:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15346:43:7"
																},
																"nativeSrc": "15346:72:7",
																"nodeType": "YulFunctionCall",
																"src": "15346:72:7"
															},
															"nativeSrc": "15346:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "15346:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14983:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15093:9:7",
														"nodeType": "YulTypedName",
														"src": "15093:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15105:6:7",
														"nodeType": "YulTypedName",
														"src": "15105:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15113:6:7",
														"nodeType": "YulTypedName",
														"src": "15113:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15121:6:7",
														"nodeType": "YulTypedName",
														"src": "15121:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15132:4:7",
														"nodeType": "YulTypedName",
														"src": "15132:4:7",
														"type": ""
													}
												],
												"src": "14983:442:7"
											},
											{
												"body": {
													"nativeSrc": "15529:124:7",
													"nodeType": "YulBlock",
													"src": "15529:124:7",
													"statements": [
														{
															"nativeSrc": "15539:26:7",
															"nodeType": "YulAssignment",
															"src": "15539:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15551:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15551:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15562:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15562:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15547:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15547:3:7"
																},
																"nativeSrc": "15547:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15547:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15539:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15539:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15619:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15619:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15632:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15632:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15643:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15643:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15628:3:7"
																		},
																		"nativeSrc": "15628:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15628:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15575:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15575:43:7"
																},
																"nativeSrc": "15575:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15575:71:7"
															},
															"nativeSrc": "15575:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15575:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15431:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15501:9:7",
														"nodeType": "YulTypedName",
														"src": "15501:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15513:6:7",
														"nodeType": "YulTypedName",
														"src": "15513:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15524:4:7",
														"nodeType": "YulTypedName",
														"src": "15524:4:7",
														"type": ""
													}
												],
												"src": "15431:222:7"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Both addresses must be whitelist\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer limit exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown time period\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405261001261027d60201b60201c565b600a61001e9190610b3d565b6305f5e10061002d9190610b87565b600655600654600755603c60085560056009556002600a555f600b5f6101000a81548160ff0219169083151502179055505f600b60016101000a81548160ff0219169083151502179055505f600b60166101000a81548160ff02191690831515021790555034801561009d575f5ffd5b506040516134e93803806134e983398181016040528101906100bf9190610c26565b816040518060400160405280600981526020017f5661756c74436f696e00000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f5661756c74000000000000000000000000000000000000000000000000000000815250816003908161013b9190610e98565b50806004908161014b9190610e98565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101be575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101b59190610f76565b60405180910390fd5b6101cd8161028560201b60201c565b506101e08260065461034860201b60201c565b6001600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555080600b60026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050611285565b5f6012905090565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103b8575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103af9190610f76565b60405180910390fd5b6103c95f83836103cd60201b60201c565b5050565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561046b5750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b6104aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a190610fe9565b60405180910390fd5b600b5f9054906101000a900460ff161561059a57600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16801561055a5750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059090611077565b60405180910390fd5b5b6007548111156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906110df565b60405180910390fd5b600854600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461062a91906110fd565b42101561066c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106639061117a565b60405180910390fd5b42600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16806107105750600b60019054906101000a900460ff16155b1561072b576107268383836107b360201b60201c565b6107ae565b600b60019054906101000a900460ff16156107ad575f6064600a5460095461075391906110fd565b8361075e9190610b87565b61076891906111c5565b9050808261077691906111f5565b91506107ab84600b60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846107b360201b60201c565b505b5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610803578060025f8282546107f791906110fd565b925050819055506108d1565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561088c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161088393929190611237565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610918578060025f8282540392505081905550610962565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516109bf919061126c565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610a4e57808604811115610a2a57610a296109cc565b5b6001851615610a395780820291505b8081029050610a47856109f9565b9450610a0e565b94509492505050565b5f82610a665760019050610b21565b81610a73575f9050610b21565b8160018114610a895760028114610a9357610ac2565b6001915050610b21565b60ff841115610aa557610aa46109cc565b5b8360020a915084821115610abc57610abb6109cc565b5b50610b21565b5060208310610133831016604e8410600b8410161715610af75782820a905083811115610af257610af16109cc565b5b610b21565b610b048484846001610a05565b92509050818404811115610b1b57610b1a6109cc565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f610b4782610b28565b9150610b5283610b31565b9250610b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a57565b905092915050565b5f610b9182610b28565b9150610b9c83610b28565b9250828202610baa81610b28565b91508282048414831517610bc157610bc06109cc565b5b5092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bf582610bcc565b9050919050565b610c0581610beb565b8114610c0f575f5ffd5b50565b5f81519050610c2081610bfc565b92915050565b5f5f60408385031215610c3c57610c3b610bc8565b5b5f610c4985828601610c12565b9250506020610c5a85828601610c12565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610cdf57607f821691505b602082108103610cf257610cf1610c9b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610d547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d19565b610d5e8683610d19565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610d99610d94610d8f84610b28565b610d76565b610b28565b9050919050565b5f819050919050565b610db283610d7f565b610dc6610dbe82610da0565b848454610d25565b825550505050565b5f5f905090565b610ddd610dce565b610de8818484610da9565b505050565b5b81811015610e0b57610e005f82610dd5565b600181019050610dee565b5050565b601f821115610e5057610e2181610cf8565b610e2a84610d0a565b81016020851015610e39578190505b610e4d610e4585610d0a565b830182610ded565b50505b505050565b5f82821c905092915050565b5f610e705f1984600802610e55565b1980831691505092915050565b5f610e888383610e61565b9150826002028217905092915050565b610ea182610c64565b67ffffffffffffffff811115610eba57610eb9610c6e565b5b610ec48254610cc8565b610ecf828285610e0f565b5f60209050601f831160018114610f00575f8415610eee578287015190505b610ef88582610e7d565b865550610f5f565b601f198416610f0e86610cf8565b5f5b82811015610f3557848901518255600182019150602085019450602081019050610f10565b86831015610f525784890151610f4e601f891682610e61565b8355505b6001600288020188555050505b505050505050565b610f7081610beb565b82525050565b5f602082019050610f895f830184610f67565b92915050565b5f82825260208201905092915050565b7f426c61636b6c69737465642061646472657373000000000000000000000000005f82015250565b5f610fd3601383610f8f565b9150610fde82610f9f565b602082019050919050565b5f6020820190508181035f83015261100081610fc7565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611061602283610f8f565b915061106c82611007565b604082019050919050565b5f6020820190508181035f83015261108e81611055565b9050919050565b7f546f6b656e207472616e73666572206c696d69742065786365656465640000005f82015250565b5f6110c9601d83610f8f565b91506110d482611095565b602082019050919050565b5f6020820190508181035f8301526110f6816110bd565b9050919050565b5f61110782610b28565b915061111283610b28565b925082820190508082111561112a576111296109cc565b5b92915050565b7f436f6f6c646f776e2074696d6520706572696f640000000000000000000000005f82015250565b5f611164601483610f8f565b915061116f82611130565b602082019050919050565b5f6020820190508181035f83015261119181611158565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111cf82610b28565b91506111da83610b28565b9250826111ea576111e9611198565b5b828204905092915050565b5f6111ff82610b28565b915061120a83610b28565b9250828203905081811115611222576112216109cc565b5b92915050565b61123181610b28565b82525050565b5f60608201905061124a5f830186610f67565b6112576020830185611228565b6112646040830184611228565b949350505050565b5f60208201905061127f5f830184611228565b92915050565b612257806112925f395ff3fe608060405234801561000f575f5ffd5b5060043610610225575f3560e01c80636f9170f61161012e578063a9059cbb116100b6578063dd62ed3e1161007a578063dd62ed3e146105e4578063ec28438a14610614578063efc3a4aa14610630578063f2fde38b1461063a578063fe575a871461065657610225565b8063a9059cbb1461054d578063b319c6b71461057d578063b7bda68f1461059b578063ced695a4146105b9578063d51d86f4146105c357610225565b806388210bb1116100fd57806388210bb1146104b95780638c0b5e22146104d55780638da5cb5b146104f357806393af22ff1461051157806395d89b411461052f57610225565b80636f9170f6146104335780636ff732011461046357806370a082311461047f578063715018a6146104af57610225565b8063313ce567116101b15780634ebc552d116101805780634ebc552d146103b5578063537df3b6146103d157806353eb3bcf146103ed5780636b3907ca146103f75780636d8b05271461041557610225565b8063313ce5671461034357806344337ea11461036157806347ee03941461037d578063491924181461039957610225565b806318160ddd116101f857806318160ddd146102b15780631bacad95146102cf57806323b872dd146102eb5780632958ad7f1461031b5780632973ef2d1461032557610225565b806301bf66481461022957806306fdde0314610245578063095ea7b3146102635780630ddc097614610293575b5f5ffd5b610243600480360381019061023e9190611a0f565b610686565b005b61024d6106e5565b60405161025a9190611aaa565b60405180910390f35b61027d60048036038101906102789190611afd565b610775565b60405161028a9190611b55565b60405180910390f35b61029b610797565b6040516102a89190611b7d565b60405180910390f35b6102b961079d565b6040516102c69190611b7d565b60405180910390f35b6102e960048036038101906102e49190611a0f565b6107a6565b005b61030560048036038101906103009190611b96565b610805565b6040516103129190611b55565b60405180910390f35b610323610833565b005b61032d610857565b60405161033a9190611b7d565b60405180910390f35b61034b610860565b6040516103589190611c01565b60405180910390f35b61037b60048036038101906103769190611a0f565b610868565b005b61039760048036038101906103929190611a0f565b6108c8565b005b6103b360048036038101906103ae9190611c1a565b6109b2565b005b6103cf60048036038101906103ca9190611c1a565b610a08565b005b6103eb60048036038101906103e69190611a0f565b610a5e565b005b6103f5610abd565b005b6103ff610ae2565b60405161040c9190611b7d565b60405180910390f35b61041d610ae8565b60405161042a9190611b7d565b60405180910390f35b61044d60048036038101906104489190611a0f565b610af1565b60405161045a9190611b55565b60405180910390f35b61047d60048036038101906104789190611c1a565b610b43565b005b61049960048036038101906104949190611a0f565b610b55565b6040516104a69190611b7d565b60405180910390f35b6104b7610b9a565b005b6104d360048036038101906104ce9190611a0f565b610bac565b005b6104dd610c0c565b6040516104ea9190611b7d565b60405180910390f35b6104fb610c12565b6040516105089190611c54565b60405180910390f35b610519610c3a565b6040516105269190611b7d565b60405180910390f35b610537610c43565b6040516105449190611aaa565b60405180910390f35b61056760048036038101906105629190611afd565b610cd3565b6040516105749190611b55565b60405180910390f35b610585610cf5565b6040516105929190611b7d565b60405180910390f35b6105a3610cfb565b6040516105b09190611c54565b60405180910390f35b6105c1610d21565b005b6105cb610d45565b6040516105db9493929190611c6d565b60405180910390f35b6105fe60048036038101906105f99190611cb0565b610d68565b60405161060b9190611b7d565b60405180910390f35b61062e60048036038101906106299190611c1a565b610dea565b005b610638610dfc565b005b610654600480360381019061064f9190611a0f565b610e21565b005b610670600480360381019061066b9190611a0f565b610ea5565b60405161067d9190611b55565b60405180910390f35b61068e610ef7565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6060600380546106f490611d1b565b80601f016020809104026020016040519081016040528092919081815260200182805461072090611d1b565b801561076b5780601f106107425761010080835404028352916020019161076b565b820191905f5260205f20905b81548152906001019060200180831161074e57829003601f168201915b5050505050905090565b5f5f61077f610f7e565b905061078c818585610f85565b600191505092915050565b60095481565b5f600254905090565b6107ae610ef7565b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f61080f610f7e565b905061081c858285610f97565b610827858585611029565b60019150509392505050565b61083b610ef7565b6001600b5f6101000a81548160ff021916908315150217905550565b5f600954905090565b5f6012905090565b610870610ef7565b6001600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6108d0610ef7565b600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611dbb565b60405180910390fd5b6001600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6109ba610ef7565b60058111156109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f590611e49565b60405180910390fd5b80600a8190555050565b610a10610ef7565b600a811115610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611ed7565b60405180910390fd5b8060098190555050565b610a66610ef7565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610ac5610ef7565b6001600b60016101000a81548160ff021916908315150217905550565b600a5481565b5f600754905090565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610b4b610ef7565b8060088190555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ba2610ef7565b610baa611119565b565b610bb4610ef7565b6001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600a54905090565b606060048054610c5290611d1b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e90611d1b565b8015610cc95780601f10610ca057610100808354040283529160200191610cc9565b820191905f5260205f20905b815481529060010190602001808311610cac57829003601f168201915b5050505050905090565b5f5f610cdd610f7e565b9050610cea818585611029565b600191505092915050565b60085481565b600b60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d29610ef7565b5f600b60016101000a81548160ff021916908315150217905550565b5f5f5f5f610d51610c12565b600754600854600654935093509350935090919293565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610df2610ef7565b8060078190555050565b610e04610ef7565b6001600b60166101000a81548160ff021916908315150217905550565b610e29610ef7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e99575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e909190611c54565b60405180910390fd5b610ea28161112c565b50565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610eff610f7e565b73ffffffffffffffffffffffffffffffffffffffff16610f1d610c12565b73ffffffffffffffffffffffffffffffffffffffff1614610f7c57610f40610f7e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f739190611c54565b60405180910390fd5b565b5f33905090565b610f9283838360016111ef565b505050565b5f610fa28484610d68565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110235781811015611014578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161100b93929190611ef5565b60405180910390fd5b61102284848484035f6111ef565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611099575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110909190611c54565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611109575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111009190611c54565b60405180910390fd5b6111148383836113be565b505050565b611121610ef7565b61112a5f61112c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361125f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112569190611c54565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112cf575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c69190611c54565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113af9190611b7d565b60405180910390a35b50505050565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561145c5750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b61149b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149290611f74565b60405180910390fd5b600b5f9054906101000a900460ff161561158b57600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16801561154b5750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61158a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158190612002565b60405180910390fd5b5b6007548111156115d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c79061206a565b60405180910390fd5b600854600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461161b91906120b5565b42101561165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165490612132565b60405180910390fd5b42600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16806117015750600b60019054906101000a900460ff16155b1561171657611711838383611798565b611793565b600b60019054906101000a900460ff1615611792575f6064600a5460095461173e91906120b5565b836117499190612150565b61175391906121be565b9050808261176191906121ee565b915061179084600b60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611798565b505b5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117e8578060025f8282546117dc91906120b5565b925050819055506118b6565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611871578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161186893929190611ef5565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118fd578060025f8282540392505081905550611947565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119a49190611b7d565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119de826119b5565b9050919050565b6119ee816119d4565b81146119f8575f5ffd5b50565b5f81359050611a09816119e5565b92915050565b5f60208284031215611a2457611a236119b1565b5b5f611a31848285016119fb565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a7c82611a3a565b611a868185611a44565b9350611a96818560208601611a54565b611a9f81611a62565b840191505092915050565b5f6020820190508181035f830152611ac28184611a72565b905092915050565b5f819050919050565b611adc81611aca565b8114611ae6575f5ffd5b50565b5f81359050611af781611ad3565b92915050565b5f5f60408385031215611b1357611b126119b1565b5b5f611b20858286016119fb565b9250506020611b3185828601611ae9565b9150509250929050565b5f8115159050919050565b611b4f81611b3b565b82525050565b5f602082019050611b685f830184611b46565b92915050565b611b7781611aca565b82525050565b5f602082019050611b905f830184611b6e565b92915050565b5f5f5f60608486031215611bad57611bac6119b1565b5b5f611bba868287016119fb565b9350506020611bcb868287016119fb565b9250506040611bdc86828701611ae9565b9150509250925092565b5f60ff82169050919050565b611bfb81611be6565b82525050565b5f602082019050611c145f830184611bf2565b92915050565b5f60208284031215611c2f57611c2e6119b1565b5b5f611c3c84828501611ae9565b91505092915050565b611c4e816119d4565b82525050565b5f602082019050611c675f830184611c45565b92915050565b5f608082019050611c805f830187611c45565b611c8d6020830186611b6e565b611c9a6040830185611b6e565b611ca76060830184611b6e565b95945050505050565b5f5f60408385031215611cc657611cc56119b1565b5b5f611cd3858286016119fb565b9250506020611ce4858286016119fb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611d3257607f821691505b602082108103611d4557611d44611cee565b5b50919050565b7f426c61636b6c6973746564206163636f756e74732063616e6e6f7420626520775f8201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b5f611da5602a83611a44565b9150611db082611d4b565b604082019050919050565b5f6020820190508181035f830152611dd281611d99565b9050919050565b7f536c69707061676520666565732063616e6e6f742062652068696768657220745f8201527f68616e2035250000000000000000000000000000000000000000000000000000602082015250565b5f611e33602683611a44565b9150611e3e82611dd9565b604082019050919050565b5f6020820190508181035f830152611e6081611e27565b9050919050565b7f546178206665652063616e6e6f7420626520686967686572207468616e2031305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ec1602183611a44565b9150611ecc82611e67565b604082019050919050565b5f6020820190508181035f830152611eee81611eb5565b9050919050565b5f606082019050611f085f830186611c45565b611f156020830185611b6e565b611f226040830184611b6e565b949350505050565b7f426c61636b6c69737465642061646472657373000000000000000000000000005f82015250565b5f611f5e601383611a44565b9150611f6982611f2a565b602082019050919050565b5f6020820190508181035f830152611f8b81611f52565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611fec602283611a44565b9150611ff782611f92565b604082019050919050565b5f6020820190508181035f83015261201981611fe0565b9050919050565b7f546f6b656e207472616e73666572206c696d69742065786365656465640000005f82015250565b5f612054601d83611a44565b915061205f82612020565b602082019050919050565b5f6020820190508181035f83015261208181612048565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120bf82611aca565b91506120ca83611aca565b92508282019050808211156120e2576120e1612088565b5b92915050565b7f436f6f6c646f776e2074696d6520706572696f640000000000000000000000005f82015250565b5f61211c601483611a44565b9150612127826120e8565b602082019050919050565b5f6020820190508181035f83015261214981612110565b9050919050565b5f61215a82611aca565b915061216583611aca565b925082820261217381611aca565b9150828204841483151761218a57612189612088565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121c882611aca565b91506121d383611aca565b9250826121e3576121e2612191565b5b828204905092915050565b5f6121f882611aca565b915061220383611aca565b925082820390508181111561221b5761221a612088565b5b9291505056fea2646970667358221220101ff2a8b897d4bcb96453bcc5f6e97efb9ceee4ba36e6e53ae25328464743a264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x12 PUSH2 0x27D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1E SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x2D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SSTORE PUSH1 0x3C PUSH1 0x8 SSTORE PUSH1 0x5 PUSH1 0x9 SSTORE PUSH1 0x2 PUSH1 0xA SSTORE PUSH0 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xB PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34E9 CODESIZE SUB DUP1 PUSH2 0x34E9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5661756C74436F696E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5661756C74000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CD DUP2 PUSH2 0x285 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1E0 DUP3 PUSH1 0x6 SLOAD PUSH2 0x348 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1285 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C9 PUSH0 DUP4 DUP4 PUSH2 0x3CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A1 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x59A JUMPI PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x55A JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x590 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D6 SWAP1 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x663 SWAP1 PUSH2 0x117A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x710 JUMPI POP PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x72B JUMPI PUSH2 0x726 DUP4 DUP4 DUP4 PUSH2 0x7B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7AD JUMPI PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x753 SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST DUP4 PUSH2 0x75E SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x11C5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x776 SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AB DUP5 PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x7B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x803 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F7 SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8D1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x88C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x918 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x962 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA4E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA29 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA39 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA47 DUP6 PUSH2 0x9F9 JUMP JUMPDEST SWAP5 POP PUSH2 0xA0E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA66 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST DUP2 PUSH2 0xA73 JUMPI PUSH0 SWAP1 POP PUSH2 0xB21 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA89 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA93 JUMPI PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB21 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x9CC JUMP JUMPDEST JUMPDEST POP PUSH2 0xB21 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAF7 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH2 0xB04 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xB1B JUMPI PUSH2 0xB1A PUSH2 0x9CC JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB47 DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0xB52 DUP4 PUSH2 0xB31 JUMP JUMPDEST SWAP3 POP PUSH2 0xB7F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB91 DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP4 PUSH2 0xB28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xBAA DUP2 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xBC1 JUMPI PUSH2 0xBC0 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBF5 DUP3 PUSH2 0xBCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC05 DUP2 PUSH2 0xBEB JUMP JUMPDEST DUP2 EQ PUSH2 0xC0F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC20 DUP2 PUSH2 0xBFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC3C JUMPI PUSH2 0xC3B PUSH2 0xBC8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC49 DUP6 DUP3 DUP7 ADD PUSH2 0xC12 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC5A DUP6 DUP3 DUP7 ADD PUSH2 0xC12 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xCDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCF2 JUMPI PUSH2 0xCF1 PUSH2 0xC9B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xD54 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xD5E DUP7 DUP4 PUSH2 0xD19 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD99 PUSH2 0xD94 PUSH2 0xD8F DUP5 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB2 DUP4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0xDC6 PUSH2 0xDBE DUP3 PUSH2 0xDA0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xD25 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDDD PUSH2 0xDCE JUMP JUMPDEST PUSH2 0xDE8 DUP2 DUP5 DUP5 PUSH2 0xDA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE0B JUMPI PUSH2 0xE00 PUSH0 DUP3 PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDEE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xE50 JUMPI PUSH2 0xE21 DUP2 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0xE2A DUP5 PUSH2 0xD0A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xE39 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xE4D PUSH2 0xE45 DUP6 PUSH2 0xD0A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xDED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE70 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xE55 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE88 DUP4 DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA1 DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBA JUMPI PUSH2 0xEB9 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST PUSH2 0xEC4 DUP3 SLOAD PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0xECF DUP3 DUP3 DUP6 PUSH2 0xE0F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xF00 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xEEE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xEF8 DUP6 DUP3 PUSH2 0xE7D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xF0E DUP7 PUSH2 0xCF8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF35 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF10 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xF52 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xF4E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xE61 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xBEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF89 PUSH0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564206164647265737300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFD3 PUSH1 0x13 DUP4 PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP PUSH2 0xFDE DUP3 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1061 PUSH1 0x22 DUP4 PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP PUSH2 0x106C DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x108E DUP2 PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206C696D6974206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10C9 PUSH1 0x1D DUP4 PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP PUSH2 0x10D4 DUP3 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10F6 DUP2 PUSH2 0x10BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1107 DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0x1112 DUP4 PUSH2 0xB28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E2074696D6520706572696F64000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1164 PUSH1 0x14 DUP4 PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP PUSH2 0x116F DUP3 PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1191 DUP2 PUSH2 0x1158 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11CF DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0x11DA DUP4 PUSH2 0xB28 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11EA JUMPI PUSH2 0x11E9 PUSH2 0x1198 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11FF DUP3 PUSH2 0xB28 JUMP JUMPDEST SWAP2 POP PUSH2 0x120A DUP4 PUSH2 0xB28 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1222 JUMPI PUSH2 0x1221 PUSH2 0x9CC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0xB28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x124A PUSH0 DUP4 ADD DUP7 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x1257 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x1264 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1228 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127F PUSH0 DUP4 ADD DUP5 PUSH2 0x1228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2257 DUP1 PUSH2 0x1292 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9170F6 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xEFC3A4AA EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x656 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xCED695A4 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xD51D86F4 EQ PUSH2 0x5C3 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x88210BB1 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x88210BB1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x93AF22FF EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x6FF73201 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AF JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4EBC552D GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x4EBC552D EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x53EB3BCF EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x6B3907CA EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x6D8B0527 EQ PUSH2 0x415 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x47EE0394 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x49192418 EQ PUSH2 0x399 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x1BACAD95 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x2958AD7F EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x2973EF2D EQ PUSH2 0x325 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDDC0976 EQ PUSH2 0x293 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FF PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0xB9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x537 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0xD21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CB PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x638 PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F4 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x720 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x742 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x77F PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x78C DUP2 DUP6 DUP6 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x80F PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x81C DUP6 DUP3 DUP6 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x827 DUP6 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x870 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA66 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xEF7 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0x1119 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC52 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7E SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCDD PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0xCEA DUP2 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD29 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xD51 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF2 PUSH2 0xEF7 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE29 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA2 DUP2 PUSH2 0x112C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0xF7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF1D PUSH2 0xC12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF7C JUMPI PUSH2 0xF40 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA2 DUP5 DUP5 PUSH2 0xD68 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1023 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1014 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1022 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11EF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1099 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1121 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x112A PUSH0 PUSH2 0x112C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x145C JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x149B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x158B JUMPI PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x154B JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1701 JUMPI POP PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1711 DUP4 DUP4 DUP4 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1792 JUMPI PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x173E SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST DUP4 PUSH2 0x1749 SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x21EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1790 DUP5 PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1798 JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1871 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18FD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1947 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE DUP3 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EE DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A09 DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH2 0x1A23 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A31 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7C DUP3 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1A86 DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A62 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC2 DUP2 DUP5 PUSH2 0x1A72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADC DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF7 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1B12 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B20 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B77 DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBA DUP7 DUP3 DUP8 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BCB DUP7 DUP3 DUP8 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BDC DUP7 DUP3 DUP8 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFB DUP2 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C14 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x1C2E PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3C DUP5 DUP3 DUP6 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4E DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C67 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C80 PUSH0 DUP4 ADD DUP8 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1C9A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1CA7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD3 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE4 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1CEE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564206163636F756E74732063616E6E6F742062652077 PUSH0 DUP3 ADD MSTORE PUSH32 0x686974656C697374656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA5 PUSH1 0x2A DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB0 DUP3 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD2 DUP2 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C69707061676520666565732063616E6E6F74206265206869676865722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E2035250000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E33 PUSH1 0x26 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3E DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E60 DUP2 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546178206665652063616E6E6F7420626520686967686572207468616E203130 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC1 PUSH1 0x21 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECC DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEE DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F08 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1F15 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1F22 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564206164647265737300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5E PUSH1 0x13 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F69 DUP3 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8B DUP2 PUSH2 0x1F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEC PUSH1 0x22 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF7 DUP3 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206C696D6974206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2054 PUSH1 0x1D DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x205F DUP3 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2081 DUP2 PUSH2 0x2048 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20BF DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x20CA DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x2088 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E2074696D6520706572696F64000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211C PUSH1 0x14 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x2110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215A DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2165 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2173 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x2088 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21C8 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x21D3 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x2191 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2203 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221A PUSH2 0x2088 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x1F CALLCODE 0xA8 0xB8 SWAP8 0xD4 0xBC 0xB9 PUSH5 0x53BCC5F6E9 PUSH31 0xFB9CEEE4BA36E6E53AE25328464743A264736F6C634300081C003300000000 ",
							"sourceMap": "174:5029:6:-:0;;;264:10;:8;;;:10;;:::i;:::-;260:2;:14;;;;:::i;:::-;248:9;:26;;;;:::i;:::-;216:58;;307:13;;277:43;;354:9;323:40;;392:1;366:27;;427:1;396:32;;468:5;433:40;;;;;;;;;;;;;;;;;;;;502:5;476:31;;;;;;;;;;;;;;;;;;;;578:5;542:41;;;;;;;;;;;;;;;;;;;;768:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;869:12;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;893:33:6::2;899:12;912:13;;893:5;;;:33;;:::i;:::-;1008:4;981:10;:24;992:12;981:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1034:11;1023:10;;:22;;;;;;;;;;;;;;;;;;768:285:::0;;174:5029;;2707:82:2;2756:5;2780:2;2773:9;;2707:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;3330:951:6:-;3426:10;:14;3437:2;3426:14;;;;;;;;;;;;;;;;;;;;;;;;;3425:15;:36;;;;;3445:10;:16;3456:4;3445:16;;;;;;;;;;;;;;;;;;;;;;;;;3444:17;3425:36;3417:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3498:20;;;;;;;;;;;3495:132;;;3542:10;:16;3553:4;3542:16;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;3562:10;:14;3573:2;3562:14;;;;;;;;;;;;;;;;;;;;;;;;;3542:34;3534:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3495:132;3654:11;;3645:5;:20;;3637:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3755:12;;3736:11;:17;3748:4;3736:17;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;3717:15;:50;;3709:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3822:15;3802:11;:17;3814:4;3802:17;;;;;;;;;;;;;;;:35;;;;3867:8;:14;3876:4;3867:14;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3886:11;;;;;;;;;;;3885:12;3867:30;3864:396;;;3975:30;3989:4;3995:2;3999:5;3975:13;;;:30;;:::i;:::-;3864:396;;;4025:11;;;;;;;;;;;4022:238;;;4053:17;4106:3;4091:12;;4083:7;;:20;;;;:::i;:::-;4074:5;:30;;;;:::i;:::-;4073:36;;;;:::i;:::-;4053:56;;4186:9;4178:5;:17;;;;:::i;:::-;4169:26;;4210:38;4224:4;4230:10;;;;;;;;;;;4242:5;4210:13;;;:38;;:::i;:::-;4037:223;4022:238;3864:396;3330:951;;;:::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:180:7:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:410::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2848:1;2845;2841:9;2870:30;2888:11;2870:30;:::i;:::-;2859:41;;3049:1;3040:7;3036:15;3033:1;3030:22;3010:1;3003:9;2983:83;2960:139;;3079:18;;:::i;:::-;2960:139;2744:362;2696:410;;;;:::o;3193:117::-;3302:1;3299;3292:12;3439:126;3476:7;3516:42;3509:5;3505:54;3494:65;;3439:126;;;:::o;3571:96::-;3608:7;3637:24;3655:5;3637:24;:::i;:::-;3626:35;;3571:96;;;:::o;3673:122::-;3746:24;3764:5;3746:24;:::i;:::-;3739:5;3736:35;3726:63;;3785:1;3782;3775:12;3726:63;3673:122;:::o;3801:143::-;3858:5;3889:6;3883:13;3874:22;;3905:33;3932:5;3905:33;:::i;:::-;3801:143;;;;:::o;3950:507::-;4029:6;4037;4086:2;4074:9;4065:7;4061:23;4057:32;4054:119;;;4092:79;;:::i;:::-;4054:119;4212:1;4237:64;4293:7;4284:6;4273:9;4269:22;4237:64;:::i;:::-;4227:74;;4183:128;4350:2;4376:64;4432:7;4423:6;4412:9;4408:22;4376:64;:::i;:::-;4366:74;;4321:129;3950:507;;;;;:::o;4463:99::-;4515:6;4549:5;4543:12;4533:22;;4463:99;;;:::o;4568:180::-;4616:77;4613:1;4606:88;4713:4;4710:1;4703:15;4737:4;4734:1;4727:15;4754:180;4802:77;4799:1;4792:88;4899:4;4896:1;4889:15;4923:4;4920:1;4913:15;4940:320;4984:6;5021:1;5015:4;5011:12;5001:22;;5068:1;5062:4;5058:12;5089:18;5079:81;;5145:4;5137:6;5133:17;5123:27;;5079:81;5207:2;5199:6;5196:14;5176:18;5173:38;5170:84;;5226:18;;:::i;:::-;5170:84;4991:269;4940:320;;;:::o;5266:141::-;5315:4;5338:3;5330:11;;5361:3;5358:1;5351:14;5395:4;5392:1;5382:18;5374:26;;5266:141;;;:::o;5413:93::-;5450:6;5497:2;5492;5485:5;5481:14;5477:23;5467:33;;5413:93;;;:::o;5512:107::-;5556:8;5606:5;5600:4;5596:16;5575:37;;5512:107;;;;:::o;5625:393::-;5694:6;5744:1;5732:10;5728:18;5767:97;5797:66;5786:9;5767:97;:::i;:::-;5885:39;5915:8;5904:9;5885:39;:::i;:::-;5873:51;;5957:4;5953:9;5946:5;5942:21;5933:30;;6006:4;5996:8;5992:19;5985:5;5982:30;5972:40;;5701:317;;5625:393;;;;;:::o;6024:60::-;6052:3;6073:5;6066:12;;6024:60;;;:::o;6090:142::-;6140:9;6173:53;6191:34;6200:24;6218:5;6200:24;:::i;:::-;6191:34;:::i;:::-;6173:53;:::i;:::-;6160:66;;6090:142;;;:::o;6238:75::-;6281:3;6302:5;6295:12;;6238:75;;;:::o;6319:269::-;6429:39;6460:7;6429:39;:::i;:::-;6490:91;6539:41;6563:16;6539:41;:::i;:::-;6531:6;6524:4;6518:11;6490:91;:::i;:::-;6484:4;6477:105;6395:193;6319:269;;;:::o;6594:73::-;6639:3;6660:1;6653:8;;6594:73;:::o;6673:189::-;6750:32;;:::i;:::-;6791:65;6849:6;6841;6835:4;6791:65;:::i;:::-;6726:136;6673:189;;:::o;6868:186::-;6928:120;6945:3;6938:5;6935:14;6928:120;;;6999:39;7036:1;7029:5;6999:39;:::i;:::-;6972:1;6965:5;6961:13;6952:22;;6928:120;;;6868:186;;:::o;7060:543::-;7161:2;7156:3;7153:11;7150:446;;;7195:38;7227:5;7195:38;:::i;:::-;7279:29;7297:10;7279:29;:::i;:::-;7269:8;7265:44;7462:2;7450:10;7447:18;7444:49;;;7483:8;7468:23;;7444:49;7506:80;7562:22;7580:3;7562:22;:::i;:::-;7552:8;7548:37;7535:11;7506:80;:::i;:::-;7165:431;;7150:446;7060:543;;;:::o;7609:117::-;7663:8;7713:5;7707:4;7703:16;7682:37;;7609:117;;;;:::o;7732:169::-;7776:6;7809:51;7857:1;7853:6;7845:5;7842:1;7838:13;7809:51;:::i;:::-;7805:56;7890:4;7884;7880:15;7870:25;;7783:118;7732:169;;;;:::o;7906:295::-;7982:4;8128:29;8153:3;8147:4;8128:29;:::i;:::-;8120:37;;8190:3;8187:1;8183:11;8177:4;8174:21;8166:29;;7906:295;;;;:::o;8206:1395::-;8323:37;8356:3;8323:37;:::i;:::-;8425:18;8417:6;8414:30;8411:56;;;8447:18;;:::i;:::-;8411:56;8491:38;8523:4;8517:11;8491:38;:::i;:::-;8576:67;8636:6;8628;8622:4;8576:67;:::i;:::-;8670:1;8694:4;8681:17;;8726:2;8718:6;8715:14;8743:1;8738:618;;;;9400:1;9417:6;9414:77;;;9466:9;9461:3;9457:19;9451:26;9442:35;;9414:77;9517:67;9577:6;9570:5;9517:67;:::i;:::-;9511:4;9504:81;9373:222;8708:887;;8738:618;8790:4;8786:9;8778:6;8774:22;8824:37;8856:4;8824:37;:::i;:::-;8883:1;8897:208;8911:7;8908:1;8905:14;8897:208;;;8990:9;8985:3;8981:19;8975:26;8967:6;8960:42;9041:1;9033:6;9029:14;9019:24;;9088:2;9077:9;9073:18;9060:31;;8934:4;8931:1;8927:12;8922:17;;8897:208;;;9133:6;9124:7;9121:19;9118:179;;;9191:9;9186:3;9182:19;9176:26;9234:48;9276:4;9268:6;9264:17;9253:9;9234:48;:::i;:::-;9226:6;9219:64;9141:156;9118:179;9343:1;9339;9331:6;9327:14;9323:22;9317:4;9310:36;8745:611;;;8708:887;;8298:1303;;;8206:1395;;:::o;9607:118::-;9694:24;9712:5;9694:24;:::i;:::-;9689:3;9682:37;9607:118;;:::o;9731:222::-;9824:4;9862:2;9851:9;9847:18;9839:26;;9875:71;9943:1;9932:9;9928:17;9919:6;9875:71;:::i;:::-;9731:222;;;;:::o;9959:169::-;10043:11;10077:6;10072:3;10065:19;10117:4;10112:3;10108:14;10093:29;;9959:169;;;;:::o;10134:::-;10274:21;10270:1;10262:6;10258:14;10251:45;10134:169;:::o;10309:366::-;10451:3;10472:67;10536:2;10531:3;10472:67;:::i;:::-;10465:74;;10548:93;10637:3;10548:93;:::i;:::-;10666:2;10661:3;10657:12;10650:19;;10309:366;;;:::o;10681:419::-;10847:4;10885:2;10874:9;10870:18;10862:26;;10934:9;10928:4;10924:20;10920:1;10909:9;10905:17;10898:47;10962:131;11088:4;10962:131;:::i;:::-;10954:139;;10681:419;;;:::o;11106:221::-;11246:34;11242:1;11234:6;11230:14;11223:58;11315:4;11310:2;11302:6;11298:15;11291:29;11106:221;:::o;11333:366::-;11475:3;11496:67;11560:2;11555:3;11496:67;:::i;:::-;11489:74;;11572:93;11661:3;11572:93;:::i;:::-;11690:2;11685:3;11681:12;11674:19;;11333:366;;;:::o;11705:419::-;11871:4;11909:2;11898:9;11894:18;11886:26;;11958:9;11952:4;11948:20;11944:1;11933:9;11929:17;11922:47;11986:131;12112:4;11986:131;:::i;:::-;11978:139;;11705:419;;;:::o;12130:179::-;12270:31;12266:1;12258:6;12254:14;12247:55;12130:179;:::o;12315:366::-;12457:3;12478:67;12542:2;12537:3;12478:67;:::i;:::-;12471:74;;12554:93;12643:3;12554:93;:::i;:::-;12672:2;12667:3;12663:12;12656:19;;12315:366;;;:::o;12687:419::-;12853:4;12891:2;12880:9;12876:18;12868:26;;12940:9;12934:4;12930:20;12926:1;12915:9;12911:17;12904:47;12968:131;13094:4;12968:131;:::i;:::-;12960:139;;12687:419;;;:::o;13112:191::-;13152:3;13171:20;13189:1;13171:20;:::i;:::-;13166:25;;13205:20;13223:1;13205:20;:::i;:::-;13200:25;;13248:1;13245;13241:9;13234:16;;13269:3;13266:1;13263:10;13260:36;;;13276:18;;:::i;:::-;13260:36;13112:191;;;;:::o;13309:170::-;13449:22;13445:1;13437:6;13433:14;13426:46;13309:170;:::o;13485:366::-;13627:3;13648:67;13712:2;13707:3;13648:67;:::i;:::-;13641:74;;13724:93;13813:3;13724:93;:::i;:::-;13842:2;13837:3;13833:12;13826:19;;13485:366;;;:::o;13857:419::-;14023:4;14061:2;14050:9;14046:18;14038:26;;14110:9;14104:4;14100:20;14096:1;14085:9;14081:17;14074:47;14138:131;14264:4;14138:131;:::i;:::-;14130:139;;13857:419;;;:::o;14282:180::-;14330:77;14327:1;14320:88;14427:4;14424:1;14417:15;14451:4;14448:1;14441:15;14468:185;14508:1;14525:20;14543:1;14525:20;:::i;:::-;14520:25;;14559:20;14577:1;14559:20;:::i;:::-;14554:25;;14598:1;14588:35;;14603:18;;:::i;:::-;14588:35;14645:1;14642;14638:9;14633:14;;14468:185;;;;:::o;14659:194::-;14699:4;14719:20;14737:1;14719:20;:::i;:::-;14714:25;;14753:20;14771:1;14753:20;:::i;:::-;14748:25;;14797:1;14794;14790:9;14782:17;;14821:1;14815:4;14812:11;14809:37;;;14826:18;;:::i;:::-;14809:37;14659:194;;;;:::o;14859:118::-;14946:24;14964:5;14946:24;:::i;:::-;14941:3;14934:37;14859:118;;:::o;14983:442::-;15132:4;15170:2;15159:9;15155:18;15147:26;;15183:71;15251:1;15240:9;15236:17;15227:6;15183:71;:::i;:::-;15264:72;15332:2;15321:9;15317:18;15308:6;15264:72;:::i;:::-;15346;15414:2;15403:9;15399:18;15390:6;15346:72;:::i;:::-;14983:442;;;;;;:::o;15431:222::-;15524:4;15562:2;15551:9;15547:18;15539:26;;15575:71;15643:1;15632:9;15628:17;15619:6;15575:71;:::i;:::-;15431:222;;;;:::o;174:5029:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3973,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4591,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3831,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3966,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3991,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4396,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4137,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1318": {
									"entryPoint": 5054,
									"id": 1318,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 6040,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addExemptionToTaxes_1386": {
									"entryPoint": 2988,
									"id": 1386,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToBlacklist_1106": {
									"entryPoint": 2152,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhiteList_1092": {
									"entryPoint": 2248,
									"id": 1092,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3432,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1909,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2901,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cooldownTime_955": {
									"entryPoint": 3317,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2144,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@disableTax_1070": {
									"entryPoint": 3361,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableBlackListing_1050": {
									"entryPoint": 3580,
									"id": 1050,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableTax_1060": {
									"entryPoint": 2749,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@enableWhiteListing_1040": {
									"entryPoint": 2099,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractDetials_1197": {
									"entryPoint": 3397,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@getMaxTxAmount_1178": {
									"entryPoint": 2792,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSlippageFees_1345": {
									"entryPoint": 3130,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxes_1353": {
									"entryPoint": 2135,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isBlacklisted_1146": {
									"entryPoint": 3749,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhiteListed_1158": {
									"entryPoint": 2801,
									"id": 1158,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxTxAmount_952": {
									"entryPoint": 3084,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1765,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3090,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeExemptionFromTaxes_1400": {
									"entryPoint": 1958,
									"id": 1400,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromBlacklist_1120": {
									"entryPoint": 2654,
									"id": 1120,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromWhiteList_1134": {
									"entryPoint": 1670,
									"id": 1134,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_1030": {
									"entryPoint": 2970,
									"id": 1030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4377,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCooldownTime_1209": {
									"entryPoint": 2883,
									"id": 1209,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxTxAmount_1170": {
									"entryPoint": 3562,
									"id": 1170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSlippageFees_1372": {
									"entryPoint": 2482,
									"id": 1372,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxes_1337": {
									"entryPoint": 2568,
									"id": 1337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@slippageFees_961": {
									"entryPoint": 2786,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 3139,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxAddress_969": {
									"entryPoint": 3323,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxFees_958": {
									"entryPoint": 1943,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1949,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2053,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3617,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3283,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7925,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca": {
									"entryPoint": 8224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f": {
									"entryPoint": 7978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d": {
									"entryPoint": 8424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16174:7",
										"nodeType": "YulBlock",
										"src": "0:16174:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1235:40:7",
													"nodeType": "YulBlock",
													"src": "1235:40:7",
													"statements": [
														{
															"nativeSrc": "1246:22:7",
															"nodeType": "YulAssignment",
															"src": "1246:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1262:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1262:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1256:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1256:5:7"
																},
																"nativeSrc": "1256:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1256:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1246:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1176:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1218:5:7",
														"nodeType": "YulTypedName",
														"src": "1218:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1228:6:7",
														"nodeType": "YulTypedName",
														"src": "1228:6:7",
														"type": ""
													}
												],
												"src": "1176:99:7"
											},
											{
												"body": {
													"nativeSrc": "1377:73:7",
													"nodeType": "YulBlock",
													"src": "1377:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1394:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1387:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:7"
																},
																"nativeSrc": "1387:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1387:19:7"
															},
															"nativeSrc": "1387:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1387:19:7"
														},
														{
															"nativeSrc": "1415:29:7",
															"nodeType": "YulAssignment",
															"src": "1415:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1434:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1434:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1439:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1430:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1430:3:7"
																},
																"nativeSrc": "1430:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1430:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1415:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1415:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1281:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1349:3:7",
														"nodeType": "YulTypedName",
														"src": "1349:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1354:6:7",
														"nodeType": "YulTypedName",
														"src": "1354:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1365:11:7",
														"nodeType": "YulTypedName",
														"src": "1365:11:7",
														"type": ""
													}
												],
												"src": "1281:169:7"
											},
											{
												"body": {
													"nativeSrc": "1518:77:7",
													"nodeType": "YulBlock",
													"src": "1518:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1535:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1535:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1540:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1540:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1545:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1545:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1529:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1529:5:7"
																},
																"nativeSrc": "1529:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1529:23:7"
															},
															"nativeSrc": "1529:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1529:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1572:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1572:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1577:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1568:3:7"
																		},
																		"nativeSrc": "1568:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1568:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1586:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1586:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1561:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:7"
																},
																"nativeSrc": "1561:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1561:27:7"
															},
															"nativeSrc": "1561:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1561:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1456:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1500:3:7",
														"nodeType": "YulTypedName",
														"src": "1500:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1505:3:7",
														"nodeType": "YulTypedName",
														"src": "1505:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1510:6:7",
														"nodeType": "YulTypedName",
														"src": "1510:6:7",
														"type": ""
													}
												],
												"src": "1456:139:7"
											},
											{
												"body": {
													"nativeSrc": "1649:54:7",
													"nodeType": "YulBlock",
													"src": "1649:54:7",
													"statements": [
														{
															"nativeSrc": "1659:38:7",
															"nodeType": "YulAssignment",
															"src": "1659:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1684:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1684:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:7"
																		},
																		"nativeSrc": "1673:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1693:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1693:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1689:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:7"
																		},
																		"nativeSrc": "1689:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:7"
																},
																"nativeSrc": "1669:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1669:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1659:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1601:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1632:5:7",
														"nodeType": "YulTypedName",
														"src": "1632:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1642:6:7",
														"nodeType": "YulTypedName",
														"src": "1642:6:7",
														"type": ""
													}
												],
												"src": "1601:102:7"
											},
											{
												"body": {
													"nativeSrc": "1801:285:7",
													"nodeType": "YulBlock",
													"src": "1801:285:7",
													"statements": [
														{
															"nativeSrc": "1811:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1811:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1858:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1858:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1825:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1825:32:7"
																},
																"nativeSrc": "1825:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1825:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1815:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1815:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1873:78:7",
															"nodeType": "YulAssignment",
															"src": "1873:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1939:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1939:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1944:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1944:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1880:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1880:58:7"
																},
																"nativeSrc": "1880:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1880:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1999:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1999:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2006:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2006:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:7"
																		},
																		"nativeSrc": "1995:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2013:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2013:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2018:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2018:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1960:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1960:34:7"
																},
																"nativeSrc": "1960:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1960:65:7"
															},
															"nativeSrc": "1960:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:7"
														},
														{
															"nativeSrc": "2034:46:7",
															"nodeType": "YulAssignment",
															"src": "2034:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2045:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2045:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2072:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2072:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2050:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "2050:21:7"
																		},
																		"nativeSrc": "2050:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2050:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2041:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:7"
																},
																"nativeSrc": "2041:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2041:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2034:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2034:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1709:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1782:5:7",
														"nodeType": "YulTypedName",
														"src": "1782:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1789:3:7",
														"nodeType": "YulTypedName",
														"src": "1789:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1797:3:7",
														"nodeType": "YulTypedName",
														"src": "1797:3:7",
														"type": ""
													}
												],
												"src": "1709:377:7"
											},
											{
												"body": {
													"nativeSrc": "2210:195:7",
													"nodeType": "YulBlock",
													"src": "2210:195:7",
													"statements": [
														{
															"nativeSrc": "2220:26:7",
															"nodeType": "YulAssignment",
															"src": "2220:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2232:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2232:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2243:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2228:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:7"
																},
																"nativeSrc": "2228:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2228:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2220:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2220:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2267:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2267:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2278:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2278:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2263:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:7"
																		},
																		"nativeSrc": "2263:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2286:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2286:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2282:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:7"
																		},
																		"nativeSrc": "2282:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2282:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:7"
																},
																"nativeSrc": "2256:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2256:47:7"
															},
															"nativeSrc": "2256:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2256:47:7"
														},
														{
															"nativeSrc": "2312:86:7",
															"nodeType": "YulAssignment",
															"src": "2312:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2384:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2384:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2393:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2393:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2320:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "2320:63:7"
																},
																"nativeSrc": "2320:78:7",
																"nodeType": "YulFunctionCall",
																"src": "2320:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2312:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2092:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2182:9:7",
														"nodeType": "YulTypedName",
														"src": "2182:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2194:6:7",
														"nodeType": "YulTypedName",
														"src": "2194:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2205:4:7",
														"nodeType": "YulTypedName",
														"src": "2205:4:7",
														"type": ""
													}
												],
												"src": "2092:313:7"
											},
											{
												"body": {
													"nativeSrc": "2456:32:7",
													"nodeType": "YulBlock",
													"src": "2456:32:7",
													"statements": [
														{
															"nativeSrc": "2466:16:7",
															"nodeType": "YulAssignment",
															"src": "2466:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2477:5:7",
																"nodeType": "YulIdentifier",
																"src": "2477:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2466:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2466:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2411:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2438:5:7",
														"nodeType": "YulTypedName",
														"src": "2438:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2448:7:7",
														"nodeType": "YulTypedName",
														"src": "2448:7:7",
														"type": ""
													}
												],
												"src": "2411:77:7"
											},
											{
												"body": {
													"nativeSrc": "2537:79:7",
													"nodeType": "YulBlock",
													"src": "2537:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2594:16:7",
																"nodeType": "YulBlock",
																"src": "2594:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2603:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2603:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2606:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2596:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2596:6:7"
																			},
																			"nativeSrc": "2596:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2596:12:7"
																		},
																		"nativeSrc": "2596:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2560:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2560:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2585:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2585:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2567:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2567:17:7"
																				},
																				"nativeSrc": "2567:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2567:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2557:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:7"
																		},
																		"nativeSrc": "2557:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:7"
																},
																"nativeSrc": "2550:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2550:43:7"
															},
															"nativeSrc": "2547:63:7",
															"nodeType": "YulIf",
															"src": "2547:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2494:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2530:5:7",
														"nodeType": "YulTypedName",
														"src": "2530:5:7",
														"type": ""
													}
												],
												"src": "2494:122:7"
											},
											{
												"body": {
													"nativeSrc": "2674:87:7",
													"nodeType": "YulBlock",
													"src": "2674:87:7",
													"statements": [
														{
															"nativeSrc": "2684:29:7",
															"nodeType": "YulAssignment",
															"src": "2684:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2706:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2693:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2693:12:7"
																},
																"nativeSrc": "2693:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2693:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2684:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2684:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2749:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2749:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2722:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2722:26:7"
																},
																"nativeSrc": "2722:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2722:33:7"
															},
															"nativeSrc": "2722:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2722:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2622:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2652:6:7",
														"nodeType": "YulTypedName",
														"src": "2652:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2660:3:7",
														"nodeType": "YulTypedName",
														"src": "2660:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2668:5:7",
														"nodeType": "YulTypedName",
														"src": "2668:5:7",
														"type": ""
													}
												],
												"src": "2622:139:7"
											},
											{
												"body": {
													"nativeSrc": "2850:391:7",
													"nodeType": "YulBlock",
													"src": "2850:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2896:83:7",
																"nodeType": "YulBlock",
																"src": "2896:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2898:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2898:77:7"
																			},
																			"nativeSrc": "2898:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2898:79:7"
																		},
																		"nativeSrc": "2898:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2898:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2871:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2871:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2867:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:7"
																		},
																		"nativeSrc": "2867:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2892:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2863:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:7"
																},
																"nativeSrc": "2863:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2863:32:7"
															},
															"nativeSrc": "2860:119:7",
															"nodeType": "YulIf",
															"src": "2860:119:7"
														},
														{
															"nativeSrc": "2989:117:7",
															"nodeType": "YulBlock",
															"src": "2989:117:7",
															"statements": [
																{
																	"nativeSrc": "3004:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3004:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3018:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3008:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3008:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3033:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3033:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3068:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3068:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3079:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3079:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3064:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3064:3:7"
																				},
																				"nativeSrc": "3064:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3064:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3088:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3088:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3043:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3043:20:7"
																		},
																		"nativeSrc": "3043:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3033:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3033:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3116:118:7",
															"nodeType": "YulBlock",
															"src": "3116:118:7",
															"statements": [
																{
																	"nativeSrc": "3131:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3131:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3145:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3135:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3135:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3161:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3161:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3196:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3196:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3207:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3207:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3192:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3192:3:7"
																				},
																				"nativeSrc": "3192:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3192:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3216:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3216:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3171:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3171:20:7"
																		},
																		"nativeSrc": "3171:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3161:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2767:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2812:9:7",
														"nodeType": "YulTypedName",
														"src": "2812:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2823:7:7",
														"nodeType": "YulTypedName",
														"src": "2823:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2835:6:7",
														"nodeType": "YulTypedName",
														"src": "2835:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2843:6:7",
														"nodeType": "YulTypedName",
														"src": "2843:6:7",
														"type": ""
													}
												],
												"src": "2767:474:7"
											},
											{
												"body": {
													"nativeSrc": "3289:48:7",
													"nodeType": "YulBlock",
													"src": "3289:48:7",
													"statements": [
														{
															"nativeSrc": "3299:32:7",
															"nodeType": "YulAssignment",
															"src": "3299:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3324:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3324:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3317:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3317:6:7"
																		},
																		"nativeSrc": "3317:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3317:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:7"
																},
																"nativeSrc": "3310:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3310:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3299:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3299:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3247:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3271:5:7",
														"nodeType": "YulTypedName",
														"src": "3271:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3281:7:7",
														"nodeType": "YulTypedName",
														"src": "3281:7:7",
														"type": ""
													}
												],
												"src": "3247:90:7"
											},
											{
												"body": {
													"nativeSrc": "3402:50:7",
													"nodeType": "YulBlock",
													"src": "3402:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3419:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3419:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3439:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3439:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3424:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3424:14:7"
																		},
																		"nativeSrc": "3424:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3424:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3412:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:7"
																},
																"nativeSrc": "3412:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3412:34:7"
															},
															"nativeSrc": "3412:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3412:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3343:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3390:5:7",
														"nodeType": "YulTypedName",
														"src": "3390:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3397:3:7",
														"nodeType": "YulTypedName",
														"src": "3397:3:7",
														"type": ""
													}
												],
												"src": "3343:109:7"
											},
											{
												"body": {
													"nativeSrc": "3550:118:7",
													"nodeType": "YulBlock",
													"src": "3550:118:7",
													"statements": [
														{
															"nativeSrc": "3560:26:7",
															"nodeType": "YulAssignment",
															"src": "3560:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3572:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3572:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3583:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3583:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3568:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:7"
																},
																"nativeSrc": "3568:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3568:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3560:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3634:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3658:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3658:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3643:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:7"
																		},
																		"nativeSrc": "3643:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3643:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3596:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3596:37:7"
																},
																"nativeSrc": "3596:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3596:65:7"
															},
															"nativeSrc": "3596:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3596:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3458:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3522:9:7",
														"nodeType": "YulTypedName",
														"src": "3522:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3534:6:7",
														"nodeType": "YulTypedName",
														"src": "3534:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3545:4:7",
														"nodeType": "YulTypedName",
														"src": "3545:4:7",
														"type": ""
													}
												],
												"src": "3458:210:7"
											},
											{
												"body": {
													"nativeSrc": "3739:53:7",
													"nodeType": "YulBlock",
													"src": "3739:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:7"
																		},
																		"nativeSrc": "3761:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:7"
																},
																"nativeSrc": "3749:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:7"
															},
															"nativeSrc": "3749:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:7",
														"nodeType": "YulTypedName",
														"src": "3727:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:7",
														"nodeType": "YulTypedName",
														"src": "3734:3:7",
														"type": ""
													}
												],
												"src": "3674:118:7"
											},
											{
												"body": {
													"nativeSrc": "3896:124:7",
													"nodeType": "YulBlock",
													"src": "3896:124:7",
													"statements": [
														{
															"nativeSrc": "3906:26:7",
															"nodeType": "YulAssignment",
															"src": "3906:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:7"
																},
																"nativeSrc": "3914:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:7"
																		},
																		"nativeSrc": "3995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:7"
																},
																"nativeSrc": "3942:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:7"
															},
															"nativeSrc": "3942:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:7",
														"nodeType": "YulTypedName",
														"src": "3868:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:7",
														"nodeType": "YulTypedName",
														"src": "3880:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:7",
														"nodeType": "YulTypedName",
														"src": "3891:4:7",
														"type": ""
													}
												],
												"src": "3798:222:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5147:263:7",
													"nodeType": "YulBlock",
													"src": "5147:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:7",
																"nodeType": "YulBlock",
																"src": "5193:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:7"
																			},
																			"nativeSrc": "5195:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:7"
																		},
																		"nativeSrc": "5195:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:7"
																		},
																		"nativeSrc": "5164:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:7"
																},
																"nativeSrc": "5160:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:7"
															},
															"nativeSrc": "5157:119:7",
															"nodeType": "YulIf",
															"src": "5157:119:7"
														},
														{
															"nativeSrc": "5286:117:7",
															"nodeType": "YulBlock",
															"src": "5286:117:7",
															"statements": [
																{
																	"nativeSrc": "5301:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:7"
																				},
																				"nativeSrc": "5361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:7"
																		},
																		"nativeSrc": "5340:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:7",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:7",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:7",
														"nodeType": "YulTypedName",
														"src": "5140:6:7",
														"type": ""
													}
												],
												"src": "5081:329:7"
											},
											{
												"body": {
													"nativeSrc": "5481:53:7",
													"nodeType": "YulBlock",
													"src": "5481:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:7"
																		},
																		"nativeSrc": "5503:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:7"
																},
																"nativeSrc": "5491:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:7"
															},
															"nativeSrc": "5491:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:7",
														"nodeType": "YulTypedName",
														"src": "5469:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:7",
														"nodeType": "YulTypedName",
														"src": "5476:3:7",
														"type": ""
													}
												],
												"src": "5416:118:7"
											},
											{
												"body": {
													"nativeSrc": "5638:124:7",
													"nodeType": "YulBlock",
													"src": "5638:124:7",
													"statements": [
														{
															"nativeSrc": "5648:26:7",
															"nodeType": "YulAssignment",
															"src": "5648:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:7"
																},
																"nativeSrc": "5656:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:7"
																		},
																		"nativeSrc": "5737:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:7"
																},
																"nativeSrc": "5684:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:7"
															},
															"nativeSrc": "5684:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:7",
														"nodeType": "YulTypedName",
														"src": "5610:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:7",
														"nodeType": "YulTypedName",
														"src": "5622:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:7",
														"nodeType": "YulTypedName",
														"src": "5633:4:7",
														"type": ""
													}
												],
												"src": "5540:222:7"
											},
											{
												"body": {
													"nativeSrc": "5950:371:7",
													"nodeType": "YulBlock",
													"src": "5950:371:7",
													"statements": [
														{
															"nativeSrc": "5960:27:7",
															"nodeType": "YulAssignment",
															"src": "5960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5972:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5972:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5983:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5968:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5968:3:7"
																},
																"nativeSrc": "5968:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5960:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5960:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:7"
																		},
																		"nativeSrc": "6050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5997:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5997:43:7"
																},
																"nativeSrc": "5997:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5997:71:7"
															},
															"nativeSrc": "5997:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5997:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6122:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6122:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6135:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6135:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6146:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6146:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6131:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6131:3:7"
																		},
																		"nativeSrc": "6131:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6131:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6078:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6078:43:7"
																},
																"nativeSrc": "6078:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6078:72:7"
															},
															"nativeSrc": "6078:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6078:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6204:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6204:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6217:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6228:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6228:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6213:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6213:3:7"
																		},
																		"nativeSrc": "6213:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6160:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:43:7"
																},
																"nativeSrc": "6160:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6160:72:7"
															},
															"nativeSrc": "6160:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6160:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6286:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6286:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6299:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6299:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6310:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6310:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6295:3:7"
																		},
																		"nativeSrc": "6295:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6295:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6242:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6242:43:7"
																},
																"nativeSrc": "6242:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6242:72:7"
															},
															"nativeSrc": "6242:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6242:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5768:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5898:9:7",
														"nodeType": "YulTypedName",
														"src": "5898:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5910:6:7",
														"nodeType": "YulTypedName",
														"src": "5910:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5918:6:7",
														"nodeType": "YulTypedName",
														"src": "5918:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5926:6:7",
														"nodeType": "YulTypedName",
														"src": "5926:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5934:6:7",
														"nodeType": "YulTypedName",
														"src": "5934:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5945:4:7",
														"nodeType": "YulTypedName",
														"src": "5945:4:7",
														"type": ""
													}
												],
												"src": "5768:553:7"
											},
											{
												"body": {
													"nativeSrc": "6410:391:7",
													"nodeType": "YulBlock",
													"src": "6410:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6456:83:7",
																"nodeType": "YulBlock",
																"src": "6456:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6458:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6458:77:7"
																			},
																			"nativeSrc": "6458:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6458:79:7"
																		},
																		"nativeSrc": "6458:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6458:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6431:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6431:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6440:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6440:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6427:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6427:3:7"
																		},
																		"nativeSrc": "6427:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6427:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6452:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6452:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6423:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6423:3:7"
																},
																"nativeSrc": "6423:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6423:32:7"
															},
															"nativeSrc": "6420:119:7",
															"nodeType": "YulIf",
															"src": "6420:119:7"
														},
														{
															"nativeSrc": "6549:117:7",
															"nodeType": "YulBlock",
															"src": "6549:117:7",
															"statements": [
																{
																	"nativeSrc": "6564:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6564:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6578:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6578:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6568:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6568:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6593:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6593:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6628:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6628:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6639:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6639:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6624:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6624:3:7"
																				},
																				"nativeSrc": "6624:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6624:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6648:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6648:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6603:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6603:20:7"
																		},
																		"nativeSrc": "6603:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6603:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6593:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6593:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6676:118:7",
															"nodeType": "YulBlock",
															"src": "6676:118:7",
															"statements": [
																{
																	"nativeSrc": "6691:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6691:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6705:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6705:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6695:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6695:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6721:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6721:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6756:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6756:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6767:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6767:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6752:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6752:3:7"
																				},
																				"nativeSrc": "6752:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6752:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6776:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6776:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6731:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6731:20:7"
																		},
																		"nativeSrc": "6731:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6731:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6721:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6721:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6327:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6372:9:7",
														"nodeType": "YulTypedName",
														"src": "6372:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6383:7:7",
														"nodeType": "YulTypedName",
														"src": "6383:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6395:6:7",
														"nodeType": "YulTypedName",
														"src": "6395:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6403:6:7",
														"nodeType": "YulTypedName",
														"src": "6403:6:7",
														"type": ""
													}
												],
												"src": "6327:474:7"
											},
											{
												"body": {
													"nativeSrc": "6835:152:7",
													"nodeType": "YulBlock",
													"src": "6835:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6852:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6855:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6855:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6845:6:7"
																},
																"nativeSrc": "6845:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6845:88:7"
															},
															"nativeSrc": "6845:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6845:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6949:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6949:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6952:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6952:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6942:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6942:6:7"
																},
																"nativeSrc": "6942:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6942:15:7"
															},
															"nativeSrc": "6942:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6942:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6973:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6973:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6976:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6976:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6966:6:7"
																},
																"nativeSrc": "6966:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6966:15:7"
															},
															"nativeSrc": "6966:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6966:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6807:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6807:180:7"
											},
											{
												"body": {
													"nativeSrc": "7044:269:7",
													"nodeType": "YulBlock",
													"src": "7044:269:7",
													"statements": [
														{
															"nativeSrc": "7054:22:7",
															"nodeType": "YulAssignment",
															"src": "7054:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7068:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7068:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7074:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:7"
																},
																"nativeSrc": "7064:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7064:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7054:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7054:6:7"
																}
															]
														},
														{
															"nativeSrc": "7085:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7085:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7115:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7115:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7111:3:7"
																},
																"nativeSrc": "7111:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7111:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7089:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7089:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7162:51:7",
																"nodeType": "YulBlock",
																"src": "7162:51:7",
																"statements": [
																	{
																		"nativeSrc": "7176:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7176:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7190:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7190:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7198:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7198:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7186:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7186:3:7"
																			},
																			"nativeSrc": "7186:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7186:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7176:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7176:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7142:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7142:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:7"
																},
																"nativeSrc": "7135:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7135:26:7"
															},
															"nativeSrc": "7132:81:7",
															"nodeType": "YulIf",
															"src": "7132:81:7"
														},
														{
															"body": {
																"nativeSrc": "7265:42:7",
																"nodeType": "YulBlock",
																"src": "7265:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7279:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7279:16:7"
																			},
																			"nativeSrc": "7279:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7279:18:7"
																		},
																		"nativeSrc": "7279:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7279:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7229:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7229:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7252:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7252:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7260:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7260:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7249:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7249:2:7"
																		},
																		"nativeSrc": "7249:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7226:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7226:2:7"
																},
																"nativeSrc": "7226:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7226:38:7"
															},
															"nativeSrc": "7223:84:7",
															"nodeType": "YulIf",
															"src": "7223:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6993:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7028:4:7",
														"nodeType": "YulTypedName",
														"src": "7028:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7037:6:7",
														"nodeType": "YulTypedName",
														"src": "7037:6:7",
														"type": ""
													}
												],
												"src": "6993:320:7"
											},
											{
												"body": {
													"nativeSrc": "7425:123:7",
													"nodeType": "YulBlock",
													"src": "7425:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7447:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7447:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7455:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7455:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7443:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7443:3:7"
																		},
																		"nativeSrc": "7443:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7443:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c6973746564206163636f756e74732063616e6e6f742062652077",
																		"kind": "string",
																		"nativeSrc": "7459:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7459:34:7",
																		"type": "",
																		"value": "Blacklisted accounts cannot be w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:7"
																},
																"nativeSrc": "7436:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7436:58:7"
															},
															"nativeSrc": "7436:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7436:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7515:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7515:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7523:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7523:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:7"
																		},
																		"nativeSrc": "7511:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7511:15:7"
																	},
																	{
																		"hexValue": "686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "7528:12:7",
																		"nodeType": "YulLiteral",
																		"src": "7528:12:7",
																		"type": "",
																		"value": "hitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7504:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:7"
																},
																"nativeSrc": "7504:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7504:37:7"
															},
															"nativeSrc": "7504:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7504:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd",
												"nativeSrc": "7319:229:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7417:6:7",
														"nodeType": "YulTypedName",
														"src": "7417:6:7",
														"type": ""
													}
												],
												"src": "7319:229:7"
											},
											{
												"body": {
													"nativeSrc": "7700:220:7",
													"nodeType": "YulBlock",
													"src": "7700:220:7",
													"statements": [
														{
															"nativeSrc": "7710:74:7",
															"nodeType": "YulAssignment",
															"src": "7710:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7776:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7776:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7781:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7781:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7717:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7717:58:7"
																},
																"nativeSrc": "7717:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7717:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7710:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7882:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7882:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd",
																	"nativeSrc": "7793:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7793:88:7"
																},
																"nativeSrc": "7793:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7793:93:7"
															},
															"nativeSrc": "7793:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7793:93:7"
														},
														{
															"nativeSrc": "7895:19:7",
															"nodeType": "YulAssignment",
															"src": "7895:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7906:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7906:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:7"
																},
																"nativeSrc": "7902:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7902:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7895:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7895:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7554:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7688:3:7",
														"nodeType": "YulTypedName",
														"src": "7688:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7696:3:7",
														"nodeType": "YulTypedName",
														"src": "7696:3:7",
														"type": ""
													}
												],
												"src": "7554:366:7"
											},
											{
												"body": {
													"nativeSrc": "8097:248:7",
													"nodeType": "YulBlock",
													"src": "8097:248:7",
													"statements": [
														{
															"nativeSrc": "8107:26:7",
															"nodeType": "YulAssignment",
															"src": "8107:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8119:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8119:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8130:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8130:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8115:3:7"
																},
																"nativeSrc": "8115:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8115:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8107:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8107:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8154:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8154:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8165:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8165:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:7"
																		},
																		"nativeSrc": "8150:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8150:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8173:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8173:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8179:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8179:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8169:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:7"
																		},
																		"nativeSrc": "8169:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8143:6:7"
																},
																"nativeSrc": "8143:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8143:47:7"
															},
															"nativeSrc": "8143:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8143:47:7"
														},
														{
															"nativeSrc": "8199:139:7",
															"nodeType": "YulAssignment",
															"src": "8199:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8207:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8207:124:7"
																},
																"nativeSrc": "8207:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8207:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7926:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8077:9:7",
														"nodeType": "YulTypedName",
														"src": "8077:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8092:4:7",
														"nodeType": "YulTypedName",
														"src": "8092:4:7",
														"type": ""
													}
												],
												"src": "7926:419:7"
											},
											{
												"body": {
													"nativeSrc": "8457:119:7",
													"nodeType": "YulBlock",
													"src": "8457:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8479:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8479:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8487:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8487:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8475:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8475:3:7"
																		},
																		"nativeSrc": "8475:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8475:14:7"
																	},
																	{
																		"hexValue": "536c69707061676520666565732063616e6e6f74206265206869676865722074",
																		"kind": "string",
																		"nativeSrc": "8491:34:7",
																		"nodeType": "YulLiteral",
																		"src": "8491:34:7",
																		"type": "",
																		"value": "Slippage fees cannot be higher t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8468:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8468:6:7"
																},
																"nativeSrc": "8468:58:7",
																"nodeType": "YulFunctionCall",
																"src": "8468:58:7"
															},
															"nativeSrc": "8468:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "8468:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8547:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8555:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8555:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8543:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:7"
																		},
																		"nativeSrc": "8543:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:15:7"
																	},
																	{
																		"hexValue": "68616e203525",
																		"kind": "string",
																		"nativeSrc": "8560:8:7",
																		"nodeType": "YulLiteral",
																		"src": "8560:8:7",
																		"type": "",
																		"value": "han 5%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:7"
																},
																"nativeSrc": "8536:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8536:33:7"
															},
															"nativeSrc": "8536:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8536:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c",
												"nativeSrc": "8351:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8449:6:7",
														"nodeType": "YulTypedName",
														"src": "8449:6:7",
														"type": ""
													}
												],
												"src": "8351:225:7"
											},
											{
												"body": {
													"nativeSrc": "8728:220:7",
													"nodeType": "YulBlock",
													"src": "8728:220:7",
													"statements": [
														{
															"nativeSrc": "8738:74:7",
															"nodeType": "YulAssignment",
															"src": "8738:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8804:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8804:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8809:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8809:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8745:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8745:58:7"
																},
																"nativeSrc": "8745:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8745:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8910:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8910:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c",
																	"nativeSrc": "8821:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8821:88:7"
																},
																"nativeSrc": "8821:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8821:93:7"
															},
															"nativeSrc": "8821:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8821:93:7"
														},
														{
															"nativeSrc": "8923:19:7",
															"nodeType": "YulAssignment",
															"src": "8923:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8934:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8934:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8939:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8939:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8930:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:7"
																},
																"nativeSrc": "8930:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8930:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8923:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8582:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8716:3:7",
														"nodeType": "YulTypedName",
														"src": "8716:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8724:3:7",
														"nodeType": "YulTypedName",
														"src": "8724:3:7",
														"type": ""
													}
												],
												"src": "8582:366:7"
											},
											{
												"body": {
													"nativeSrc": "9125:248:7",
													"nodeType": "YulBlock",
													"src": "9125:248:7",
													"statements": [
														{
															"nativeSrc": "9135:26:7",
															"nodeType": "YulAssignment",
															"src": "9135:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9147:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9147:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9158:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9143:3:7"
																},
																"nativeSrc": "9143:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9143:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9135:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9135:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9182:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9182:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9193:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9193:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9178:3:7"
																		},
																		"nativeSrc": "9178:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9178:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9201:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9201:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9207:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:7"
																		},
																		"nativeSrc": "9197:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9197:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9171:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:7"
																},
																"nativeSrc": "9171:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9171:47:7"
															},
															"nativeSrc": "9171:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9171:47:7"
														},
														{
															"nativeSrc": "9227:139:7",
															"nodeType": "YulAssignment",
															"src": "9227:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9361:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9361:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9235:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9235:124:7"
																},
																"nativeSrc": "9235:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9235:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9227:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9227:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8954:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9105:9:7",
														"nodeType": "YulTypedName",
														"src": "9105:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9120:4:7",
														"nodeType": "YulTypedName",
														"src": "9120:4:7",
														"type": ""
													}
												],
												"src": "8954:419:7"
											},
											{
												"body": {
													"nativeSrc": "9485:114:7",
													"nodeType": "YulBlock",
													"src": "9485:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9507:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9507:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9515:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9515:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9503:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9503:3:7"
																		},
																		"nativeSrc": "9503:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9503:14:7"
																	},
																	{
																		"hexValue": "546178206665652063616e6e6f7420626520686967686572207468616e203130",
																		"kind": "string",
																		"nativeSrc": "9519:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9519:34:7",
																		"type": "",
																		"value": "Tax fee cannot be higher than 10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9496:6:7"
																},
																"nativeSrc": "9496:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9496:58:7"
															},
															"nativeSrc": "9496:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9496:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9575:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9575:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9583:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9583:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9571:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9571:3:7"
																		},
																		"nativeSrc": "9571:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9571:15:7"
																	},
																	{
																		"hexValue": "25",
																		"kind": "string",
																		"nativeSrc": "9588:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9588:3:7",
																		"type": "",
																		"value": "%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9564:6:7"
																},
																"nativeSrc": "9564:28:7",
																"nodeType": "YulFunctionCall",
																"src": "9564:28:7"
															},
															"nativeSrc": "9564:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "9564:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8",
												"nativeSrc": "9379:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9477:6:7",
														"nodeType": "YulTypedName",
														"src": "9477:6:7",
														"type": ""
													}
												],
												"src": "9379:220:7"
											},
											{
												"body": {
													"nativeSrc": "9751:220:7",
													"nodeType": "YulBlock",
													"src": "9751:220:7",
													"statements": [
														{
															"nativeSrc": "9761:74:7",
															"nodeType": "YulAssignment",
															"src": "9761:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9827:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9827:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9832:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9768:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9768:58:7"
																},
																"nativeSrc": "9768:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9768:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9761:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9933:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9933:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8",
																	"nativeSrc": "9844:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9844:88:7"
																},
																"nativeSrc": "9844:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9844:93:7"
															},
															"nativeSrc": "9844:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9844:93:7"
														},
														{
															"nativeSrc": "9946:19:7",
															"nodeType": "YulAssignment",
															"src": "9946:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9962:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9953:3:7"
																},
																"nativeSrc": "9953:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9953:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9946:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9946:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9605:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9739:3:7",
														"nodeType": "YulTypedName",
														"src": "9739:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9747:3:7",
														"nodeType": "YulTypedName",
														"src": "9747:3:7",
														"type": ""
													}
												],
												"src": "9605:366:7"
											},
											{
												"body": {
													"nativeSrc": "10148:248:7",
													"nodeType": "YulBlock",
													"src": "10148:248:7",
													"statements": [
														{
															"nativeSrc": "10158:26:7",
															"nodeType": "YulAssignment",
															"src": "10158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10170:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10170:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10181:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10166:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:7"
																},
																"nativeSrc": "10166:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10158:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10205:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10205:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10201:3:7"
																		},
																		"nativeSrc": "10201:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10201:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10224:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10224:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10230:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10220:3:7"
																		},
																		"nativeSrc": "10220:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10220:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10194:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10194:6:7"
																},
																"nativeSrc": "10194:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10194:47:7"
															},
															"nativeSrc": "10194:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10194:47:7"
														},
														{
															"nativeSrc": "10250:139:7",
															"nodeType": "YulAssignment",
															"src": "10250:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10384:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10384:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10258:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10258:124:7"
																},
																"nativeSrc": "10258:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10258:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10250:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10250:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9977:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10128:9:7",
														"nodeType": "YulTypedName",
														"src": "10128:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10143:4:7",
														"nodeType": "YulTypedName",
														"src": "10143:4:7",
														"type": ""
													}
												],
												"src": "9977:419:7"
											},
											{
												"body": {
													"nativeSrc": "10556:288:7",
													"nodeType": "YulBlock",
													"src": "10556:288:7",
													"statements": [
														{
															"nativeSrc": "10566:26:7",
															"nodeType": "YulAssignment",
															"src": "10566:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10578:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10578:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10589:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10589:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10574:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10574:3:7"
																},
																"nativeSrc": "10574:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10574:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10566:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10566:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10646:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10646:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10659:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10659:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10670:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10670:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10655:3:7"
																		},
																		"nativeSrc": "10655:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10655:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10602:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10602:43:7"
																},
																"nativeSrc": "10602:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10602:71:7"
															},
															"nativeSrc": "10602:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10602:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10727:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10727:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10740:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10740:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10736:3:7"
																		},
																		"nativeSrc": "10736:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10736:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10683:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10683:43:7"
																},
																"nativeSrc": "10683:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10683:72:7"
															},
															"nativeSrc": "10683:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10683:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10809:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10809:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10822:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10822:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10833:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10833:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10818:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10818:3:7"
																		},
																		"nativeSrc": "10818:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10818:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10765:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10765:43:7"
																},
																"nativeSrc": "10765:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10765:72:7"
															},
															"nativeSrc": "10765:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10765:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10402:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10512:9:7",
														"nodeType": "YulTypedName",
														"src": "10512:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10524:6:7",
														"nodeType": "YulTypedName",
														"src": "10524:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10532:6:7",
														"nodeType": "YulTypedName",
														"src": "10532:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10540:6:7",
														"nodeType": "YulTypedName",
														"src": "10540:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10551:4:7",
														"nodeType": "YulTypedName",
														"src": "10551:4:7",
														"type": ""
													}
												],
												"src": "10402:442:7"
											},
											{
												"body": {
													"nativeSrc": "10956:63:7",
													"nodeType": "YulBlock",
													"src": "10956:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10978:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10978:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10986:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10986:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10974:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10974:3:7"
																		},
																		"nativeSrc": "10974:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10974:14:7"
																	},
																	{
																		"hexValue": "426c61636b6c69737465642061646472657373",
																		"kind": "string",
																		"nativeSrc": "10990:21:7",
																		"nodeType": "YulLiteral",
																		"src": "10990:21:7",
																		"type": "",
																		"value": "Blacklisted address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10967:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:7"
																},
																"nativeSrc": "10967:45:7",
																"nodeType": "YulFunctionCall",
																"src": "10967:45:7"
															},
															"nativeSrc": "10967:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "10967:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
												"nativeSrc": "10850:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10948:6:7",
														"nodeType": "YulTypedName",
														"src": "10948:6:7",
														"type": ""
													}
												],
												"src": "10850:169:7"
											},
											{
												"body": {
													"nativeSrc": "11171:220:7",
													"nodeType": "YulBlock",
													"src": "11171:220:7",
													"statements": [
														{
															"nativeSrc": "11181:74:7",
															"nodeType": "YulAssignment",
															"src": "11181:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11247:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11247:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11252:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11188:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11188:58:7"
																},
																"nativeSrc": "11188:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11188:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11181:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11353:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11353:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
																	"nativeSrc": "11264:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11264:88:7"
																},
																"nativeSrc": "11264:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11264:93:7"
															},
															"nativeSrc": "11264:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11264:93:7"
														},
														{
															"nativeSrc": "11366:19:7",
															"nodeType": "YulAssignment",
															"src": "11366:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11377:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11377:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11382:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11382:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11373:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11373:3:7"
																},
																"nativeSrc": "11373:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11373:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11366:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11366:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11025:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11159:3:7",
														"nodeType": "YulTypedName",
														"src": "11159:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11167:3:7",
														"nodeType": "YulTypedName",
														"src": "11167:3:7",
														"type": ""
													}
												],
												"src": "11025:366:7"
											},
											{
												"body": {
													"nativeSrc": "11568:248:7",
													"nodeType": "YulBlock",
													"src": "11568:248:7",
													"statements": [
														{
															"nativeSrc": "11578:26:7",
															"nodeType": "YulAssignment",
															"src": "11578:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11590:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11590:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11601:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11601:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11586:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:7"
																},
																"nativeSrc": "11586:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11586:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11578:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11625:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11625:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11636:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11636:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11621:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11621:3:7"
																		},
																		"nativeSrc": "11621:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11621:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11644:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11644:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11650:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11650:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11640:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:7"
																		},
																		"nativeSrc": "11640:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11614:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11614:6:7"
																},
																"nativeSrc": "11614:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11614:47:7"
															},
															"nativeSrc": "11614:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11614:47:7"
														},
														{
															"nativeSrc": "11670:139:7",
															"nodeType": "YulAssignment",
															"src": "11670:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11804:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11678:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11678:124:7"
																},
																"nativeSrc": "11678:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11678:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11670:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11670:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11397:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11548:9:7",
														"nodeType": "YulTypedName",
														"src": "11548:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11563:4:7",
														"nodeType": "YulTypedName",
														"src": "11563:4:7",
														"type": ""
													}
												],
												"src": "11397:419:7"
											},
											{
												"body": {
													"nativeSrc": "11928:115:7",
													"nodeType": "YulBlock",
													"src": "11928:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11950:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11950:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11958:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11958:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11946:3:7"
																		},
																		"nativeSrc": "11946:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11946:14:7"
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "11962:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11962:34:7",
																		"type": "",
																		"value": "Both addresses must be whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11939:6:7"
																},
																"nativeSrc": "11939:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11939:58:7"
															},
															"nativeSrc": "11939:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11939:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12018:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12018:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12026:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12026:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12014:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12014:3:7"
																		},
																		"nativeSrc": "12014:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12014:15:7"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "12031:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12031:4:7",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12007:6:7"
																},
																"nativeSrc": "12007:29:7",
																"nodeType": "YulFunctionCall",
																"src": "12007:29:7"
															},
															"nativeSrc": "12007:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "12007:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
												"nativeSrc": "11822:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11920:6:7",
														"nodeType": "YulTypedName",
														"src": "11920:6:7",
														"type": ""
													}
												],
												"src": "11822:221:7"
											},
											{
												"body": {
													"nativeSrc": "12195:220:7",
													"nodeType": "YulBlock",
													"src": "12195:220:7",
													"statements": [
														{
															"nativeSrc": "12205:74:7",
															"nodeType": "YulAssignment",
															"src": "12205:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12271:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12271:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12276:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12276:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12212:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12212:58:7"
																},
																"nativeSrc": "12212:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12212:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12205:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12205:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12377:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12377:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																	"nativeSrc": "12288:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12288:88:7"
																},
																"nativeSrc": "12288:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12288:93:7"
															},
															"nativeSrc": "12288:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12288:93:7"
														},
														{
															"nativeSrc": "12390:19:7",
															"nodeType": "YulAssignment",
															"src": "12390:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12401:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12401:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12406:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12397:3:7"
																},
																"nativeSrc": "12397:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12397:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12390:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12049:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12183:3:7",
														"nodeType": "YulTypedName",
														"src": "12183:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12191:3:7",
														"nodeType": "YulTypedName",
														"src": "12191:3:7",
														"type": ""
													}
												],
												"src": "12049:366:7"
											},
											{
												"body": {
													"nativeSrc": "12592:248:7",
													"nodeType": "YulBlock",
													"src": "12592:248:7",
													"statements": [
														{
															"nativeSrc": "12602:26:7",
															"nodeType": "YulAssignment",
															"src": "12602:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12614:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12614:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12625:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12625:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12610:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12610:3:7"
																},
																"nativeSrc": "12610:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12610:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12602:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12602:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12649:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12649:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12660:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12660:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12645:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12645:3:7"
																		},
																		"nativeSrc": "12645:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12645:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12668:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12668:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12674:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12674:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12664:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12664:3:7"
																		},
																		"nativeSrc": "12664:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12664:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12638:6:7"
																},
																"nativeSrc": "12638:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12638:47:7"
															},
															"nativeSrc": "12638:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12638:47:7"
														},
														{
															"nativeSrc": "12694:139:7",
															"nodeType": "YulAssignment",
															"src": "12694:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12828:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12828:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12702:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12702:124:7"
																},
																"nativeSrc": "12702:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12702:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12694:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12694:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12421:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12572:9:7",
														"nodeType": "YulTypedName",
														"src": "12572:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12587:4:7",
														"nodeType": "YulTypedName",
														"src": "12587:4:7",
														"type": ""
													}
												],
												"src": "12421:419:7"
											},
											{
												"body": {
													"nativeSrc": "12952:73:7",
													"nodeType": "YulBlock",
													"src": "12952:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12974:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12982:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12982:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12970:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:7"
																		},
																		"nativeSrc": "12970:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12970:14:7"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206c696d6974206578636565646564",
																		"kind": "string",
																		"nativeSrc": "12986:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12986:31:7",
																		"type": "",
																		"value": "Token transfer limit exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:7"
																},
																"nativeSrc": "12963:55:7",
																"nodeType": "YulFunctionCall",
																"src": "12963:55:7"
															},
															"nativeSrc": "12963:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "12963:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
												"nativeSrc": "12846:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12944:6:7",
														"nodeType": "YulTypedName",
														"src": "12944:6:7",
														"type": ""
													}
												],
												"src": "12846:179:7"
											},
											{
												"body": {
													"nativeSrc": "13177:220:7",
													"nodeType": "YulBlock",
													"src": "13177:220:7",
													"statements": [
														{
															"nativeSrc": "13187:74:7",
															"nodeType": "YulAssignment",
															"src": "13187:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13253:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13253:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13258:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13258:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13194:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13194:58:7"
																},
																"nativeSrc": "13194:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13194:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13187:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13187:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13359:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13359:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
																	"nativeSrc": "13270:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13270:88:7"
																},
																"nativeSrc": "13270:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13270:93:7"
															},
															"nativeSrc": "13270:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13270:93:7"
														},
														{
															"nativeSrc": "13372:19:7",
															"nodeType": "YulAssignment",
															"src": "13372:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13383:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13383:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13388:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13379:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13379:3:7"
																},
																"nativeSrc": "13379:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13379:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13372:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13031:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13165:3:7",
														"nodeType": "YulTypedName",
														"src": "13165:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13173:3:7",
														"nodeType": "YulTypedName",
														"src": "13173:3:7",
														"type": ""
													}
												],
												"src": "13031:366:7"
											},
											{
												"body": {
													"nativeSrc": "13574:248:7",
													"nodeType": "YulBlock",
													"src": "13574:248:7",
													"statements": [
														{
															"nativeSrc": "13584:26:7",
															"nodeType": "YulAssignment",
															"src": "13584:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13596:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13596:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13607:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13607:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13592:3:7"
																},
																"nativeSrc": "13592:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13592:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13584:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13584:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13631:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13631:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13642:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13642:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13627:3:7"
																		},
																		"nativeSrc": "13627:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13627:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13650:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13650:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13656:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13656:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13646:3:7"
																		},
																		"nativeSrc": "13646:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13646:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13620:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13620:6:7"
																},
																"nativeSrc": "13620:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13620:47:7"
															},
															"nativeSrc": "13620:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13620:47:7"
														},
														{
															"nativeSrc": "13676:139:7",
															"nodeType": "YulAssignment",
															"src": "13676:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13810:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13810:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13684:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13684:124:7"
																},
																"nativeSrc": "13684:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13684:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13676:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13676:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13403:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13554:9:7",
														"nodeType": "YulTypedName",
														"src": "13554:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13569:4:7",
														"nodeType": "YulTypedName",
														"src": "13569:4:7",
														"type": ""
													}
												],
												"src": "13403:419:7"
											},
											{
												"body": {
													"nativeSrc": "13856:152:7",
													"nodeType": "YulBlock",
													"src": "13856:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13873:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13873:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13876:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13876:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13866:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13866:6:7"
																},
																"nativeSrc": "13866:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13866:88:7"
															},
															"nativeSrc": "13866:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13866:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13970:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13970:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13973:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13973:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13963:6:7"
																},
																"nativeSrc": "13963:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13963:15:7"
															},
															"nativeSrc": "13963:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13963:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13994:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13994:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13997:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13997:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:7"
																},
																"nativeSrc": "13987:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13987:15:7"
															},
															"nativeSrc": "13987:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13987:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13828:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13828:180:7"
											},
											{
												"body": {
													"nativeSrc": "14058:147:7",
													"nodeType": "YulBlock",
													"src": "14058:147:7",
													"statements": [
														{
															"nativeSrc": "14068:25:7",
															"nodeType": "YulAssignment",
															"src": "14068:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14091:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14091:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14073:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14073:17:7"
																},
																"nativeSrc": "14073:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14073:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14068:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14068:1:7"
																}
															]
														},
														{
															"nativeSrc": "14102:25:7",
															"nodeType": "YulAssignment",
															"src": "14102:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14125:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14125:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14107:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14107:17:7"
																},
																"nativeSrc": "14107:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14107:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14102:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14102:1:7"
																}
															]
														},
														{
															"nativeSrc": "14136:16:7",
															"nodeType": "YulAssignment",
															"src": "14136:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14147:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14147:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14150:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14150:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14143:3:7"
																},
																"nativeSrc": "14143:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14143:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14136:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14176:22:7",
																"nodeType": "YulBlock",
																"src": "14176:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14178:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14178:16:7"
																			},
																			"nativeSrc": "14178:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14178:18:7"
																		},
																		"nativeSrc": "14178:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14178:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14168:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14168:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14171:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14165:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14165:2:7"
																},
																"nativeSrc": "14165:10:7",
																"nodeType": "YulFunctionCall",
																"src": "14165:10:7"
															},
															"nativeSrc": "14162:36:7",
															"nodeType": "YulIf",
															"src": "14162:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14014:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14045:1:7",
														"nodeType": "YulTypedName",
														"src": "14045:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14048:1:7",
														"nodeType": "YulTypedName",
														"src": "14048:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14054:3:7",
														"nodeType": "YulTypedName",
														"src": "14054:3:7",
														"type": ""
													}
												],
												"src": "14014:191:7"
											},
											{
												"body": {
													"nativeSrc": "14317:64:7",
													"nodeType": "YulBlock",
													"src": "14317:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14339:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14339:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14347:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14347:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14335:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14335:3:7"
																		},
																		"nativeSrc": "14335:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14335:14:7"
																	},
																	{
																		"hexValue": "436f6f6c646f776e2074696d6520706572696f64",
																		"kind": "string",
																		"nativeSrc": "14351:22:7",
																		"nodeType": "YulLiteral",
																		"src": "14351:22:7",
																		"type": "",
																		"value": "Cooldown time period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14328:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14328:6:7"
																},
																"nativeSrc": "14328:46:7",
																"nodeType": "YulFunctionCall",
																"src": "14328:46:7"
															},
															"nativeSrc": "14328:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "14328:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
												"nativeSrc": "14211:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14309:6:7",
														"nodeType": "YulTypedName",
														"src": "14309:6:7",
														"type": ""
													}
												],
												"src": "14211:170:7"
											},
											{
												"body": {
													"nativeSrc": "14533:220:7",
													"nodeType": "YulBlock",
													"src": "14533:220:7",
													"statements": [
														{
															"nativeSrc": "14543:74:7",
															"nodeType": "YulAssignment",
															"src": "14543:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14609:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14609:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14614:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14614:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14550:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14550:58:7"
																},
																"nativeSrc": "14550:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14550:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14543:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14543:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14715:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14715:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
																	"nativeSrc": "14626:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14626:88:7"
																},
																"nativeSrc": "14626:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14626:93:7"
															},
															"nativeSrc": "14626:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14626:93:7"
														},
														{
															"nativeSrc": "14728:19:7",
															"nodeType": "YulAssignment",
															"src": "14728:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14739:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14739:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14744:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14735:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14735:3:7"
																},
																"nativeSrc": "14735:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14735:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14387:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14521:3:7",
														"nodeType": "YulTypedName",
														"src": "14521:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14529:3:7",
														"nodeType": "YulTypedName",
														"src": "14529:3:7",
														"type": ""
													}
												],
												"src": "14387:366:7"
											},
											{
												"body": {
													"nativeSrc": "14930:248:7",
													"nodeType": "YulBlock",
													"src": "14930:248:7",
													"statements": [
														{
															"nativeSrc": "14940:26:7",
															"nodeType": "YulAssignment",
															"src": "14940:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14952:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14952:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14963:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14963:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14948:3:7"
																},
																"nativeSrc": "14948:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14948:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14940:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14940:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14987:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14987:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14998:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14998:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14983:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14983:3:7"
																		},
																		"nativeSrc": "14983:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14983:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15006:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15006:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15012:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15012:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15002:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:7"
																		},
																		"nativeSrc": "15002:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14976:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14976:6:7"
																},
																"nativeSrc": "14976:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14976:47:7"
															},
															"nativeSrc": "14976:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14976:47:7"
														},
														{
															"nativeSrc": "15032:139:7",
															"nodeType": "YulAssignment",
															"src": "15032:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15166:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15166:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15040:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15040:124:7"
																},
																"nativeSrc": "15040:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15040:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15032:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15032:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14759:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14910:9:7",
														"nodeType": "YulTypedName",
														"src": "14910:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14925:4:7",
														"nodeType": "YulTypedName",
														"src": "14925:4:7",
														"type": ""
													}
												],
												"src": "14759:419:7"
											},
											{
												"body": {
													"nativeSrc": "15232:362:7",
													"nodeType": "YulBlock",
													"src": "15232:362:7",
													"statements": [
														{
															"nativeSrc": "15242:25:7",
															"nodeType": "YulAssignment",
															"src": "15242:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15265:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15265:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15247:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15247:17:7"
																},
																"nativeSrc": "15247:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15247:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15242:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15242:1:7"
																}
															]
														},
														{
															"nativeSrc": "15276:25:7",
															"nodeType": "YulAssignment",
															"src": "15276:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15299:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15299:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15281:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15281:17:7"
																},
																"nativeSrc": "15281:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15281:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15276:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15276:1:7"
																}
															]
														},
														{
															"nativeSrc": "15310:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "15310:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15333:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15333:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15336:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15329:3:7"
																},
																"nativeSrc": "15329:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15329:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15314:11:7",
																	"nodeType": "YulTypedName",
																	"src": "15314:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15347:41:7",
															"nodeType": "YulAssignment",
															"src": "15347:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15376:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "15376:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15358:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15358:17:7"
																},
																"nativeSrc": "15358:30:7",
																"nodeType": "YulFunctionCall",
																"src": "15358:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15347:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "15347:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15565:22:7",
																"nodeType": "YulBlock",
																"src": "15565:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15567:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15567:16:7"
																			},
																			"nativeSrc": "15567:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15567:18:7"
																		},
																		"nativeSrc": "15567:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15567:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15498:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15498:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15491:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "15491:6:7"
																				},
																				"nativeSrc": "15491:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15491:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15521:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "15521:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15528:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "15528:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15537:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "15537:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15524:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "15524:3:7"
																						},
																						"nativeSrc": "15524:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "15524:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15518:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15518:2:7"
																				},
																				"nativeSrc": "15518:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15518:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15471:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "15471:2:7"
																		},
																		"nativeSrc": "15471:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15471:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15451:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15451:6:7"
																},
																"nativeSrc": "15451:113:7",
																"nodeType": "YulFunctionCall",
																"src": "15451:113:7"
															},
															"nativeSrc": "15448:139:7",
															"nodeType": "YulIf",
															"src": "15448:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15184:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15215:1:7",
														"nodeType": "YulTypedName",
														"src": "15215:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15218:1:7",
														"nodeType": "YulTypedName",
														"src": "15218:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15224:7:7",
														"nodeType": "YulTypedName",
														"src": "15224:7:7",
														"type": ""
													}
												],
												"src": "15184:410:7"
											},
											{
												"body": {
													"nativeSrc": "15628:152:7",
													"nodeType": "YulBlock",
													"src": "15628:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15645:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15645:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15648:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15648:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15638:6:7"
																},
																"nativeSrc": "15638:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15638:88:7"
															},
															"nativeSrc": "15638:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15638:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15742:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15742:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15745:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15745:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15735:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15735:6:7"
																},
																"nativeSrc": "15735:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15735:15:7"
															},
															"nativeSrc": "15735:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15735:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15766:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15766:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15769:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15769:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15759:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15759:6:7"
																},
																"nativeSrc": "15759:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15759:15:7"
															},
															"nativeSrc": "15759:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15759:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15600:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15600:180:7"
											},
											{
												"body": {
													"nativeSrc": "15828:143:7",
													"nodeType": "YulBlock",
													"src": "15828:143:7",
													"statements": [
														{
															"nativeSrc": "15838:25:7",
															"nodeType": "YulAssignment",
															"src": "15838:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15861:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15861:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15843:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15843:17:7"
																},
																"nativeSrc": "15843:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15843:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15838:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15838:1:7"
																}
															]
														},
														{
															"nativeSrc": "15872:25:7",
															"nodeType": "YulAssignment",
															"src": "15872:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15895:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15895:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15877:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15877:17:7"
																},
																"nativeSrc": "15877:20:7",
																"nodeType": "YulFunctionCall",
																"src": "15877:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15872:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15872:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15919:22:7",
																"nodeType": "YulBlock",
																"src": "15919:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15921:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15921:16:7"
																			},
																			"nativeSrc": "15921:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15921:18:7"
																		},
																		"nativeSrc": "15921:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15921:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15916:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15916:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15909:6:7"
																},
																"nativeSrc": "15909:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15909:9:7"
															},
															"nativeSrc": "15906:35:7",
															"nodeType": "YulIf",
															"src": "15906:35:7"
														},
														{
															"nativeSrc": "15951:14:7",
															"nodeType": "YulAssignment",
															"src": "15951:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15960:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15960:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15963:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "15963:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15956:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15956:3:7"
																},
																"nativeSrc": "15956:9:7",
																"nodeType": "YulFunctionCall",
																"src": "15956:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15951:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "15951:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15786:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15817:1:7",
														"nodeType": "YulTypedName",
														"src": "15817:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15820:1:7",
														"nodeType": "YulTypedName",
														"src": "15820:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15826:1:7",
														"nodeType": "YulTypedName",
														"src": "15826:1:7",
														"type": ""
													}
												],
												"src": "15786:185:7"
											},
											{
												"body": {
													"nativeSrc": "16022:149:7",
													"nodeType": "YulBlock",
													"src": "16022:149:7",
													"statements": [
														{
															"nativeSrc": "16032:25:7",
															"nodeType": "YulAssignment",
															"src": "16032:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16055:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16055:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16037:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16037:17:7"
																},
																"nativeSrc": "16037:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16037:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16032:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16032:1:7"
																}
															]
														},
														{
															"nativeSrc": "16066:25:7",
															"nodeType": "YulAssignment",
															"src": "16066:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16089:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16089:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16071:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16071:17:7"
																},
																"nativeSrc": "16071:20:7",
																"nodeType": "YulFunctionCall",
																"src": "16071:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16066:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "16066:1:7"
																}
															]
														},
														{
															"nativeSrc": "16100:17:7",
															"nodeType": "YulAssignment",
															"src": "16100:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16112:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16112:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16115:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16115:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16108:3:7"
																},
																"nativeSrc": "16108:9:7",
																"nodeType": "YulFunctionCall",
																"src": "16108:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16100:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16100:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16142:22:7",
																"nodeType": "YulBlock",
																"src": "16142:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16144:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "16144:16:7"
																			},
																			"nativeSrc": "16144:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16144:18:7"
																		},
																		"nativeSrc": "16144:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16144:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16133:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16133:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16139:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "16139:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16130:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16130:2:7"
																},
																"nativeSrc": "16130:11:7",
																"nodeType": "YulFunctionCall",
																"src": "16130:11:7"
															},
															"nativeSrc": "16127:37:7",
															"nodeType": "YulIf",
															"src": "16127:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15977:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16008:1:7",
														"nodeType": "YulTypedName",
														"src": "16008:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16011:1:7",
														"nodeType": "YulTypedName",
														"src": "16011:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16017:4:7",
														"nodeType": "YulTypedName",
														"src": "16017:4:7",
														"type": ""
													}
												],
												"src": "15977:194:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted accounts cannot be w\")\n\n        mstore(add(memPtr, 32), \"hitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Slippage fees cannot be higher t\")\n\n        mstore(add(memPtr, 32), \"han 5%\")\n\n    }\n\n    function abi_encode_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax fee cannot be higher than 10\")\n\n        mstore(add(memPtr, 32), \"%\")\n\n    }\n\n    function abi_encode_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Blacklisted address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Both addresses must be whitelist\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer limit exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cooldown time period\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610225575f3560e01c80636f9170f61161012e578063a9059cbb116100b6578063dd62ed3e1161007a578063dd62ed3e146105e4578063ec28438a14610614578063efc3a4aa14610630578063f2fde38b1461063a578063fe575a871461065657610225565b8063a9059cbb1461054d578063b319c6b71461057d578063b7bda68f1461059b578063ced695a4146105b9578063d51d86f4146105c357610225565b806388210bb1116100fd57806388210bb1146104b95780638c0b5e22146104d55780638da5cb5b146104f357806393af22ff1461051157806395d89b411461052f57610225565b80636f9170f6146104335780636ff732011461046357806370a082311461047f578063715018a6146104af57610225565b8063313ce567116101b15780634ebc552d116101805780634ebc552d146103b5578063537df3b6146103d157806353eb3bcf146103ed5780636b3907ca146103f75780636d8b05271461041557610225565b8063313ce5671461034357806344337ea11461036157806347ee03941461037d578063491924181461039957610225565b806318160ddd116101f857806318160ddd146102b15780631bacad95146102cf57806323b872dd146102eb5780632958ad7f1461031b5780632973ef2d1461032557610225565b806301bf66481461022957806306fdde0314610245578063095ea7b3146102635780630ddc097614610293575b5f5ffd5b610243600480360381019061023e9190611a0f565b610686565b005b61024d6106e5565b60405161025a9190611aaa565b60405180910390f35b61027d60048036038101906102789190611afd565b610775565b60405161028a9190611b55565b60405180910390f35b61029b610797565b6040516102a89190611b7d565b60405180910390f35b6102b961079d565b6040516102c69190611b7d565b60405180910390f35b6102e960048036038101906102e49190611a0f565b6107a6565b005b61030560048036038101906103009190611b96565b610805565b6040516103129190611b55565b60405180910390f35b610323610833565b005b61032d610857565b60405161033a9190611b7d565b60405180910390f35b61034b610860565b6040516103589190611c01565b60405180910390f35b61037b60048036038101906103769190611a0f565b610868565b005b61039760048036038101906103929190611a0f565b6108c8565b005b6103b360048036038101906103ae9190611c1a565b6109b2565b005b6103cf60048036038101906103ca9190611c1a565b610a08565b005b6103eb60048036038101906103e69190611a0f565b610a5e565b005b6103f5610abd565b005b6103ff610ae2565b60405161040c9190611b7d565b60405180910390f35b61041d610ae8565b60405161042a9190611b7d565b60405180910390f35b61044d60048036038101906104489190611a0f565b610af1565b60405161045a9190611b55565b60405180910390f35b61047d60048036038101906104789190611c1a565b610b43565b005b61049960048036038101906104949190611a0f565b610b55565b6040516104a69190611b7d565b60405180910390f35b6104b7610b9a565b005b6104d360048036038101906104ce9190611a0f565b610bac565b005b6104dd610c0c565b6040516104ea9190611b7d565b60405180910390f35b6104fb610c12565b6040516105089190611c54565b60405180910390f35b610519610c3a565b6040516105269190611b7d565b60405180910390f35b610537610c43565b6040516105449190611aaa565b60405180910390f35b61056760048036038101906105629190611afd565b610cd3565b6040516105749190611b55565b60405180910390f35b610585610cf5565b6040516105929190611b7d565b60405180910390f35b6105a3610cfb565b6040516105b09190611c54565b60405180910390f35b6105c1610d21565b005b6105cb610d45565b6040516105db9493929190611c6d565b60405180910390f35b6105fe60048036038101906105f99190611cb0565b610d68565b60405161060b9190611b7d565b60405180910390f35b61062e60048036038101906106299190611c1a565b610dea565b005b610638610dfc565b005b610654600480360381019061064f9190611a0f565b610e21565b005b610670600480360381019061066b9190611a0f565b610ea5565b60405161067d9190611b55565b60405180910390f35b61068e610ef7565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6060600380546106f490611d1b565b80601f016020809104026020016040519081016040528092919081815260200182805461072090611d1b565b801561076b5780601f106107425761010080835404028352916020019161076b565b820191905f5260205f20905b81548152906001019060200180831161074e57829003601f168201915b5050505050905090565b5f5f61077f610f7e565b905061078c818585610f85565b600191505092915050565b60095481565b5f600254905090565b6107ae610ef7565b5f600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f5f61080f610f7e565b905061081c858285610f97565b610827858585611029565b60019150509392505050565b61083b610ef7565b6001600b5f6101000a81548160ff021916908315150217905550565b5f600954905090565b5f6012905090565b610870610ef7565b6001600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6108d0610ef7565b600c5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190611dbb565b60405180910390fd5b6001600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6109ba610ef7565b60058111156109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f590611e49565b60405180910390fd5b80600a8190555050565b610a10610ef7565b600a811115610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611ed7565b60405180910390fd5b8060098190555050565b610a66610ef7565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610ac5610ef7565b6001600b60016101000a81548160ff021916908315150217905550565b600a5481565b5f600754905090565b5f600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610b4b610ef7565b8060088190555050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610ba2610ef7565b610baa611119565b565b610bb4610ef7565b6001600d5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f600a54905090565b606060048054610c5290611d1b565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7e90611d1b565b8015610cc95780601f10610ca057610100808354040283529160200191610cc9565b820191905f5260205f20905b815481529060010190602001808311610cac57829003601f168201915b5050505050905090565b5f5f610cdd610f7e565b9050610cea818585611029565b600191505092915050565b60085481565b600b60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d29610ef7565b5f600b60016101000a81548160ff021916908315150217905550565b5f5f5f5f610d51610c12565b600754600854600654935093509350935090919293565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610df2610ef7565b8060078190555050565b610e04610ef7565b6001600b60166101000a81548160ff021916908315150217905550565b610e29610ef7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e99575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e909190611c54565b60405180910390fd5b610ea28161112c565b50565b5f600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610eff610f7e565b73ffffffffffffffffffffffffffffffffffffffff16610f1d610c12565b73ffffffffffffffffffffffffffffffffffffffff1614610f7c57610f40610f7e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f739190611c54565b60405180910390fd5b565b5f33905090565b610f9283838360016111ef565b505050565b5f610fa28484610d68565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110235781811015611014578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161100b93929190611ef5565b60405180910390fd5b61102284848484035f6111ef565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611099575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110909190611c54565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611109575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111009190611c54565b60405180910390fd5b6111148383836113be565b505050565b611121610ef7565b61112a5f61112c565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361125f575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112569190611c54565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112cf575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c69190611c54565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b8578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113af9190611b7d565b60405180910390a35b50505050565b600c5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615801561145c5750600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b61149b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149290611f74565b60405180910390fd5b600b5f9054906101000a900460ff161561158b57600e5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16801561154b5750600e5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61158a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158190612002565b60405180910390fd5b5b6007548111156115d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c79061206a565b60405180910390fd5b600854600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461161b91906120b5565b42101561165d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165490612132565b60405180910390fd5b42600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600d5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16806117015750600b60019054906101000a900460ff16155b1561171657611711838383611798565b611793565b600b60019054906101000a900460ff1615611792575f6064600a5460095461173e91906120b5565b836117499190612150565b61175391906121be565b9050808261176191906121ee565b915061179084600b60029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611798565b505b5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117e8578060025f8282546117dc91906120b5565b925050819055506118b6565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611871578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161186893929190611ef5565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118fd578060025f8282540392505081905550611947565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516119a49190611b7d565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119de826119b5565b9050919050565b6119ee816119d4565b81146119f8575f5ffd5b50565b5f81359050611a09816119e5565b92915050565b5f60208284031215611a2457611a236119b1565b5b5f611a31848285016119fb565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611a7c82611a3a565b611a868185611a44565b9350611a96818560208601611a54565b611a9f81611a62565b840191505092915050565b5f6020820190508181035f830152611ac28184611a72565b905092915050565b5f819050919050565b611adc81611aca565b8114611ae6575f5ffd5b50565b5f81359050611af781611ad3565b92915050565b5f5f60408385031215611b1357611b126119b1565b5b5f611b20858286016119fb565b9250506020611b3185828601611ae9565b9150509250929050565b5f8115159050919050565b611b4f81611b3b565b82525050565b5f602082019050611b685f830184611b46565b92915050565b611b7781611aca565b82525050565b5f602082019050611b905f830184611b6e565b92915050565b5f5f5f60608486031215611bad57611bac6119b1565b5b5f611bba868287016119fb565b9350506020611bcb868287016119fb565b9250506040611bdc86828701611ae9565b9150509250925092565b5f60ff82169050919050565b611bfb81611be6565b82525050565b5f602082019050611c145f830184611bf2565b92915050565b5f60208284031215611c2f57611c2e6119b1565b5b5f611c3c84828501611ae9565b91505092915050565b611c4e816119d4565b82525050565b5f602082019050611c675f830184611c45565b92915050565b5f608082019050611c805f830187611c45565b611c8d6020830186611b6e565b611c9a6040830185611b6e565b611ca76060830184611b6e565b95945050505050565b5f5f60408385031215611cc657611cc56119b1565b5b5f611cd3858286016119fb565b9250506020611ce4858286016119fb565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611d3257607f821691505b602082108103611d4557611d44611cee565b5b50919050565b7f426c61636b6c6973746564206163636f756e74732063616e6e6f7420626520775f8201527f686974656c697374656400000000000000000000000000000000000000000000602082015250565b5f611da5602a83611a44565b9150611db082611d4b565b604082019050919050565b5f6020820190508181035f830152611dd281611d99565b9050919050565b7f536c69707061676520666565732063616e6e6f742062652068696768657220745f8201527f68616e2035250000000000000000000000000000000000000000000000000000602082015250565b5f611e33602683611a44565b9150611e3e82611dd9565b604082019050919050565b5f6020820190508181035f830152611e6081611e27565b9050919050565b7f546178206665652063616e6e6f7420626520686967686572207468616e2031305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ec1602183611a44565b9150611ecc82611e67565b604082019050919050565b5f6020820190508181035f830152611eee81611eb5565b9050919050565b5f606082019050611f085f830186611c45565b611f156020830185611b6e565b611f226040830184611b6e565b949350505050565b7f426c61636b6c69737465642061646472657373000000000000000000000000005f82015250565b5f611f5e601383611a44565b9150611f6982611f2a565b602082019050919050565b5f6020820190508181035f830152611f8b81611f52565b9050919050565b7f426f746820616464726573736573206d7573742062652077686974656c6973745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f611fec602283611a44565b9150611ff782611f92565b604082019050919050565b5f6020820190508181035f83015261201981611fe0565b9050919050565b7f546f6b656e207472616e73666572206c696d69742065786365656465640000005f82015250565b5f612054601d83611a44565b915061205f82612020565b602082019050919050565b5f6020820190508181035f83015261208181612048565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120bf82611aca565b91506120ca83611aca565b92508282019050808211156120e2576120e1612088565b5b92915050565b7f436f6f6c646f776e2074696d6520706572696f640000000000000000000000005f82015250565b5f61211c601483611a44565b9150612127826120e8565b602082019050919050565b5f6020820190508181035f83015261214981612110565b9050919050565b5f61215a82611aca565b915061216583611aca565b925082820261217381611aca565b9150828204841483151761218a57612189612088565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6121c882611aca565b91506121d383611aca565b9250826121e3576121e2612191565b5b828204905092915050565b5f6121f882611aca565b915061220383611aca565b925082820390508181111561221b5761221a612088565b5b9291505056fea2646970667358221220101ff2a8b897d4bcb96453bcc5f6e97efb9ceee4ba36e6e53ae25328464743a264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x225 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9170F6 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5E4 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xEFC3A4AA EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x656 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0xB319C6B7 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xB7BDA68F EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xCED695A4 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xD51D86F4 EQ PUSH2 0x5C3 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x88210BB1 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x88210BB1 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x93AF22FF EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52F JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0x6FF73201 EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4AF JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4EBC552D GT PUSH2 0x180 JUMPI DUP1 PUSH4 0x4EBC552D EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x53EB3BCF EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x6B3907CA EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x6D8B0527 EQ PUSH2 0x415 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x47EE0394 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x49192418 EQ PUSH2 0x399 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x1BACAD95 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x2958AD7F EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x2973EF2D EQ PUSH2 0x325 JUMPI PUSH2 0x225 JUMP JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xDDC0976 EQ PUSH2 0x293 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x305 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH2 0x833 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xA5E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F5 PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FF PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41D PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x478 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xB43 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0xB9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x537 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x567 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x574 SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C1 PUSH2 0xD21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5CB PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F9 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x638 PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xE21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66B SWAP2 SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6F4 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x720 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x76B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x742 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x76B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x77F PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x78C DUP2 DUP6 DUP6 PUSH2 0xF85 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x80F PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0x81C DUP6 DUP3 DUP6 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x827 DUP6 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x870 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0xC PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x95A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x951 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F5 SWAP1 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA10 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0xA54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP1 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA66 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0xEF7 JUMP JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA2 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xBAA PUSH2 0x1119 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC52 SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC7E SWAP1 PUSH2 0x1D1B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCC9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCC9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCAC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCDD PUSH2 0xF7E JUMP JUMPDEST SWAP1 POP PUSH2 0xCEA DUP2 DUP6 DUP6 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD29 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xD51 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF2 PUSH2 0xEF7 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE04 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE29 PUSH2 0xEF7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA2 DUP2 PUSH2 0x112C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF PUSH2 0xF7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF1D PUSH2 0xC12 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF7C JUMPI PUSH2 0xF40 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF92 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFA2 DUP5 DUP5 PUSH2 0xD68 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1023 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1014 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1022 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11EF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1099 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1109 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1100 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1114 DUP4 DUP4 DUP4 PUSH2 0x13BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1121 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x112A PUSH0 PUSH2 0x112C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B8 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x145C JUMPI POP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x149B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1492 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x158B JUMPI PUSH1 0xE PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x154B JUMPI POP PUSH1 0xE PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x2002 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x15D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C7 SWAP1 PUSH2 0x206A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x161B SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x165D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1654 SWAP1 PUSH2 0x2132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1701 JUMPI POP PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1716 JUMPI PUSH2 0x1711 DUP4 DUP4 DUP4 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST PUSH1 0xB PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1792 JUMPI PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH2 0x173E SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST DUP4 PUSH2 0x1749 SWAP2 SWAP1 PUSH2 0x2150 JUMP JUMPDEST PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x21BE JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x1761 SWAP2 SWAP1 PUSH2 0x21EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1790 DUP5 PUSH1 0xB PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x1798 JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x20B5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18B6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1871 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1868 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18FD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1947 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x19A4 SWAP2 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE DUP3 PUSH2 0x19B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EE DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A09 DUP2 PUSH2 0x19E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A24 JUMPI PUSH2 0x1A23 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A31 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7C DUP3 PUSH2 0x1A3A JUMP JUMPDEST PUSH2 0x1A86 DUP2 DUP6 PUSH2 0x1A44 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x1A9F DUP2 PUSH2 0x1A62 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC2 DUP2 DUP5 PUSH2 0x1A72 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADC DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF7 DUP2 PUSH2 0x1AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH2 0x1B12 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B20 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B31 DUP6 DUP3 DUP7 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B77 DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAC PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BBA DUP7 DUP3 DUP8 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1BCB DUP7 DUP3 DUP8 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1BDC DUP7 DUP3 DUP8 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFB DUP2 PUSH2 0x1BE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C14 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2F JUMPI PUSH2 0x1C2E PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3C DUP5 DUP3 DUP6 ADD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4E DUP2 PUSH2 0x19D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C67 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C80 PUSH0 DUP4 ADD DUP8 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1C9A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1CA7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH2 0x1CC5 PUSH2 0x19B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD3 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE4 DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D32 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D45 JUMPI PUSH2 0x1D44 PUSH2 0x1CEE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564206163636F756E74732063616E6E6F742062652077 PUSH0 DUP3 ADD MSTORE PUSH32 0x686974656C697374656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA5 PUSH1 0x2A DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB0 DUP3 PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DD2 DUP2 PUSH2 0x1D99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536C69707061676520666565732063616E6E6F74206265206869676865722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E2035250000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E33 PUSH1 0x26 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3E DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E60 DUP2 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546178206665652063616E6E6F7420626520686967686572207468616E203130 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC1 PUSH1 0x21 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECC DUP3 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEE DUP2 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F08 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C45 JUMP JUMPDEST PUSH2 0x1F15 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1F22 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B6E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x426C61636B6C6973746564206164647265737300000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5E PUSH1 0x13 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F69 DUP3 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F8B DUP2 PUSH2 0x1F52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x426F746820616464726573736573206D7573742062652077686974656C697374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FEC PUSH1 0x22 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF7 DUP3 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2019 DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206C696D6974206578636565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2054 PUSH1 0x1D DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x205F DUP3 PUSH2 0x2020 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2081 DUP2 PUSH2 0x2048 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20BF DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x20CA DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E2 JUMPI PUSH2 0x20E1 PUSH2 0x2088 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436F6F6C646F776E2074696D6520706572696F64000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x211C PUSH1 0x14 DUP4 PUSH2 0x1A44 JUMP JUMPDEST SWAP2 POP PUSH2 0x2127 DUP3 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2149 DUP2 PUSH2 0x2110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215A DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2165 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2173 DUP2 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x218A JUMPI PUSH2 0x2189 PUSH2 0x2088 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x21C8 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x21D3 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x2191 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21F8 DUP3 PUSH2 0x1ACA JUMP JUMPDEST SWAP2 POP PUSH2 0x2203 DUP4 PUSH2 0x1ACA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x221B JUMPI PUSH2 0x221A PUSH2 0x2088 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x1F CALLCODE 0xA8 0xB8 SWAP8 0xD4 0xBC 0xB9 PUSH5 0x53BCC5F6E9 PUSH31 0xFB9CEEE4BA36E6E53AE25328464743A264736F6C634300081C003300000000 ",
							"sourceMap": "174:5029:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2235:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5069:127:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1266:98:6;;;:::i;:::-;;4647:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1914:149:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1659:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4740:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4376:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2076:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1478:80;;;:::i;:::-;;396:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2874:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2525:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3191:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1071:187:6;;;:::i;:::-;;4940:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;277:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4545:96:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:40:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1566:82;;;:::i;:::-;;2997:180;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2669:193:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1372:98;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2385:132:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2235:140;1531:13:0;:11;:13::i;:::-;2358:5:6::1;2336:10;:19;2347:7;2336:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2235:140:::0;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;366:27:6:-;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;5069:127:6:-;1531:13:0;:11;:13::i;:::-;5179:5:6::1;5159:8;:17;5168:7;5159:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5069:127:::0;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1266:98:6:-;1531:13:0;:11;:13::i;:::-;1352:4:6::1;1331:20;;:25;;;;;;;;;;;;;;;;;;1266:98::o:0;4647:84::-;4690:7;4716;;4709:14;;4647:84;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;1914:149:6:-;1531:13:0;:11;:13::i;:::-;2033:4:6::1;2011:10;:19;2022:7;2011:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1914:149:::0;:::o;1659:239::-;1531:13:0;:11;:13::i;:::-;1767:10:6::1;:19;1778:7;1767:19;;;;;;;;;;;;;;;;;;;;;;;;;1766:20;1758:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1870:4;1848:10;:19;1859:7;1848:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1659:239:::0;:::o;4740:192::-;1531:13:0;:11;:13::i;:::-;4842:1:6::1;4826:14;:17;;4818:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4910:14;4897:12;:27;;;;4740:192:::0;:::o;4376:161::-;1531:13:0;:11;:13::i;:::-;4461:2:6::1;4450:9;:13;;4442:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4520:9;4512:7;:17;;;;4376:161:::0;:::o;2076:147::-;1531:13:0;:11;:13::i;:::-;2206:5:6::1;2184:10;:19;2195:7;2184:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2076:147:::0;:::o;1478:80::-;1531:13:0;:11;:13::i;:::-;1546:4:6::1;1534:11;;:16;;;;;;;;;;;;;;;;;;1478:80::o:0;396:32::-;;;;:::o;2874:111::-;2922:7;2952:11;;2945:18;;2874:111;:::o;2525:132::-;2588:4;2626:10;:19;2637:7;2626:19;;;;;;;;;;;;;;;;;;;;;;;;;2619:26;;2525:132;;;:::o;3191:129::-;1531:13:0;:11;:13::i;:::-;3287:15:6::1;3274:12;:28;;;;3191:129:::0;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1071:187:6:-;1531:13:0;:11;:13::i;:::-;1225:25:6::1;:23;:25::i;:::-;1071:187::o:0;4940:121::-;1531:13:0;:11;:13::i;:::-;5045:4:6::1;5025:8;:17;5034:7;5025:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;4940:121:::0;:::o;277:43::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;4545:96:6:-;4595:7;4621:12;;4614:19;;4545:96;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;323:40:6:-;;;;:::o;512:25::-;;;;;;;;;;;;;:::o;1566:82::-;1531:13:0;:11;:13::i;:::-;1635:5:6::1;1623:11;;:17;;;;;;;;;;;;;;;;;;1566:82::o:0;2997:180::-;3050:7;3059;3068;3077;3118;:5;:7::i;:::-;3126:11;;3138:12;;3151:13;;3110:55;;;;;;;;2997:180;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2669:193:6:-;1531:13:0;:11;:13::i;:::-;2765:14:6::1;2751:11;:28;;;;2669:193:::0;:::o;1372:98::-;1531:13:0;:11;:13::i;:::-;1458:4:6::1;1437:20;;:25;;;;;;;;;;;;;;;;;;1372:98::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2385:132:6:-;2448:4;2486:10;:19;2497:7;2486:19;;;;;;;;;;;;;;;;;;;;;;;;;2479:26;;2385:132;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;3330:951:6:-;3426:10;:14;3437:2;3426:14;;;;;;;;;;;;;;;;;;;;;;;;;3425:15;:36;;;;;3445:10;:16;3456:4;3445:16;;;;;;;;;;;;;;;;;;;;;;;;;3444:17;3425:36;3417:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3498:20;;;;;;;;;;;3495:132;;;3542:10;:16;3553:4;3542:16;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;;;3562:10;:14;3573:2;3562:14;;;;;;;;;;;;;;;;;;;;;;;;;3542:34;3534:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3495:132;3654:11;;3645:5;:20;;3637:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3755:12;;3736:11;:17;3748:4;3736:17;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;3717:15;:50;;3709:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3822:15;3802:11;:17;3814:4;3802:17;;;;;;;;;;;;;;;:35;;;;3867:8;:14;3876:4;3867:14;;;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3886:11;;;;;;;;;;;3885:12;3867:30;3864:396;;;3975:30;3989:4;3995:2;3999:5;3975:13;:30::i;:::-;3864:396;;;4025:11;;;;;;;;;;;4022:238;;;4053:17;4106:3;4091:12;;4083:7;;:20;;;;:::i;:::-;4074:5;:30;;;;:::i;:::-;4073:36;;;;:::i;:::-;4053:56;;4186:9;4178:5;:17;;;;:::i;:::-;4169:26;;4210:38;4224:4;4230:10;;;;;;;;;;;4242:5;4210:13;:38::i;:::-;4037:223;4022:238;3864:396;3330:951;;;:::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:99::-;1228:6;1262:5;1256:12;1246:22;;1176:99;;;:::o;1281:169::-;1365:11;1399:6;1394:3;1387:19;1439:4;1434:3;1430:14;1415:29;;1281:169;;;;:::o;1456:139::-;1545:6;1540:3;1535;1529:23;1586:1;1577:6;1572:3;1568:16;1561:27;1456:139;;;:::o;1601:102::-;1642:6;1693:2;1689:7;1684:2;1677:5;1673:14;1669:28;1659:38;;1601:102;;;:::o;1709:377::-;1797:3;1825:39;1858:5;1825:39;:::i;:::-;1880:71;1944:6;1939:3;1880:71;:::i;:::-;1873:78;;1960:65;2018:6;2013:3;2006:4;1999:5;1995:16;1960:65;:::i;:::-;2050:29;2072:6;2050:29;:::i;:::-;2045:3;2041:39;2034:46;;1801:285;1709:377;;;;:::o;2092:313::-;2205:4;2243:2;2232:9;2228:18;2220:26;;2292:9;2286:4;2282:20;2278:1;2267:9;2263:17;2256:47;2320:78;2393:4;2384:6;2320:78;:::i;:::-;2312:86;;2092:313;;;;:::o;2411:77::-;2448:7;2477:5;2466:16;;2411:77;;;:::o;2494:122::-;2567:24;2585:5;2567:24;:::i;:::-;2560:5;2557:35;2547:63;;2606:1;2603;2596:12;2547:63;2494:122;:::o;2622:139::-;2668:5;2706:6;2693:20;2684:29;;2722:33;2749:5;2722:33;:::i;:::-;2622:139;;;;:::o;2767:474::-;2835:6;2843;2892:2;2880:9;2871:7;2867:23;2863:32;2860:119;;;2898:79;;:::i;:::-;2860:119;3018:1;3043:53;3088:7;3079:6;3068:9;3064:22;3043:53;:::i;:::-;3033:63;;2989:117;3145:2;3171:53;3216:7;3207:6;3196:9;3192:22;3171:53;:::i;:::-;3161:63;;3116:118;2767:474;;;;;:::o;3247:90::-;3281:7;3324:5;3317:13;3310:21;3299:32;;3247:90;;;:::o;3343:109::-;3424:21;3439:5;3424:21;:::i;:::-;3419:3;3412:34;3343:109;;:::o;3458:210::-;3545:4;3583:2;3572:9;3568:18;3560:26;;3596:65;3658:1;3647:9;3643:17;3634:6;3596:65;:::i;:::-;3458:210;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:553::-;5945:4;5983:3;5972:9;5968:19;5960:27;;5997:71;6065:1;6054:9;6050:17;6041:6;5997:71;:::i;:::-;6078:72;6146:2;6135:9;6131:18;6122:6;6078:72;:::i;:::-;6160;6228:2;6217:9;6213:18;6204:6;6160:72;:::i;:::-;6242;6310:2;6299:9;6295:18;6286:6;6242:72;:::i;:::-;5768:553;;;;;;;:::o;6327:474::-;6395:6;6403;6452:2;6440:9;6431:7;6427:23;6423:32;6420:119;;;6458:79;;:::i;:::-;6420:119;6578:1;6603:53;6648:7;6639:6;6628:9;6624:22;6603:53;:::i;:::-;6593:63;;6549:117;6705:2;6731:53;6776:7;6767:6;6756:9;6752:22;6731:53;:::i;:::-;6721:63;;6676:118;6327:474;;;;;:::o;6807:180::-;6855:77;6852:1;6845:88;6952:4;6949:1;6942:15;6976:4;6973:1;6966:15;6993:320;7037:6;7074:1;7068:4;7064:12;7054:22;;7121:1;7115:4;7111:12;7142:18;7132:81;;7198:4;7190:6;7186:17;7176:27;;7132:81;7260:2;7252:6;7249:14;7229:18;7226:38;7223:84;;7279:18;;:::i;:::-;7223:84;7044:269;6993:320;;;:::o;7319:229::-;7459:34;7455:1;7447:6;7443:14;7436:58;7528:12;7523:2;7515:6;7511:15;7504:37;7319:229;:::o;7554:366::-;7696:3;7717:67;7781:2;7776:3;7717:67;:::i;:::-;7710:74;;7793:93;7882:3;7793:93;:::i;:::-;7911:2;7906:3;7902:12;7895:19;;7554:366;;;:::o;7926:419::-;8092:4;8130:2;8119:9;8115:18;8107:26;;8179:9;8173:4;8169:20;8165:1;8154:9;8150:17;8143:47;8207:131;8333:4;8207:131;:::i;:::-;8199:139;;7926:419;;;:::o;8351:225::-;8491:34;8487:1;8479:6;8475:14;8468:58;8560:8;8555:2;8547:6;8543:15;8536:33;8351:225;:::o;8582:366::-;8724:3;8745:67;8809:2;8804:3;8745:67;:::i;:::-;8738:74;;8821:93;8910:3;8821:93;:::i;:::-;8939:2;8934:3;8930:12;8923:19;;8582:366;;;:::o;8954:419::-;9120:4;9158:2;9147:9;9143:18;9135:26;;9207:9;9201:4;9197:20;9193:1;9182:9;9178:17;9171:47;9235:131;9361:4;9235:131;:::i;:::-;9227:139;;8954:419;;;:::o;9379:220::-;9519:34;9515:1;9507:6;9503:14;9496:58;9588:3;9583:2;9575:6;9571:15;9564:28;9379:220;:::o;9605:366::-;9747:3;9768:67;9832:2;9827:3;9768:67;:::i;:::-;9761:74;;9844:93;9933:3;9844:93;:::i;:::-;9962:2;9957:3;9953:12;9946:19;;9605:366;;;:::o;9977:419::-;10143:4;10181:2;10170:9;10166:18;10158:26;;10230:9;10224:4;10220:20;10216:1;10205:9;10201:17;10194:47;10258:131;10384:4;10258:131;:::i;:::-;10250:139;;9977:419;;;:::o;10402:442::-;10551:4;10589:2;10578:9;10574:18;10566:26;;10602:71;10670:1;10659:9;10655:17;10646:6;10602:71;:::i;:::-;10683:72;10751:2;10740:9;10736:18;10727:6;10683:72;:::i;:::-;10765;10833:2;10822:9;10818:18;10809:6;10765:72;:::i;:::-;10402:442;;;;;;:::o;10850:169::-;10990:21;10986:1;10978:6;10974:14;10967:45;10850:169;:::o;11025:366::-;11167:3;11188:67;11252:2;11247:3;11188:67;:::i;:::-;11181:74;;11264:93;11353:3;11264:93;:::i;:::-;11382:2;11377:3;11373:12;11366:19;;11025:366;;;:::o;11397:419::-;11563:4;11601:2;11590:9;11586:18;11578:26;;11650:9;11644:4;11640:20;11636:1;11625:9;11621:17;11614:47;11678:131;11804:4;11678:131;:::i;:::-;11670:139;;11397:419;;;:::o;11822:221::-;11962:34;11958:1;11950:6;11946:14;11939:58;12031:4;12026:2;12018:6;12014:15;12007:29;11822:221;:::o;12049:366::-;12191:3;12212:67;12276:2;12271:3;12212:67;:::i;:::-;12205:74;;12288:93;12377:3;12288:93;:::i;:::-;12406:2;12401:3;12397:12;12390:19;;12049:366;;;:::o;12421:419::-;12587:4;12625:2;12614:9;12610:18;12602:26;;12674:9;12668:4;12664:20;12660:1;12649:9;12645:17;12638:47;12702:131;12828:4;12702:131;:::i;:::-;12694:139;;12421:419;;;:::o;12846:179::-;12986:31;12982:1;12974:6;12970:14;12963:55;12846:179;:::o;13031:366::-;13173:3;13194:67;13258:2;13253:3;13194:67;:::i;:::-;13187:74;;13270:93;13359:3;13270:93;:::i;:::-;13388:2;13383:3;13379:12;13372:19;;13031:366;;;:::o;13403:419::-;13569:4;13607:2;13596:9;13592:18;13584:26;;13656:9;13650:4;13646:20;13642:1;13631:9;13627:17;13620:47;13684:131;13810:4;13684:131;:::i;:::-;13676:139;;13403:419;;;:::o;13828:180::-;13876:77;13873:1;13866:88;13973:4;13970:1;13963:15;13997:4;13994:1;13987:15;14014:191;14054:3;14073:20;14091:1;14073:20;:::i;:::-;14068:25;;14107:20;14125:1;14107:20;:::i;:::-;14102:25;;14150:1;14147;14143:9;14136:16;;14171:3;14168:1;14165:10;14162:36;;;14178:18;;:::i;:::-;14162:36;14014:191;;;;:::o;14211:170::-;14351:22;14347:1;14339:6;14335:14;14328:46;14211:170;:::o;14387:366::-;14529:3;14550:67;14614:2;14609:3;14550:67;:::i;:::-;14543:74;;14626:93;14715:3;14626:93;:::i;:::-;14744:2;14739:3;14735:12;14728:19;;14387:366;;;:::o;14759:419::-;14925:4;14963:2;14952:9;14948:18;14940:26;;15012:9;15006:4;15002:20;14998:1;14987:9;14983:17;14976:47;15040:131;15166:4;15040:131;:::i;:::-;15032:139;;14759:419;;;:::o;15184:410::-;15224:7;15247:20;15265:1;15247:20;:::i;:::-;15242:25;;15281:20;15299:1;15281:20;:::i;:::-;15276:25;;15336:1;15333;15329:9;15358:30;15376:11;15358:30;:::i;:::-;15347:41;;15537:1;15528:7;15524:15;15521:1;15518:22;15498:1;15491:9;15471:83;15448:139;;15567:18;;:::i;:::-;15448:139;15232:362;15184:410;;;;:::o;15600:180::-;15648:77;15645:1;15638:88;15745:4;15742:1;15735:15;15769:4;15766:1;15759:15;15786:185;15826:1;15843:20;15861:1;15843:20;:::i;:::-;15838:25;;15877:20;15895:1;15877:20;:::i;:::-;15872:25;;15916:1;15906:35;;15921:18;;:::i;:::-;15906:35;15963:1;15960;15956:9;15951:14;;15786:185;;;;:::o;15977:194::-;16017:4;16037:20;16055:1;16037:20;:::i;:::-;16032:25;;16071:20;16089:1;16071:20;:::i;:::-;16066:25;;16115:1;16112;16108:9;16100:17;;16139:1;16133:4;16130:11;16127:37;;;16144:18;;:::i;:::-;16127:37;15977:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1758200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addExemptionToTaxes(address)": "infinite",
								"addToBlacklist(address)": "infinite",
								"addToWhiteList(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"cooldownTime()": "2492",
								"decimals()": "384",
								"disableTax()": "infinite",
								"enableBlackListing()": "infinite",
								"enableTax()": "infinite",
								"enableWhiteListing()": "infinite",
								"getContractDetials()": "infinite",
								"getMaxTxAmount()": "2565",
								"getSlippageFees()": "2543",
								"getTaxes()": "2566",
								"isBlacklisted(address)": "3002",
								"isWhiteListed(address)": "2916",
								"maxTxAmount()": "2492",
								"name()": "infinite",
								"owner()": "2604",
								"removeExemptionFromTaxes(address)": "infinite",
								"removeFromBlacklist(address)": "infinite",
								"removeFromWhiteList(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setCooldownTime(uint256)": "infinite",
								"setMaxTxAmount(uint256)": "infinite",
								"setSlippageFees(uint256)": "infinite",
								"setTaxes(uint256)": "infinite",
								"slippageFees()": "2536",
								"symbol()": "infinite",
								"taxAddress()": "2648",
								"taxFees()": "2538",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 264,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 264,
									"end": 272,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 264,
									"end": 274,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 264,
									"end": 274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 260,
									"end": 262,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 260,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 260,
									"end": 274,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 274,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 260,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 260,
									"end": 274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 260,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 248,
									"end": 257,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 248,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 248,
									"end": 274,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 248,
									"end": 274,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 248,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 248,
									"end": 274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 248,
									"end": 274,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 248,
									"end": 274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 216,
									"end": 274,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 216,
									"end": 274,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 307,
									"end": 320,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 307,
									"end": 320,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 277,
									"end": 320,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 277,
									"end": 320,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 354,
									"end": 363,
									"name": "PUSH",
									"source": 6,
									"value": "3C"
								},
								{
									"begin": 323,
									"end": 363,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 323,
									"end": 363,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 392,
									"end": 393,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 366,
									"end": 393,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 366,
									"end": 393,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 427,
									"end": 428,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 396,
									"end": 428,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 396,
									"end": 428,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 468,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 433,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 433,
									"end": 473,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 433,
									"end": 473,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 433,
									"end": 473,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 502,
									"end": 507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 507,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 476,
									"end": 507,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 507,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 476,
									"end": 507,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 476,
									"end": 507,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 476,
									"end": 507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 578,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 542,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 542,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 542,
									"end": 583,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 542,
									"end": 583,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 542,
									"end": 583,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 768,
									"end": 1053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 869,
									"end": 881,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5661756C74436F696E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5661756C74000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 893,
									"end": 926,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 899,
									"end": 911,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 912,
									"end": 925,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 912,
									"end": 925,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 893,
									"end": 898,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 893,
									"end": 898,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 893,
									"end": 898,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 893,
									"end": 926,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 893,
									"end": 926,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 893,
									"end": 926,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 893,
									"end": 926,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 893,
									"end": 926,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1008,
									"end": 1012,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 981,
									"end": 991,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1004,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1005,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1012,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1034,
									"end": 1045,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1023,
									"end": 1033,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1023,
									"end": 1045,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 768,
									"end": 1053,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 3330,
									"end": 4281,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3330,
									"end": 4281,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3436,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3437,
									"end": 3439,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3426,
									"end": 3440,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3440,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3455,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3456,
									"end": 3460,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3445,
									"end": 3461,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3444,
									"end": 3461,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3425,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3417,
									"end": 3484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3417,
									"end": 3484,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3498,
									"end": 3518,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3495,
									"end": 3627,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3495,
									"end": 3627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3495,
									"end": 3627,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3552,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3553,
									"end": 3557,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3542,
									"end": 3558,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3572,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3573,
									"end": 3575,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3562,
									"end": 3576,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3542,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 3534,
									"end": 3615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 3534,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3495,
									"end": 3627,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3495,
									"end": 3627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3665,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 3654,
									"end": 3665,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3650,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3665,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3645,
									"end": 3665,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 3637,
									"end": 3698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3637,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3767,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3755,
									"end": 3767,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3747,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3748,
									"end": 3752,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3753,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3736,
									"end": 3767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3736,
									"end": 3767,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3732,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3767,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3709,
									"end": 3791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3709,
									"end": 3791,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3837,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3813,
									"name": "PUSH",
									"source": 6,
									"value": "F"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3802,
									"end": 3819,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3837,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3837,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3802,
									"end": 3837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3875,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3876,
									"end": 3880,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3867,
									"end": 3881,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3886,
									"end": 3897,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3885,
									"end": 3897,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3867,
									"end": 3897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 4005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3989,
									"end": 3993,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3995,
									"end": 3997,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3999,
									"end": 4004,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 3988,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3975,
									"end": 3988,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3975,
									"end": 3988,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 4005,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3975,
									"end": 4005,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 4005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3975,
									"end": 4005,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3975,
									"end": 4005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4025,
									"end": 4036,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4260,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4260,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4022,
									"end": 4260,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4053,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4106,
									"end": 4109,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4091,
									"end": 4103,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 4091,
									"end": 4103,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4083,
									"end": 4090,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 4083,
									"end": 4103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4083,
									"end": 4103,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4079,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4074,
									"end": 4104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4074,
									"end": 4104,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4073,
									"end": 4109,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4073,
									"end": 4109,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4053,
									"end": 4109,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4053,
									"end": 4109,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4186,
									"end": 4195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4178,
									"end": 4195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4178,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4169,
									"end": 4195,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4169,
									"end": 4195,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4224,
									"end": 4228,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4230,
									"end": 4240,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4242,
									"end": 4247,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4210,
									"end": 4223,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4210,
									"end": 4223,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4037,
									"end": 4260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4260,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4022,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3864,
									"end": 4260,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 4281,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 4281,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 4281,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 4281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2381,
									"end": 2397,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2317,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2472,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2491,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2551,
									"end": 2559,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2535,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2616,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2614,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2579,
									"end": 2683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2409,
									"end": 2690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2743,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2777,
									"end": 2778,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2759,
									"end": 2779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 2811,
									"end": 2812,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2793,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2845,
									"end": 2846,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2850,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2870,
									"end": 2900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3040,
									"end": 3047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3052,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3012,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3066,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2744,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2696,
									"end": 3106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3302,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3299,
									"end": 3300,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3292,
									"end": 3304,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3476,
									"end": 3483,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3516,
									"end": 3558,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3509,
									"end": 3514,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3559,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3439,
									"end": 3565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3608,
									"end": 3615,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3655,
									"end": 3660,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3637,
									"end": 3661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 3764,
									"end": 3769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3746,
									"end": 3770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3744,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3736,
									"end": 3771,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3782,
									"end": 3783,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3775,
									"end": 3787,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3889,
									"end": 3895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3883,
									"end": 3896,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 3932,
									"end": 3937,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3905,
									"end": 3938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4037,
									"end": 4043,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4086,
									"end": 4088,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4074,
									"end": 4083,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4061,
									"end": 4084,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4057,
									"end": 4089,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4092,
									"end": 4171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 4092,
									"end": 4171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 4054,
									"end": 4173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 4293,
									"end": 4300,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4284,
									"end": 4290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4273,
									"end": 4282,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4269,
									"end": 4291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4237,
									"end": 4301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 4237,
									"end": 4301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4301,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4350,
									"end": 4352,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 4432,
									"end": 4439,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4423,
									"end": 4429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4412,
									"end": 4421,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4408,
									"end": 4430,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4376,
									"end": 4440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 4376,
									"end": 4440,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4366,
									"end": 4440,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4366,
									"end": 4440,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4321,
									"end": 4450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 4457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4515,
									"end": 4521,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4549,
									"end": 4554,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4543,
									"end": 4555,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4533,
									"end": 4555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4463,
									"end": 4562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4568,
									"end": 4748,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4568,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4693,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4613,
									"end": 4614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4606,
									"end": 4694,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4710,
									"end": 4711,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4703,
									"end": 4718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4734,
									"end": 4735,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4727,
									"end": 4742,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4934,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4754,
									"end": 4934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4879,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4799,
									"end": 4800,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4792,
									"end": 4880,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 4903,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4896,
									"end": 4897,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4889,
									"end": 4904,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4923,
									"end": 4927,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4920,
									"end": 4921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4913,
									"end": 4928,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 4990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5021,
									"end": 5022,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5015,
									"end": 5019,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5011,
									"end": 5023,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5023,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5068,
									"end": 5069,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5062,
									"end": 5066,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5058,
									"end": 5070,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5089,
									"end": 5107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5137,
									"end": 5143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5133,
									"end": 5150,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5123,
									"end": 5150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5123,
									"end": 5150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 5079,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5207,
									"end": 5209,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5199,
									"end": 5205,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5210,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5176,
									"end": 5194,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5173,
									"end": 5211,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 5226,
									"end": 5244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 5170,
									"end": 5254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4991,
									"end": 5260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 5260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5315,
									"end": 5319,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5338,
									"end": 5341,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5330,
									"end": 5341,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5330,
									"end": 5341,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5361,
									"end": 5364,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5358,
									"end": 5359,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5351,
									"end": 5365,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5395,
									"end": 5399,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5392,
									"end": 5393,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5382,
									"end": 5400,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5400,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5266,
									"end": 5407,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5497,
									"end": 5499,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5492,
									"end": 5494,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5485,
									"end": 5490,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5481,
									"end": 5495,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5477,
									"end": 5500,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5500,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5467,
									"end": 5500,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5556,
									"end": 5564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5606,
									"end": 5611,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5612,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5575,
									"end": 5612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5512,
									"end": 5619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5694,
									"end": 5700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5744,
									"end": 5745,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5732,
									"end": 5742,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 5797,
									"end": 5863,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5786,
									"end": 5795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5767,
									"end": 5864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 5767,
									"end": 5864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 5915,
									"end": 5923,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5904,
									"end": 5913,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5885,
									"end": 5924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 5885,
									"end": 5924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5924,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5957,
									"end": 5961,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5953,
									"end": 5962,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5951,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5942,
									"end": 5963,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5933,
									"end": 5963,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5933,
									"end": 5963,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6010,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5996,
									"end": 6004,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5992,
									"end": 6011,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5985,
									"end": 5990,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5982,
									"end": 6012,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5972,
									"end": 6012,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5972,
									"end": 6012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 6018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6052,
									"end": 6055,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6073,
									"end": 6078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6078,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6078,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6140,
									"end": 6149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6218,
									"end": 6223,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 6200,
									"end": 6224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 6200,
									"end": 6224,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 6191,
									"end": 6225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 6191,
									"end": 6225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 6173,
									"end": 6226,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 6173,
									"end": 6226,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6090,
									"end": 6232,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6281,
									"end": 6284,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6302,
									"end": 6307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6307,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6307,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6238,
									"end": 6313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6460,
									"end": 6467,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 6429,
									"end": 6468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 6429,
									"end": 6468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6563,
									"end": 6579,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 6539,
									"end": 6580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 6539,
									"end": 6580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6531,
									"end": 6537,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6524,
									"end": 6528,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6518,
									"end": 6529,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 6490,
									"end": 6581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 6490,
									"end": 6581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6484,
									"end": 6488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6477,
									"end": 6582,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6395,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6319,
									"end": 6588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6639,
									"end": 6642,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6660,
									"end": 6661,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6653,
									"end": 6661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6653,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6594,
									"end": 6667,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6594,
									"end": 6667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 6750,
									"end": 6782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 6750,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 6849,
									"end": 6855,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6841,
									"end": 6847,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6835,
									"end": 6839,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 6791,
									"end": 6856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 6791,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6726,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6673,
									"end": 6862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6945,
									"end": 6948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6938,
									"end": 6943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6935,
									"end": 6949,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 7036,
									"end": 7037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7029,
									"end": 7034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 6999,
									"end": 7038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 6999,
									"end": 7038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6972,
									"end": 6973,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6965,
									"end": 6970,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6961,
									"end": 6974,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 6974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6952,
									"end": 6974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 6928,
									"end": 7048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6868,
									"end": 7054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7161,
									"end": 7163,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7156,
									"end": 7159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 7227,
									"end": 7232,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 7195,
									"end": 7233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 7195,
									"end": 7233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 7297,
									"end": 7307,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 7279,
									"end": 7308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 7279,
									"end": 7308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7269,
									"end": 7277,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7309,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7464,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7450,
									"end": 7460,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7447,
									"end": 7465,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7483,
									"end": 7491,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7491,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7491,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 7444,
									"end": 7493,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 7580,
									"end": 7583,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 7562,
									"end": 7584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 7562,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7552,
									"end": 7560,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7548,
									"end": 7585,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7546,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 7506,
									"end": 7586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 7506,
									"end": 7586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 7150,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7060,
									"end": 7603,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7663,
									"end": 7671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7713,
									"end": 7718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7703,
									"end": 7719,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7719,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7609,
									"end": 7726,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7776,
									"end": 7782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 7857,
									"end": 7858,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7853,
									"end": 7859,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7845,
									"end": 7850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7842,
									"end": 7843,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7838,
									"end": 7851,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 7809,
									"end": 7860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 7809,
									"end": 7860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7861,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7890,
									"end": 7894,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7884,
									"end": 7888,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7880,
									"end": 7895,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7895,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7732,
									"end": 7901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7982,
									"end": 7986,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8153,
									"end": 8156,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8147,
									"end": 8151,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 8128,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 8128,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8190,
									"end": 8193,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8187,
									"end": 8188,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8183,
									"end": 8194,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8177,
									"end": 8181,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8174,
									"end": 8195,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8166,
									"end": 8195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 8201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 8356,
									"end": 8359,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 8323,
									"end": 8360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 8323,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8425,
									"end": 8443,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8417,
									"end": 8423,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8414,
									"end": 8444,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 8447,
									"end": 8465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 8447,
									"end": 8465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "tag",
									"source": 7,
									"value": "221"
								},
								{
									"begin": 8411,
									"end": 8467,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 8523,
									"end": 8527,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8517,
									"end": 8528,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 8491,
									"end": 8529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 8491,
									"end": 8529,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 8636,
									"end": 8642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8622,
									"end": 8626,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 8576,
									"end": 8643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 8576,
									"end": 8643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8694,
									"end": 8698,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8681,
									"end": 8698,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8681,
									"end": 8698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8726,
									"end": 8728,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8718,
									"end": 8724,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8715,
									"end": 8729,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8744,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9401,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9417,
									"end": 9423,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9466,
									"end": 9475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9461,
									"end": 9464,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9457,
									"end": 9476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9451,
									"end": 9477,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9442,
									"end": 9477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9442,
									"end": 9477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "tag",
									"source": 7,
									"value": "227"
								},
								{
									"begin": 9414,
									"end": 9491,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 9577,
									"end": 9583,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9570,
									"end": 9575,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 9517,
									"end": 9584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 9517,
									"end": 9584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9504,
									"end": 9585,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9373,
									"end": 9595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 8738,
									"end": 9356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8790,
									"end": 8794,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8786,
									"end": 8795,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8778,
									"end": 8784,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8774,
									"end": 8796,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 8856,
									"end": 8860,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 8824,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "tag",
									"source": 7,
									"value": "229"
								},
								{
									"begin": 8824,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8883,
									"end": 8884,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8911,
									"end": 8918,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8908,
									"end": 8909,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8919,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 8999,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8985,
									"end": 8988,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 9000,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 9001,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8967,
									"end": 8973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8960,
									"end": 9002,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9041,
									"end": 9042,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9033,
									"end": 9039,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9029,
									"end": 9043,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9043,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9043,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9088,
									"end": 9090,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9077,
									"end": 9086,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9073,
									"end": 9091,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9060,
									"end": 9091,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9060,
									"end": 9091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8934,
									"end": 8938,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8931,
									"end": 8932,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8927,
									"end": 8939,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 8897,
									"end": 9105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9139,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9124,
									"end": 9131,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9121,
									"end": 9140,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9200,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 9189,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9182,
									"end": 9201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9176,
									"end": 9202,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 9276,
									"end": 9280,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9268,
									"end": 9274,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9281,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9253,
									"end": 9262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 9234,
									"end": 9282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 9234,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9226,
									"end": 9232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9219,
									"end": 9283,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9141,
									"end": 9297,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 9118,
									"end": 9297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9343,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9339,
									"end": 9340,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9331,
									"end": 9337,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9341,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9345,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9317,
									"end": 9321,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9310,
									"end": 9346,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8745,
									"end": 9356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 9595,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8298,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8206,
									"end": 9601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 9712,
									"end": 9717,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 9694,
									"end": 9718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "tag",
									"source": 7,
									"value": "236"
								},
								{
									"begin": 9694,
									"end": 9718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9689,
									"end": 9692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9682,
									"end": 9719,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9607,
									"end": 9725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9824,
									"end": 9828,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9864,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9851,
									"end": 9860,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9847,
									"end": 9865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9865,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9865,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 9943,
									"end": 9944,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9928,
									"end": 9945,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9919,
									"end": 9925,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 9875,
									"end": 9946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "tag",
									"source": 7,
									"value": "238"
								},
								{
									"begin": 9875,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10043,
									"end": 10054,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10077,
									"end": 10083,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10072,
									"end": 10075,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10065,
									"end": 10084,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10117,
									"end": 10121,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10112,
									"end": 10115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10108,
									"end": 10122,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10093,
									"end": 10122,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10093,
									"end": 10122,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10303,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 10134,
									"end": 10303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10295,
									"name": "PUSH",
									"source": 7,
									"value": "426C61636B6C6973746564206164647265737300000000000000000000000000"
								},
								{
									"begin": 10270,
									"end": 10271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10262,
									"end": 10268,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10258,
									"end": 10272,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10251,
									"end": 10296,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10134,
									"end": 10303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10309,
									"end": 10675,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 10309,
									"end": 10675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10451,
									"end": 10454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10472,
									"end": 10539,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 10536,
									"end": 10538,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 10531,
									"end": 10534,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10472,
									"end": 10539,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 10472,
									"end": 10539,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10472,
									"end": 10539,
									"name": "tag",
									"source": 7,
									"value": "242"
								},
								{
									"begin": 10472,
									"end": 10539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10465,
									"end": 10539,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10465,
									"end": 10539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10548,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 10637,
									"end": 10640,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10548,
									"end": 10641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 10548,
									"end": 10641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10548,
									"end": 10641,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 10548,
									"end": 10641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10666,
									"end": 10668,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10661,
									"end": 10664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10657,
									"end": 10669,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10650,
									"end": 10669,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10650,
									"end": 10669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10309,
									"end": 10675,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10309,
									"end": 10675,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10309,
									"end": 10675,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10309,
									"end": 10675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 11100,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10681,
									"end": 11100,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10847,
									"end": 10851,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10885,
									"end": 10887,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10874,
									"end": 10883,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10870,
									"end": 10888,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10862,
									"end": 10888,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10862,
									"end": 10888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10934,
									"end": 10943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10928,
									"end": 10932,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10924,
									"end": 10944,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 10920,
									"end": 10921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10909,
									"end": 10918,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10905,
									"end": 10922,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10898,
									"end": 10945,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10962,
									"end": 11093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 11088,
									"end": 11092,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10962,
									"end": 11093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 10962,
									"end": 11093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10962,
									"end": 11093,
									"name": "tag",
									"source": 7,
									"value": "245"
								},
								{
									"begin": 10962,
									"end": 11093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10954,
									"end": 11093,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10954,
									"end": 11093,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 11100,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 11100,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 11100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10681,
									"end": 11100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11106,
									"end": 11327,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 11106,
									"end": 11327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11246,
									"end": 11280,
									"name": "PUSH",
									"source": 7,
									"value": "426F746820616464726573736573206D7573742062652077686974656C697374"
								},
								{
									"begin": 11242,
									"end": 11243,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11234,
									"end": 11240,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11230,
									"end": 11244,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11223,
									"end": 11281,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11315,
									"end": 11319,
									"name": "PUSH",
									"source": 7,
									"value": "6564000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11310,
									"end": 11312,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11302,
									"end": 11308,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11298,
									"end": 11313,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11291,
									"end": 11320,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11106,
									"end": 11327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11106,
									"end": 11327,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11699,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 11333,
									"end": 11699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11475,
									"end": 11478,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11496,
									"end": 11563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11560,
									"end": 11562,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 11555,
									"end": 11558,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11496,
									"end": 11563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 11496,
									"end": 11563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11496,
									"end": 11563,
									"name": "tag",
									"source": 7,
									"value": "248"
								},
								{
									"begin": 11496,
									"end": 11563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11489,
									"end": 11563,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11489,
									"end": 11563,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11572,
									"end": 11665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 11661,
									"end": 11664,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11572,
									"end": 11665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 11572,
									"end": 11665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11572,
									"end": 11665,
									"name": "tag",
									"source": 7,
									"value": "249"
								},
								{
									"begin": 11572,
									"end": 11665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11690,
									"end": 11692,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 11685,
									"end": 11688,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11681,
									"end": 11693,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11674,
									"end": 11693,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11674,
									"end": 11693,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11699,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11699,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11699,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11699,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11705,
									"end": 12124,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 11705,
									"end": 12124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11871,
									"end": 11875,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11909,
									"end": 11911,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11898,
									"end": 11907,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11894,
									"end": 11912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11886,
									"end": 11912,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11886,
									"end": 11912,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11958,
									"end": 11967,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11952,
									"end": 11956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11948,
									"end": 11968,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 11944,
									"end": 11945,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11933,
									"end": 11942,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11929,
									"end": 11946,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11922,
									"end": 11969,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11986,
									"end": 12117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 12112,
									"end": 12116,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11986,
									"end": 12117,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 11986,
									"end": 12117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11986,
									"end": 12117,
									"name": "tag",
									"source": 7,
									"value": "251"
								},
								{
									"begin": 11986,
									"end": 12117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11978,
									"end": 12117,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11978,
									"end": 12117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11705,
									"end": 12124,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11705,
									"end": 12124,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11705,
									"end": 12124,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11705,
									"end": 12124,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12130,
									"end": 12309,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 12130,
									"end": 12309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12270,
									"end": 12301,
									"name": "PUSH",
									"source": 7,
									"value": "546F6B656E207472616E73666572206C696D6974206578636565646564000000"
								},
								{
									"begin": 12266,
									"end": 12267,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12258,
									"end": 12264,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12254,
									"end": 12268,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12247,
									"end": 12302,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12130,
									"end": 12309,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12130,
									"end": 12309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12315,
									"end": 12681,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 12315,
									"end": 12681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12457,
									"end": 12460,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12478,
									"end": 12545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12542,
									"end": 12544,
									"name": "PUSH",
									"source": 7,
									"value": "1D"
								},
								{
									"begin": 12537,
									"end": 12540,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 12478,
									"end": 12545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12478,
									"end": 12545,
									"name": "tag",
									"source": 7,
									"value": "254"
								},
								{
									"begin": 12478,
									"end": 12545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12471,
									"end": 12545,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12471,
									"end": 12545,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12554,
									"end": 12647,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 12643,
									"end": 12646,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12554,
									"end": 12647,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 12554,
									"end": 12647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12554,
									"end": 12647,
									"name": "tag",
									"source": 7,
									"value": "255"
								},
								{
									"begin": 12554,
									"end": 12647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12672,
									"end": 12674,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12667,
									"end": 12670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12663,
									"end": 12675,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12656,
									"end": 12675,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12656,
									"end": 12675,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12315,
									"end": 12681,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12315,
									"end": 12681,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12315,
									"end": 12681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12315,
									"end": 12681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12687,
									"end": 13106,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 12687,
									"end": 13106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12853,
									"end": 12857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12891,
									"end": 12893,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12880,
									"end": 12889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12876,
									"end": 12894,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12868,
									"end": 12894,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12868,
									"end": 12894,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12940,
									"end": 12949,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12934,
									"end": 12938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12930,
									"end": 12950,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 12926,
									"end": 12927,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12915,
									"end": 12924,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12911,
									"end": 12928,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12904,
									"end": 12951,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12968,
									"end": 13099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 13094,
									"end": 13098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12968,
									"end": 13099,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 12968,
									"end": 13099,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12968,
									"end": 13099,
									"name": "tag",
									"source": 7,
									"value": "257"
								},
								{
									"begin": 12968,
									"end": 13099,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12960,
									"end": 13099,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12960,
									"end": 13099,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12687,
									"end": 13106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12687,
									"end": 13106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12687,
									"end": 13106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12687,
									"end": 13106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13152,
									"end": 13155,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13171,
									"end": 13191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 13189,
									"end": 13190,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13171,
									"end": 13191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 13171,
									"end": 13191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13171,
									"end": 13191,
									"name": "tag",
									"source": 7,
									"value": "259"
								},
								{
									"begin": 13171,
									"end": 13191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13166,
									"end": 13191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13166,
									"end": 13191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13205,
									"end": 13225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 13223,
									"end": 13224,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13205,
									"end": 13225,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 13205,
									"end": 13225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13205,
									"end": 13225,
									"name": "tag",
									"source": 7,
									"value": "260"
								},
								{
									"begin": 13205,
									"end": 13225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13200,
									"end": 13225,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13200,
									"end": 13225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13248,
									"end": 13249,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13245,
									"end": 13246,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13241,
									"end": 13250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13234,
									"end": 13250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13234,
									"end": 13250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13269,
									"end": 13272,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 13266,
									"end": 13267,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13263,
									"end": 13273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 13260,
									"end": 13296,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 13260,
									"end": 13296,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 13260,
									"end": 13296,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 13276,
									"end": 13294,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13276,
									"end": 13294,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 13276,
									"end": 13294,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13276,
									"end": 13294,
									"name": "tag",
									"source": 7,
									"value": "262"
								},
								{
									"begin": 13276,
									"end": 13294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13260,
									"end": 13296,
									"name": "tag",
									"source": 7,
									"value": "261"
								},
								{
									"begin": 13260,
									"end": 13296,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13112,
									"end": 13303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13309,
									"end": 13479,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 13309,
									"end": 13479,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13449,
									"end": 13471,
									"name": "PUSH",
									"source": 7,
									"value": "436F6F6C646F776E2074696D6520706572696F64000000000000000000000000"
								},
								{
									"begin": 13445,
									"end": 13446,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13437,
									"end": 13443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13433,
									"end": 13447,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13426,
									"end": 13472,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 13309,
									"end": 13479,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13309,
									"end": 13479,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13485,
									"end": 13851,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 13485,
									"end": 13851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13627,
									"end": 13630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13648,
									"end": 13715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13712,
									"end": 13714,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 13707,
									"end": 13710,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13648,
									"end": 13715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 13648,
									"end": 13715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13648,
									"end": 13715,
									"name": "tag",
									"source": 7,
									"value": "265"
								},
								{
									"begin": 13648,
									"end": 13715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13641,
									"end": 13715,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13641,
									"end": 13715,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13724,
									"end": 13817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13813,
									"end": 13816,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13724,
									"end": 13817,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 13724,
									"end": 13817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13724,
									"end": 13817,
									"name": "tag",
									"source": 7,
									"value": "266"
								},
								{
									"begin": 13724,
									"end": 13817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13842,
									"end": 13844,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13837,
									"end": 13840,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13833,
									"end": 13845,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13826,
									"end": 13845,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13826,
									"end": 13845,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13485,
									"end": 13851,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13485,
									"end": 13851,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13485,
									"end": 13851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13485,
									"end": 13851,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13857,
									"end": 14276,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 13857,
									"end": 14276,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14023,
									"end": 14027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14061,
									"end": 14063,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 14050,
									"end": 14059,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14046,
									"end": 14064,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14038,
									"end": 14064,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14038,
									"end": 14064,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14110,
									"end": 14119,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14104,
									"end": 14108,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14100,
									"end": 14120,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 14096,
									"end": 14097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14085,
									"end": 14094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14081,
									"end": 14098,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 14074,
									"end": 14121,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14138,
									"end": 14269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 14264,
									"end": 14268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14138,
									"end": 14269,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 14138,
									"end": 14269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14138,
									"end": 14269,
									"name": "tag",
									"source": 7,
									"value": "268"
								},
								{
									"begin": 14138,
									"end": 14269,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14130,
									"end": 14269,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14130,
									"end": 14269,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13857,
									"end": 14276,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13857,
									"end": 14276,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13857,
									"end": 14276,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13857,
									"end": 14276,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14282,
									"end": 14462,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 14282,
									"end": 14462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14330,
									"end": 14407,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14327,
									"end": 14328,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14320,
									"end": 14408,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14427,
									"end": 14431,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 14424,
									"end": 14425,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 14417,
									"end": 14432,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14451,
									"end": 14455,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 14448,
									"end": 14449,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14441,
									"end": 14456,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14508,
									"end": 14509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14525,
									"end": 14545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14543,
									"end": 14544,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14525,
									"end": 14545,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 14525,
									"end": 14545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14525,
									"end": 14545,
									"name": "tag",
									"source": 7,
									"value": "271"
								},
								{
									"begin": 14525,
									"end": 14545,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14520,
									"end": 14545,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14520,
									"end": 14545,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14559,
									"end": 14579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 14577,
									"end": 14578,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14559,
									"end": 14579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 14559,
									"end": 14579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14559,
									"end": 14579,
									"name": "tag",
									"source": 7,
									"value": "272"
								},
								{
									"begin": 14559,
									"end": 14579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14554,
									"end": 14579,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14554,
									"end": 14579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14598,
									"end": 14599,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14588,
									"end": 14623,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 14588,
									"end": 14623,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 14603,
									"end": 14621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 14603,
									"end": 14621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 14603,
									"end": 14621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14603,
									"end": 14621,
									"name": "tag",
									"source": 7,
									"value": "274"
								},
								{
									"begin": 14603,
									"end": 14621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14588,
									"end": 14623,
									"name": "tag",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 14588,
									"end": 14623,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14645,
									"end": 14646,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14642,
									"end": 14643,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14638,
									"end": 14647,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 14633,
									"end": 14647,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14633,
									"end": 14647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14468,
									"end": 14653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14699,
									"end": 14703,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 14719,
									"end": 14739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 14737,
									"end": 14738,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14719,
									"end": 14739,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 14719,
									"end": 14739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14719,
									"end": 14739,
									"name": "tag",
									"source": 7,
									"value": "276"
								},
								{
									"begin": 14719,
									"end": 14739,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14714,
									"end": 14739,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14714,
									"end": 14739,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14753,
									"end": 14773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "277"
								},
								{
									"begin": 14771,
									"end": 14772,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 14753,
									"end": 14773,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 14753,
									"end": 14773,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14753,
									"end": 14773,
									"name": "tag",
									"source": 7,
									"value": "277"
								},
								{
									"begin": 14753,
									"end": 14773,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14748,
									"end": 14773,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14748,
									"end": 14773,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14797,
									"end": 14798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14794,
									"end": 14795,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14790,
									"end": 14799,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 14782,
									"end": 14799,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14782,
									"end": 14799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14821,
									"end": 14822,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14815,
									"end": 14819,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14812,
									"end": 14823,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 14809,
									"end": 14846,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 14809,
									"end": 14846,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 14809,
									"end": 14846,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 14826,
									"end": 14844,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "279"
								},
								{
									"begin": 14826,
									"end": 14844,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 14826,
									"end": 14844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14826,
									"end": 14844,
									"name": "tag",
									"source": 7,
									"value": "279"
								},
								{
									"begin": 14826,
									"end": 14844,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14809,
									"end": 14846,
									"name": "tag",
									"source": 7,
									"value": "278"
								},
								{
									"begin": 14809,
									"end": 14846,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14659,
									"end": 14853,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14859,
									"end": 14977,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 14859,
									"end": 14977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14946,
									"end": 14970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 14964,
									"end": 14969,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 14946,
									"end": 14970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 14946,
									"end": 14970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14946,
									"end": 14970,
									"name": "tag",
									"source": 7,
									"value": "281"
								},
								{
									"begin": 14946,
									"end": 14970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14941,
									"end": 14944,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 14934,
									"end": 14971,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 14859,
									"end": 14977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14859,
									"end": 14977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14859,
									"end": 14977,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15132,
									"end": 15136,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15170,
									"end": 15172,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 15159,
									"end": 15168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15155,
									"end": 15173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15147,
									"end": 15173,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15147,
									"end": 15173,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15183,
									"end": 15254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "283"
								},
								{
									"begin": 15251,
									"end": 15252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15240,
									"end": 15249,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15236,
									"end": 15253,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15227,
									"end": 15233,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 15183,
									"end": 15254,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 15183,
									"end": 15254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15183,
									"end": 15254,
									"name": "tag",
									"source": 7,
									"value": "283"
								},
								{
									"begin": 15183,
									"end": 15254,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15264,
									"end": 15336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15332,
									"end": 15334,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 15321,
									"end": 15330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15317,
									"end": 15335,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15308,
									"end": 15314,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 15264,
									"end": 15336,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 15264,
									"end": 15336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15264,
									"end": 15336,
									"name": "tag",
									"source": 7,
									"value": "284"
								},
								{
									"begin": 15264,
									"end": 15336,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15346,
									"end": 15418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "285"
								},
								{
									"begin": 15414,
									"end": 15416,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 15403,
									"end": 15412,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15399,
									"end": 15417,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15390,
									"end": 15396,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 15346,
									"end": 15418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 15346,
									"end": 15418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15346,
									"end": 15418,
									"name": "tag",
									"source": 7,
									"value": "285"
								},
								{
									"begin": 15346,
									"end": 15418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14983,
									"end": 15425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15524,
									"end": 15528,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15562,
									"end": 15564,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 15551,
									"end": 15560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 15547,
									"end": 15565,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15539,
									"end": 15565,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 15539,
									"end": 15565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15575,
									"end": 15646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "287"
								},
								{
									"begin": 15643,
									"end": 15644,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 15632,
									"end": 15641,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 15628,
									"end": 15645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 15619,
									"end": 15625,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 15575,
									"end": 15646,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 15575,
									"end": 15646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 15575,
									"end": 15646,
									"name": "tag",
									"source": 7,
									"value": "287"
								},
								{
									"begin": 15575,
									"end": 15646,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 15431,
									"end": 15653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5203,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220101ff2a8b897d4bcb96453bcc5f6e97efb9ceee4ba36e6e53ae25328464743a264736f6c634300081c0033",
									".code": [
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6F9170F6"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "EC28438A"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "EFC3A4AA"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "FE575A87"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "B319C6B7"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "B7BDA68F"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "CED695A4"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "D51D86F4"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "88210BB1"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "88210BB1"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "8C0B5E22"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "93AF22FF"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6F9170F6"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6FF73201"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "4EBC552D"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "4EBC552D"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "537DF3B6"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "53EB3BCF"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6B3907CA"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6D8B0527"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "44337EA1"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "47EE0394"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "49192418"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "1BACAD95"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "2958AD7F"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "2973EF2D"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "1BF6648"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "DDC0976"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5203,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2235,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2235,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 366,
											"end": 393,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 366,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 366,
											"end": 393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5069,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5069,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1266,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4647,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4647,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1914,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1914,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1659,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1659,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4740,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4740,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4376,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2076,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2076,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2874,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2874,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2525,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2525,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2525,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 3191,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3191,
											"end": 3320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1071,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4940,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4940,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 277,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 277,
											"end": 320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4545,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4545,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 323,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 323,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 323,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 512,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 512,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1566,
											"end": 1648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2997,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2997,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2669,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2669,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1372,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2385,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2385,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2358,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2363,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2235,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 393,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 366,
											"end": 393,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5179,
											"end": 5184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5159,
											"end": 5184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1266,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1331,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1331,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4716,
											"end": 4723,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4647,
											"end": 4731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2011,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2029,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2011,
											"end": 2037,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 2063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1767,
											"end": 1786,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1786,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1758,
											"end": 1832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1758,
											"end": 1832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1848,
											"end": 1858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1866,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1848,
											"end": 1874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4842,
											"end": 4843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4826,
											"end": 4840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4843,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4843,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4818,
											"end": 4886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4818,
											"end": 4886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4910,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4897,
											"end": 4924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4924,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4461,
											"end": 4463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4450,
											"end": 4459,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4463,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4463,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4442,
											"end": 4501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4442,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4512,
											"end": 4529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4529,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1478,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1534,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1534,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2963,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2952,
											"end": 2963,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2588,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2626,
											"end": 2645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3274,
											"end": 3302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3302,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1071,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1225,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1225,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1225,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5025,
											"end": 5033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 5061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 277,
											"end": 320,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 277,
											"end": 320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4633,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4621,
											"end": 4633,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 363,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 323,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 512,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1566,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1623,
											"end": 1634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3118,
											"end": 3125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3126,
											"end": 3137,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3126,
											"end": 3137,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3164,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3151,
											"end": 3164,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2997,
											"end": 3177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2751,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1372,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1437,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1437,
											"end": 1457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1437,
											"end": 1462,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2486,
											"end": 2505,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2479,
											"end": 2505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 4281,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 3330,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3426,
											"end": 3440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3461,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 3425,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3417,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3417,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3495,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3542,
											"end": 3558,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3572,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3562,
											"end": 3576,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3534,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3534,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3495,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 3495,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3637,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 3637,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3747,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3752,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3753,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3736,
											"end": 3767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3736,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3732,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3709,
											"end": 3791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3709,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3813,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3819,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3837,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3802,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3875,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3880,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3867,
											"end": 3881,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3886,
											"end": 3897,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3989,
											"end": 3993,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 3997,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4004,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3975,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3975,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4025,
											"end": 4036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4260,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4022,
											"end": 4260,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4109,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4083,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4083,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4074,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4074,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4073,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4073,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4053,
											"end": 4109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 4178,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 4195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 4195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4224,
											"end": 4228,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4230,
											"end": 4240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4210,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4210,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4022,
											"end": 4260,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4022,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3864,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1275,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1176,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1228,
											"end": 1234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1365,
											"end": 1376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1434,
											"end": 1437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1281,
											"end": 1450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1595,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1456,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1538,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1568,
											"end": 1584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1703,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1601,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1696,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1669,
											"end": 1697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1858,
											"end": 1863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1825,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1864,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1825,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1944,
											"end": 1950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 1942,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1880,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1880,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1951,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1873,
											"end": 1951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2010,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2011,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2072,
											"end": 2078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2050,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2050,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2045,
											"end": 2048,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2246,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2246,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2393,
											"end": 2397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2320,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2398,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2320,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 2567,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2592,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2494,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2713,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 2722,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2863,
											"end": 2895,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2898,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3064,
											"end": 3086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3043,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3033,
											"end": 3096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3171,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3224,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2767,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3317,
											"end": 3330,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3310,
											"end": 3331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3424,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3412,
											"end": 3446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3643,
											"end": 3660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 3596,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3458,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5972,
											"end": 5981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5960,
											"end": 5987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6050,
											"end": 6067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6047,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 5997,
											"end": 6068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 5997,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6135,
											"end": 6144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6131,
											"end": 6149,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6128,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6078,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6078,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6228,
											"end": 6230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6226,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6160,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 6160,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6310,
											"end": 6312,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6308,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6295,
											"end": 6313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6242,
											"end": 6314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6242,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6440,
											"end": 6449,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6438,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6450,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6455,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 6458,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6458,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6420,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 6648,
											"end": 6655,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6624,
											"end": 6646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6603,
											"end": 6656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 6603,
											"end": 6656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6656,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 6776,
											"end": 6783,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 6731,
											"end": 6784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 6731,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6676,
											"end": 6794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6807,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 6807,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6855,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6852,
											"end": 6853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6949,
											"end": 6950,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7074,
											"end": 7075,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7054,
											"end": 7076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7115,
											"end": 7119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7111,
											"end": 7123,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7202,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7203,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7132,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7263,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7229,
											"end": 7247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7226,
											"end": 7264,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7279,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7223,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7548,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7319,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7493,
											"name": "PUSH",
											"source": 7,
											"value": "426C61636B6C6973746564206163636F756E74732063616E6E6F742062652077"
										},
										{
											"begin": 7455,
											"end": 7456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7443,
											"end": 7457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7540,
											"name": "PUSH",
											"source": 7,
											"value": "686974656C697374656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 7523,
											"end": 7525,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7511,
											"end": 7526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7541,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7781,
											"end": 7783,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 7776,
											"end": 7779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 7717,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7784,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7717,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7710,
											"end": 7784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 7882,
											"end": 7885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7793,
											"end": 7886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7886,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 7793,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7906,
											"end": 7909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8345,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7926,
											"end": 8345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8119,
											"end": 8128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8133,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8133,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8188,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8169,
											"end": 8189,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8165,
											"end": 8166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8150,
											"end": 8167,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8143,
											"end": 8190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 8333,
											"end": 8337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8207,
											"end": 8338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8338,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 8207,
											"end": 8338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7926,
											"end": 8345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8576,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8351,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8525,
											"name": "PUSH",
											"source": 7,
											"value": "536C69707061676520666565732063616E6E6F74206265206869676865722074"
										},
										{
											"begin": 8487,
											"end": 8488,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8475,
											"end": 8489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8468,
											"end": 8526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8560,
											"end": 8568,
											"name": "PUSH",
											"source": 7,
											"value": "68616E2035250000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8555,
											"end": 8557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8547,
											"end": 8553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8536,
											"end": 8569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8351,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8948,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 8582,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8804,
											"end": 8807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 8745,
											"end": 8812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8745,
											"end": 8812,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 8745,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8910,
											"end": 8913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8821,
											"end": 8914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 8821,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8939,
											"end": 8941,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8930,
											"end": 8942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8923,
											"end": 8942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8948,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8948,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9120,
											"end": 9124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9207,
											"end": 9216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9197,
											"end": 9217,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9171,
											"end": 9218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 9361,
											"end": 9365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 9235,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9227,
											"end": 9366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8954,
											"end": 9373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9599,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9379,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9519,
											"end": 9553,
											"name": "PUSH",
											"source": 7,
											"value": "546178206665652063616E6E6F7420626520686967686572207468616E203130"
										},
										{
											"begin": 9515,
											"end": 9516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9496,
											"end": 9554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9591,
											"name": "PUSH",
											"source": 7,
											"value": "2500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9583,
											"end": 9585,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9571,
											"end": 9586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9564,
											"end": 9592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9379,
											"end": 9599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9971,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 9605,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9832,
											"end": 9834,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9827,
											"end": 9830,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9768,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 9768,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9768,
											"end": 9835,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 9768,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9933,
											"end": 9936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 9844,
											"end": 9937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9937,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9844,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9962,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9957,
											"end": 9960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9953,
											"end": 9965,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 10396,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9977,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10158,
											"end": 10184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10158,
											"end": 10184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10230,
											"end": 10239,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10224,
											"end": 10228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10194,
											"end": 10241,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 10384,
											"end": 10388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 10258,
											"end": 10389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10258,
											"end": 10389,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 10258,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10250,
											"end": 10389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 10396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 10396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 10396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9977,
											"end": 10396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10551,
											"end": 10555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10589,
											"end": 10591,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10578,
											"end": 10587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10574,
											"end": 10592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10670,
											"end": 10671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10655,
											"end": 10672,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10646,
											"end": 10652,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 10602,
											"end": 10673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10602,
											"end": 10673,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 10602,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10749,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10683,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 10755,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 10683,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 10833,
											"end": 10835,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10822,
											"end": 10831,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 10765,
											"end": 10837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10837,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 10765,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 11019,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10850,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10990,
											"end": 11011,
											"name": "PUSH",
											"source": 7,
											"value": "426C61636B6C6973746564206164647265737300000000000000000000000000"
										},
										{
											"begin": 10986,
											"end": 10987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10974,
											"end": 10988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10967,
											"end": 11012,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 11019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11391,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11025,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11188,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11252,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 11247,
											"end": 11250,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11188,
											"end": 11255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11188,
											"end": 11255,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11188,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11181,
											"end": 11255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11181,
											"end": 11255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11264,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11353,
											"end": 11356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11264,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 11264,
											"end": 11357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11264,
											"end": 11357,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 11264,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 11380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11373,
											"end": 11385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11025,
											"end": 11391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11816,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 11397,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11563,
											"end": 11567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11601,
											"end": 11603,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11590,
											"end": 11599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11650,
											"end": 11659,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11644,
											"end": 11648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11640,
											"end": 11660,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11636,
											"end": 11637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11621,
											"end": 11638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11614,
											"end": 11661,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 11804,
											"end": 11808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 11678,
											"end": 11809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11809,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 11678,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11670,
											"end": 11809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11670,
											"end": 11809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11397,
											"end": 11816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 12043,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 11822,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11996,
											"name": "PUSH",
											"source": 7,
											"value": "426F746820616464726573736573206D7573742062652077686974656C697374"
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11950,
											"end": 11956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11946,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11939,
											"end": 11997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12035,
											"name": "PUSH",
											"source": 7,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12018,
											"end": 12024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12014,
											"end": 12029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12007,
											"end": 12036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 12043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 12043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12415,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 12049,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12212,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 12276,
											"end": 12278,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12271,
											"end": 12274,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 12212,
											"end": 12279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12212,
											"end": 12279,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 12212,
											"end": 12279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12205,
											"end": 12279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12205,
											"end": 12279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12288,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12377,
											"end": 12380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12288,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 12288,
											"end": 12381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12288,
											"end": 12381,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 12288,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12406,
											"end": 12408,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12401,
											"end": 12404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12397,
											"end": 12409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12049,
											"end": 12415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12840,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 12421,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12587,
											"end": 12591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12602,
											"end": 12628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12674,
											"end": 12683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12668,
											"end": 12672,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12664,
											"end": 12684,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12660,
											"end": 12661,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12645,
											"end": 12662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12638,
											"end": 12685,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12828,
											"end": 12832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 12702,
											"end": 12833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12702,
											"end": 12833,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12702,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12694,
											"end": 12833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12421,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13025,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 12846,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12986,
											"end": 13017,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E207472616E73666572206C696D6974206578636565646564000000"
										},
										{
											"begin": 12982,
											"end": 12983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13018,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12846,
											"end": 13025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13397,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 13031,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13173,
											"end": 13176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 13258,
											"end": 13260,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 13253,
											"end": 13256,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 13194,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13261,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 13194,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13187,
											"end": 13261,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13187,
											"end": 13261,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13359,
											"end": 13362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 13270,
											"end": 13363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13270,
											"end": 13363,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13270,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13388,
											"end": 13390,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13379,
											"end": 13391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13391,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13372,
											"end": 13391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13397,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13031,
											"end": 13397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13822,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 13403,
											"end": 13822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13609,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13596,
											"end": 13605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13592,
											"end": 13610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13650,
											"end": 13654,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13666,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13642,
											"end": 13643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13631,
											"end": 13640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13627,
											"end": 13644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13620,
											"end": 13667,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13684,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 13810,
											"end": 13814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13684,
											"end": 13815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 13684,
											"end": 13815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13684,
											"end": 13815,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 13684,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13676,
											"end": 13815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13676,
											"end": 13815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 14008,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 13828,
											"end": 14008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13876,
											"end": 13953,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13873,
											"end": 13874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13866,
											"end": 13954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13973,
											"end": 13977,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13970,
											"end": 13971,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13963,
											"end": 13978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13997,
											"end": 14001,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13987,
											"end": 14002,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14054,
											"end": 14057,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14073,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14073,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14073,
											"end": 14093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14073,
											"end": 14093,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 14073,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14093,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14068,
											"end": 14093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14107,
											"end": 14127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14125,
											"end": 14126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14107,
											"end": 14127,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 14107,
											"end": 14127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14107,
											"end": 14127,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14107,
											"end": 14127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14102,
											"end": 14127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14102,
											"end": 14127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14150,
											"end": 14151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14143,
											"end": 14152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14136,
											"end": 14152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14136,
											"end": 14152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14171,
											"end": 14174,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14168,
											"end": 14169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14165,
											"end": 14175,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14162,
											"end": 14198,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14162,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 14162,
											"end": 14198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14178,
											"end": 14196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 14178,
											"end": 14196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 14178,
											"end": 14196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14178,
											"end": 14196,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 14178,
											"end": 14196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14162,
											"end": 14198,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 14162,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14014,
											"end": 14205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14381,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 14211,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14351,
											"end": 14373,
											"name": "PUSH",
											"source": 7,
											"value": "436F6F6C646F776E2074696D6520706572696F64000000000000000000000000"
										},
										{
											"begin": 14347,
											"end": 14348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14335,
											"end": 14349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14328,
											"end": 14374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14211,
											"end": 14381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14529,
											"end": 14532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 14550,
											"end": 14617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 14550,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 14715,
											"end": 14718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 14626,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 14626,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14744,
											"end": 14746,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14739,
											"end": 14742,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14735,
											"end": 14747,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14387,
											"end": 14753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14387,
											"end": 14753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14925,
											"end": 14929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 14965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14952,
											"end": 14961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14948,
											"end": 14966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14940,
											"end": 14966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15012,
											"end": 15021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15022,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14998,
											"end": 14999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14983,
											"end": 15000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14976,
											"end": 15023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 15166,
											"end": 15170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 15040,
											"end": 15171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 15040,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15032,
											"end": 15171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 15178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 15178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15224,
											"end": 15231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15247,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 15265,
											"end": 15266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15247,
											"end": 15267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15247,
											"end": 15267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15247,
											"end": 15267,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 15247,
											"end": 15267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15242,
											"end": 15267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15242,
											"end": 15267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 15299,
											"end": 15300,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15281,
											"end": 15301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15301,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 15281,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15276,
											"end": 15301,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15276,
											"end": 15301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15329,
											"end": 15338,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 15376,
											"end": 15387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15358,
											"end": 15388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15358,
											"end": 15388,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 15358,
											"end": 15388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15347,
											"end": 15388,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15347,
											"end": 15388,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15528,
											"end": 15535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15524,
											"end": 15539,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15521,
											"end": 15522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15518,
											"end": 15540,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15499,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15491,
											"end": 15500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15471,
											"end": 15554,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15448,
											"end": 15587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 15448,
											"end": 15587,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15567,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15567,
											"end": 15585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 15567,
											"end": 15585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15567,
											"end": 15585,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 15567,
											"end": 15585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15448,
											"end": 15587,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 15448,
											"end": 15587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15232,
											"end": 15594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15184,
											"end": 15594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15600,
											"end": 15780,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 15600,
											"end": 15780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15648,
											"end": 15725,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15645,
											"end": 15646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15638,
											"end": 15726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15735,
											"end": 15750,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15769,
											"end": 15773,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15766,
											"end": 15767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15759,
											"end": 15774,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15826,
											"end": 15827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15843,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15861,
											"end": 15862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15843,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15843,
											"end": 15863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15843,
											"end": 15863,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 15843,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 15895,
											"end": 15896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 15877,
											"end": 15897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15877,
											"end": 15897,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 15877,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15872,
											"end": 15897,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15872,
											"end": 15897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15916,
											"end": 15917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15906,
											"end": 15941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15906,
											"end": 15941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15921,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15921,
											"end": 15939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 15921,
											"end": 15939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15921,
											"end": 15939,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 15921,
											"end": 15939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15906,
											"end": 15941,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 15906,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15963,
											"end": 15964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 15961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15965,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15786,
											"end": 15971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16017,
											"end": 16021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16055,
											"end": 16056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16037,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16037,
											"end": 16057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16037,
											"end": 16057,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 16037,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16032,
											"end": 16057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16032,
											"end": 16057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 16089,
											"end": 16090,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 16071,
											"end": 16091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16071,
											"end": 16091,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 16071,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16066,
											"end": 16091,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16066,
											"end": 16091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16115,
											"end": 16116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16112,
											"end": 16113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16108,
											"end": 16117,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16139,
											"end": 16140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16130,
											"end": 16141,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 16127,
											"end": 16164,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16127,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16127,
											"end": 16164,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16144,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16144,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 16144,
											"end": 16162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16144,
											"end": 16162,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 16144,
											"end": 16162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16127,
											"end": 16164,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 16127,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15977,
											"end": 16171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"VaultCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addExemptionToTaxes(address)": "88210bb1",
							"addToBlacklist(address)": "44337ea1",
							"addToWhiteList(address)": "47ee0394",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cooldownTime()": "b319c6b7",
							"decimals()": "313ce567",
							"disableTax()": "ced695a4",
							"enableBlackListing()": "efc3a4aa",
							"enableTax()": "53eb3bcf",
							"enableWhiteListing()": "2958ad7f",
							"getContractDetials()": "d51d86f4",
							"getMaxTxAmount()": "6d8b0527",
							"getSlippageFees()": "93af22ff",
							"getTaxes()": "2973ef2d",
							"isBlacklisted(address)": "fe575a87",
							"isWhiteListed(address)": "6f9170f6",
							"maxTxAmount()": "8c0b5e22",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeExemptionFromTaxes(address)": "1bacad95",
							"removeFromBlacklist(address)": "537df3b6",
							"removeFromWhiteList(address)": "01bf6648",
							"renounceOwnership()": "715018a6",
							"setCooldownTime(uint256)": "6ff73201",
							"setMaxTxAmount(uint256)": "ec28438a",
							"setSlippageFees(uint256)": "49192418",
							"setTaxes(uint256)": "4ebc552d",
							"slippageFees()": "6b3907ca",
							"symbol()": "95d89b41",
							"taxAddress()": "b7bda68f",
							"taxFees()": "0ddc0976",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_taxAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addExemptionToTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBlackListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhiteListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractDetials\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlippageFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeExemptionFromTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCooldownTime\",\"type\":\"uint256\"}],\"name\":\"setCooldownTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippageFee\",\"type\":\"uint256\"}],\"name\":\"setSlippageFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VaultCoin.sol\":\"VaultCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"VaultCoin.sol\":{\"keccak256\":\"0x56bf279d3ea90104f32b9a343685e5ed84c3e589dc49b3efd8ffcc94d295b1fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef72fd01dd4a63dacddc4a9cf0539df497b40d678bd0baca7999c0b66bca7413\",\"dweb:/ipfs/QmQTEVBNyroFwb5hvxBFY6FrArbTqHetCB21TtvXBzE9W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 949,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "initialSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 952,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "maxTxAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "cooldownTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 958,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "taxFees",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 961,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "slippageFees",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 964,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_whiteListingEnabled",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 967,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_taxEnabled",
								"offset": 1,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 969,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "taxAddress",
								"offset": 2,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 972,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_blackListingEnabled",
								"offset": 22,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 976,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_blackList",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 980,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_taxList",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 984,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_whiteList",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 988,
								"contract": "VaultCoin.sol:VaultCoin",
								"label": "_lastTxTime",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"VaultCoin.sol": {
				"ast": {
					"absolutePath": "VaultCoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"VaultCoin": [
							1401
						]
					},
					"id": 1402,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1402,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1402,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"196:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "196:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "196:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"203:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "203:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "203:7:6"
								}
							],
							"canonicalName": "VaultCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1401,
							"linearizedBaseContracts": [
								1401,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "VaultCoin",
							"nameLocation": "183:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 949,
									"mutability": "mutable",
									"name": "initialSupply",
									"nameLocation": "232:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "216:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030303030303030",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "248:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100000000_by_1",
												"typeString": "int_const 100000000"
											},
											"value": "100000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 947,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 944,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 945,
													"name": "decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 363,
													"src": "264:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
														"typeString": "function () view returns (uint8)"
													}
												},
												"id": 946,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "264:10:6",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"src": "260:14:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "248:26:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8c0b5e22",
									"id": 952,
									"mutability": "mutable",
									"name": "maxTxAmount",
									"nameLocation": "293:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "277:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "277:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 951,
										"name": "initialSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "307:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b319c6b7",
									"id": 955,
									"mutability": "mutable",
									"name": "cooldownTime",
									"nameLocation": "339:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "323:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 953,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "323:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 954,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "354:9:6",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ddc0976",
									"id": 958,
									"mutability": "mutable",
									"name": "taxFees",
									"nameLocation": "382:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "366:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "392:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b3907ca",
									"id": 961,
									"mutability": "mutable",
									"name": "slippageFees",
									"nameLocation": "412:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "396:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "396:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "427:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 964,
									"mutability": "mutable",
									"name": "_whiteListingEnabled",
									"nameLocation": "446:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "433:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 962,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "433:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "468:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 967,
									"mutability": "mutable",
									"name": "_taxEnabled",
									"nameLocation": "489:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "476:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 965,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "476:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 966,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "502:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b7bda68f",
									"id": 969,
									"mutability": "mutable",
									"name": "taxAddress",
									"nameLocation": "527:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "512:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 968,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 972,
									"mutability": "mutable",
									"name": "_blackListingEnabled",
									"nameLocation": "555:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "542:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 970,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "542:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 971,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "578:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 976,
									"mutability": "mutable",
									"name": "_blackList",
									"nameLocation": "619:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "588:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 975,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "596:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "588:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 974,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "605:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 980,
									"mutability": "mutable",
									"name": "_taxList",
									"nameLocation": "663:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "632:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 979,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 977,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "640:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "632:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 978,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "649:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 984,
									"mutability": "mutable",
									"name": "_whiteList",
									"nameLocation": "705:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "674:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 983,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 981,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "682:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "674:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 982,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "691:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 988,
									"mutability": "mutable",
									"name": "_lastTxTime",
									"nameLocation": "752:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1401,
									"src": "718:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 987,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 985,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "718:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 986,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "735:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "882:171:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "899:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "912:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1002,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "893:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "893:33:6"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "981:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "992:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "981:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1008:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "981:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "981:31:6"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1013,
														"name": "taxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "1023:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1014,
														"name": "_taxAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "1034:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1023:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "1023:22:6"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5661756c74436f696e",
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "834:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aab77bd268b784551cc848f0c09b31de1dac6f5259f80ee40d87c95723a998aa",
														"typeString": "literal_string \"VaultCoin\""
													},
													"value": "VaultCoin"
												},
												{
													"hexValue": "5661756c74",
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "847:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8d03f8e727eaf836840d08da04cd9ecc9773328dd38f4a6c7b84a9ec2b88b7c7",
														"typeString": "literal_string \"Vault\""
													},
													"value": "Vault"
												}
											],
											"id": 997,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 994,
												"name": "ERC20",
												"nameLocations": [
													"828:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "828:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "828:27:6"
										},
										{
											"arguments": [
												{
													"id": 999,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "869:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1000,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 998,
												"name": "Ownable",
												"nameLocations": [
													"861:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "861:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "861:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "788:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "780:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_taxAddress",
												"nameLocation": "810:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "802:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:43:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:6"
									},
									"scope": 1401,
									"src": "768:285:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "1125:133:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1024,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1225:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_VaultCoin_$1401_$",
																"typeString": "type(contract super VaultCoin)"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1231:17:6",
														"memberName": "renounceOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1225:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "1225:25:6"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1022,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1021,
												"name": "onlyOwner",
												"nameLocations": [
													"1116:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1116:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1116:9:6"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1080:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1020,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1107:8:6"
									},
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1097:2:6"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:6"
									},
									"scope": 1401,
									"src": "1071:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "1320:44:6",
										"statements": [
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "_whiteListingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1331:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1352:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1331:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1331:25:6"
											}
										]
									},
									"functionSelector": "2958ad7f",
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1033,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1032,
												"name": "onlyOwner",
												"nameLocations": [
													"1305:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1305:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1305:9:6"
										}
									],
									"name": "enableWhiteListing",
									"nameLocation": "1275:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:0:6"
									},
									"scope": 1401,
									"src": "1266:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "1426:44:6",
										"statements": [
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1045,
														"name": "_blackListingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "1437:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1458:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1437:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "1437:25:6"
											}
										]
									},
									"functionSelector": "efc3a4aa",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1042,
												"name": "onlyOwner",
												"nameLocations": [
													"1411:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1411:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1411:9:6"
										}
									],
									"name": "enableBlackListing",
									"nameLocation": "1381:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:2:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1426:0:6"
									},
									"scope": 1401,
									"src": "1372:98:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "1523:35:6",
										"statements": [
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "_taxEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1534:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1546:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1534:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1534:16:6"
											}
										]
									},
									"functionSelector": "53eb3bcf",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1052,
												"name": "onlyOwner",
												"nameLocations": [
													"1508:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1508:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1508:9:6"
										}
									],
									"name": "enableTax",
									"nameLocation": "1487:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1496:2:6"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:6"
									},
									"scope": 1401,
									"src": "1478:80:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "1612:36:6",
										"statements": [
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "_taxEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1623:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1635:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1623:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1623:17:6"
											}
										]
									},
									"functionSelector": "ced695a4",
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1063,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1062,
												"name": "onlyOwner",
												"nameLocations": [
													"1597:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1597:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1597:9:6"
										}
									],
									"name": "disableTax",
									"nameLocation": "1575:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:6"
									},
									"scope": 1401,
									"src": "1566:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "1733:165:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1766:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1078,
																	"name": "_blackList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "1767:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1080,
																"indexExpression": {
																	"id": 1079,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "1778:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1767:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c6973746564206163636f756e74732063616e6e6f742062652077686974656c6973746564",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1787:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd",
																"typeString": "literal_string \"Blacklisted accounts cannot be whitelisted\""
															},
															"value": "Blacklisted accounts cannot be whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba09c284fc223a2539cdfd82289e02dbceb116cc7f48fa12a525cf1003da07cd",
																"typeString": "literal_string \"Blacklisted accounts cannot be whitelisted\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1758:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1758:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1758:74:6"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1085,
															"name": "_whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "1848:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1086,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1859:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1848:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1870:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1848:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "1848:26:6"
											}
										]
									},
									"functionSelector": "47ee0394",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1075,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1074,
												"name": "onlyOwner",
												"nameLocations": [
													"1713:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1713:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1713:9:6"
										}
									],
									"name": "addToWhiteList",
									"nameLocation": "1668:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1691:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "1683:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:17:6"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:6"
									},
									"scope": 1401,
									"src": "1659:239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "1988:75:6",
										"statements": [
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1099,
															"name": "_blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "2011:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1101,
														"indexExpression": {
															"id": 1100,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "2022:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2011:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2033:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2011:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2011:26:6"
											}
										]
									},
									"functionSelector": "44337ea1",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1097,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1096,
												"name": "onlyOwner",
												"nameLocations": [
													"1968:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1968:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1968:9:6"
										}
									],
									"name": "addToBlacklist",
									"nameLocation": "1923:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1946:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1938:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:17:6"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:6"
									},
									"scope": 1401,
									"src": "1914:149:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "2155:68:6",
										"statements": [
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1113,
															"name": "_blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "2184:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1115,
														"indexExpression": {
															"id": 1114,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "2195:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2184:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2206:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2184:27:6"
											}
										]
									},
									"functionSelector": "537df3b6",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1110,
												"name": "onlyOwner",
												"nameLocations": [
													"2135:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2135:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2135:9:6"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "2085:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2113:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "2105:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:17:6"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:6"
									},
									"scope": 1401,
									"src": "2076:147:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "2314:61:6",
										"statements": [
											{
												"expression": {
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1127,
															"name": "_whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2336:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1129,
														"indexExpression": {
															"id": 1128,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2347:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2336:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2358:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2336:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "2336:27:6"
											}
										]
									},
									"functionSelector": "01bf6648",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1124,
												"name": "onlyOwner",
												"nameLocations": [
													"2294:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2294:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2294:9:6"
										}
									],
									"name": "removeFromWhiteList",
									"nameLocation": "2244:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2272:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2264:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2264:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:17:6"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2314:0:6"
									},
									"scope": 1401,
									"src": "2235:140:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2464:53:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1141,
														"name": "_blackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "2486:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1143,
													"indexExpression": {
														"id": 1142,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "2497:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2486:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1144,
												"nodeType": "Return",
												"src": "2479:26:6"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "2394:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2416:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2408:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:17:6"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2448:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2448:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:6:6"
									},
									"scope": 1401,
									"src": "2385:132:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "2604:53:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1153,
														"name": "_whiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2626:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1155,
													"indexExpression": {
														"id": 1154,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "2637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2626:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1156,
												"nodeType": "Return",
												"src": "2619:26:6"
											}
										]
									},
									"functionSelector": "6f9170f6",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhiteListed",
									"nameLocation": "2534:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2556:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2548:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:17:6"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2588:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2588:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:6:6"
									},
									"scope": 1401,
									"src": "2525:132:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "2736:126:6",
										"statements": [
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1165,
														"name": "maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "2751:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1166,
														"name": "newMaxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "2765:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2751:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2751:28:6"
											}
										]
									},
									"functionSelector": "ec28438a",
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1162,
												"name": "onlyOwner",
												"nameLocations": [
													"2726:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2726:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2726:9:6"
										}
									],
									"name": "setMaxTxAmount",
									"nameLocation": "2678:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "newMaxTxAmount",
												"nameLocation": "2701:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2693:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:24:6"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:6"
									},
									"scope": 1401,
									"src": "2669:193:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "2930:55:6",
										"statements": [
											{
												"expression": {
													"id": 1175,
													"name": "maxTxAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "2952:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1174,
												"id": 1176,
												"nodeType": "Return",
												"src": "2945:18:6"
											}
										]
									},
									"functionSelector": "6d8b0527",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTxAmount",
									"nameLocation": "2883:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2922:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2921:9:6"
									},
									"scope": 1401,
									"src": "2874:111:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3095:82:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1189,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "3118:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3118:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "maxTxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "3126:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "cooldownTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3138:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1193,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "3151:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1194,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3117:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1188,
												"id": 1195,
												"nodeType": "Return",
												"src": "3110:55:6"
											}
										]
									},
									"functionSelector": "d51d86f4",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractDetials",
									"nameLocation": "3006:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3024:2:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3050:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3059:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3068:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3077:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:36:6"
									},
									"scope": 1401,
									"src": "2997:180:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "3259:61:6",
										"statements": [
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "cooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3274:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1205,
														"name": "newCooldownTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3287:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3274:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "3274:28:6"
											}
										]
									},
									"functionSelector": "6ff73201",
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "onlyOwner",
												"nameLocations": [
													"3250:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3250:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3250:9:6"
										}
									],
									"name": "setCooldownTime",
									"nameLocation": "3200:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "newCooldownTime",
												"nameLocation": "3224:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "3216:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3216:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3215:25:6"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:6"
									},
									"scope": 1401,
									"src": "3191:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "3406:875:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3425:15:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 1220,
																		"name": "_blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "3426:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1222,
																	"indexExpression": {
																		"id": 1221,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "3437:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3426:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3444:17:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 1224,
																		"name": "_blackList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "3445:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1226,
																	"indexExpression": {
																		"id": 1225,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "3456:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3445:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3425:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c69737465642061646472657373",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3462:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
																"typeString": "literal_string \"Blacklisted address\""
															},
															"value": "Blacklisted address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2651d5b851d6c7a28d47b43648d4b65c1aed1a31cd0731e086d4b04d15c15f",
																"typeString": "literal_string \"Blacklisted address\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3417:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3417:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "3417:67:6"
											},
											{
												"condition": {
													"id": 1232,
													"name": "_whiteListingEnabled",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "3498:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "3495:132:6",
												"trueBody": {
													"id": 1244,
													"nodeType": "Block",
													"src": "3519:108:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1234,
																				"name": "_whiteList",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "3542:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1236,
																			"indexExpression": {
																				"id": 1235,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1211,
																				"src": "3553:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3542:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1237,
																				"name": "_whiteList",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "3562:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1239,
																			"indexExpression": {
																				"id": 1238,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "3573:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3562:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3542:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "426f746820616464726573736573206d7573742062652077686974656c6973746564",
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3578:36:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																			"typeString": "literal_string \"Both addresses must be whitelisted\""
																		},
																		"value": "Both addresses must be whitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5032e67911e269a9ea0a05793d4766aec269515a91208480b4c4c18c58655e72",
																			"typeString": "literal_string \"Both addresses must be whitelisted\""
																		}
																	],
																	"id": 1233,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3534:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:81:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1243,
															"nodeType": "ExpressionStatement",
															"src": "3534:81:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1247,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "3645:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1248,
																"name": "maxTxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "3654:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3645:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206c696d6974206578636565646564",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3666:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
																"typeString": "literal_string \"Token transfer limit exceeded\""
															},
															"value": "Token transfer limit exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4eb1d7f30bc22d9733d03f44b63dbffee886dc10dbac70f08ee9ff2057a1bfca",
																"typeString": "literal_string \"Token transfer limit exceeded\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3637:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3637:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1254,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3717:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3723:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3717:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "_lastTxTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "3736:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1258,
																	"indexExpression": {
																		"id": 1257,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "3748:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3736:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1259,
																	"name": "cooldownTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "3755:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3736:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3717:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6f6c646f776e2074696d6520706572696f64",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3768:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
																"typeString": "literal_string \"Cooldown time period\""
															},
															"value": "Cooldown time period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2fc3b19c9dd54f54f1a14484c0a79000dd97dde44998974f822f7af1a08cc2d",
																"typeString": "literal_string \"Cooldown time period\""
															}
														],
														"id": 1253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3709:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3709:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "3709:82:6"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_lastTxTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "3802:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3814:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3802:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1268,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3828:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3822:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3802:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "3802:35:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1272,
															"name": "_taxList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "3867:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1274,
														"indexExpression": {
															"id": 1273,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3876:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3867:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3885:12:6",
														"subExpression": {
															"id": 1275,
															"name": "_taxEnabled",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "3886:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3867:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1287,
														"name": "_taxEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "4025:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1315,
													"nodeType": "IfStatement",
													"src": "4022:238:6",
													"trueBody": {
														"id": 1314,
														"nodeType": "Block",
														"src": "4037:223:6",
														"statements": [
															{
																"assignments": [
																	1289
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1289,
																		"mutability": "mutable",
																		"name": "totalFees",
																		"nameLocation": "4061:9:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1314,
																		"src": "4053:17:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1288,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4053:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1299,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1290,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1215,
																					"src": "4074:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1293,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1291,
																								"name": "taxFees",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 958,
																								"src": "4083:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1292,
																								"name": "slippageFees",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 961,
																								"src": "4091:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4083:20:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1294,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4082:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4074:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1296,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4073:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4106:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "4073:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4053:56:6"
															},
															{
																"expression": {
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1300,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "4169:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1301,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "4178:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1302,
																			"name": "totalFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "4186:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4178:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4169:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1305,
																"nodeType": "ExpressionStatement",
																"src": "4169:26:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1309,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1211,
																			"src": "4224:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1310,
																			"name": "taxAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "4230:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1311,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "4242:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1306,
																			"name": "super",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967271,
																			"src": "4210:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_super$_VaultCoin_$1401_$",
																				"typeString": "type(contract super VaultCoin)"
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4216:7:6",
																		"memberName": "_update",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 606,
																		"src": "4210:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4210:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1313,
																"nodeType": "ExpressionStatement",
																"src": "4210:38:6"
															}
														]
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "3864:396:6",
												"trueBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "3898:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1281,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "3989:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1282,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "3995:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "3999:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1278,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "3975:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_VaultCoin_$1401_$",
																			"typeString": "type(contract super VaultCoin)"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3981:7:6",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 606,
																	"src": "3975:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3975:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "3975:30:6"
														}
													]
												}
											}
										]
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3339:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1217,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3397:8:6"
									},
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3355:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3347:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3347:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3369:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3361:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3381:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "3373:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3373:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3346:41:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:0:6"
									},
									"scope": 1401,
									"src": "3330:951:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "4431:106:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "newTaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4450:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4461:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "4450:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546178206665652063616e6e6f7420626520686967686572207468616e20313025",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4465:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8",
																"typeString": "literal_string \"Tax fee cannot be higher than 10%\""
															},
															"value": "Tax fee cannot be higher than 10%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d63518065820b426de0697e9daab967160e498bf27c377c9e2aa298211bcf5e8",
																"typeString": "literal_string \"Tax fee cannot be higher than 10%\""
															}
														],
														"id": 1325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4442:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "4442:59:6"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1332,
														"name": "taxFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "4512:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1333,
														"name": "newTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "4520:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4512:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "4512:17:6"
											}
										]
									},
									"functionSelector": "4ebc552d",
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1322,
												"name": "onlyOwner",
												"nameLocations": [
													"4422:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4422:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4422:9:6"
										}
									],
									"name": "setTaxes",
									"nameLocation": "4385:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "newTaxFee",
												"nameLocation": "4402:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "4394:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4393:19:6"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4431:0:6"
									},
									"scope": 1401,
									"src": "4376:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "4603:38:6",
										"statements": [
											{
												"expression": {
													"id": 1342,
													"name": "slippageFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "4621:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1343,
												"nodeType": "Return",
												"src": "4614:19:6"
											}
										]
									},
									"functionSelector": "93af22ff",
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSlippageFees",
									"nameLocation": "4554:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4569:2:6"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "4595:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4594:9:6"
									},
									"scope": 1401,
									"src": "4545:96:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "4698:33:6",
										"statements": [
											{
												"expression": {
													"id": 1350,
													"name": "taxFees",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 958,
													"src": "4716:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1351,
												"nodeType": "Return",
												"src": "4709:14:6"
											}
										]
									},
									"functionSelector": "2973ef2d",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxes",
									"nameLocation": "4656:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4664:2:6"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "4690:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4690:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4689:9:6"
									},
									"scope": 1401,
									"src": "4647:84:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "4807:125:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "newSlippageFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "4826:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4842:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "4826:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520666565732063616e6e6f7420626520686967686572207468616e203525",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4845:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c",
																"typeString": "literal_string \"Slippage fees cannot be higher than 5%\""
															},
															"value": "Slippage fees cannot be higher than 5%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5dd3af9b591aca80e892c2d5138d3a5b62c5bff3aee9bf0dde087edf42eed02c",
																"typeString": "literal_string \"Slippage fees cannot be higher than 5%\""
															}
														],
														"id": 1360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4818:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4818:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "4818:68:6"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1367,
														"name": "slippageFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4897:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1368,
														"name": "newSlippageFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "4910:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4897:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "4897:27:6"
											}
										]
									},
									"functionSelector": "49192418",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1357,
												"name": "onlyOwner",
												"nameLocations": [
													"4798:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4798:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4798:9:6"
										}
									],
									"name": "setSlippageFees",
									"nameLocation": "4749:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "newSlippageFee",
												"nameLocation": "4773:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "4765:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:24:6"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4807:0:6"
									},
									"scope": 1401,
									"src": "4740:192:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "5009:52:6",
										"statements": [
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1379,
															"name": "_taxList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "5025:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1381,
														"indexExpression": {
															"id": 1380,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "5034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5025:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5045:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5025:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "5025:24:6"
											}
										]
									},
									"functionSelector": "88210bb1",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1376,
												"name": "onlyOwner",
												"nameLocations": [
													"4999:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4999:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4999:9:6"
										}
									],
									"name": "addExemptionToTaxes",
									"nameLocation": "4949:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4977:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "4969:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:17:6"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5009:0:6"
									},
									"scope": 1401,
									"src": "4940:121:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "5142:54:6",
										"statements": [
											{
												"expression": {
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1393,
															"name": "_taxList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "5159:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1395,
														"indexExpression": {
															"id": 1394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5168:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5159:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5179:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5159:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "5159:25:6"
											}
										]
									},
									"functionSelector": "1bacad95",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1391,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1390,
												"name": "onlyOwner",
												"nameLocations": [
													"5133:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5133:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5133:9:6"
										}
									],
									"name": "removeExemptionFromTaxes",
									"nameLocation": "5078:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5111:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5103:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:17:6"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5142:0:6"
									},
									"scope": 1401,
									"src": "5069:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1402,
							"src": "174:5029:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:5180:6"
				},
				"id": 6
			}
		}
	}
}